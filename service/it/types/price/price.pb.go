// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v4.25.1
// source: price.proto

package price

import (
	_ "github.com/telecom-cloud/client-go/pkg/openapi/api"
	common "github.com/telecom-cloud/telecomcloud-sdk-go/service/it/types/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderDetailJson string `protobuf:"bytes,1,opt,name=orderDetailJson,proto3" form:"orderDetailJson" json:"orderDetailJson,omitempty" query:"orderDetailJson"`
}

func (x *QueryPriceRequest) Reset() {
	*x = QueryPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_price_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPriceRequest) ProtoMessage() {}

func (x *QueryPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_price_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPriceRequest.ProtoReflect.Descriptor instead.
func (*QueryPriceRequest) Descriptor() ([]byte, []int) {
	return file_price_proto_rawDescGZIP(), []int{0}
}

func (x *QueryPriceRequest) GetOrderDetailJson() string {
	if x != nil {
		return x.OrderDetailJson
	}
	return ""
}

type QueryPriceRequestDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders     []*OrderDetail     `protobuf:"bytes,1,rep,name=orders,proto3" form:"orders" json:"orders,omitempty" query:"orders"`
	CustomInfo *common.CustomInfo `protobuf:"bytes,2,opt,name=customInfo,proto3" form:"customInfo" json:"customInfo,omitempty" query:"customInfo"`
}

func (x *QueryPriceRequestDetail) Reset() {
	*x = QueryPriceRequestDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_price_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPriceRequestDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPriceRequestDetail) ProtoMessage() {}

func (x *QueryPriceRequestDetail) ProtoReflect() protoreflect.Message {
	mi := &file_price_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPriceRequestDetail.ProtoReflect.Descriptor instead.
func (*QueryPriceRequestDetail) Descriptor() ([]byte, []int) {
	return file_price_proto_rawDescGZIP(), []int{1}
}

func (x *QueryPriceRequestDetail) GetOrders() []*OrderDetail {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *QueryPriceRequestDetail) GetCustomInfo() *common.CustomInfo {
	if x != nil {
		return x.CustomInfo
	}
	return nil
}

type OrderDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceCnt int32   `protobuf:"varint,1,opt,name=instanceCnt,proto3" form:"instanceCnt" json:"instanceCnt,omitempty" query:"instanceCnt"`
	CycleCnt    int32   `protobuf:"varint,2,opt,name=cycleCnt,proto3" form:"cycleCnt" json:"cycleCnt,omitempty" query:"cycleCnt"`
	CycleType   int32   `protobuf:"varint,3,opt,name=cycleType,proto3" form:"cycleType" json:"cycleType" query:"cycleType"`
	Items       []*Item `protobuf:"bytes,4,rep,name=items,proto3" form:"items" json:"items,omitempty" query:"items"`
}

func (x *OrderDetail) Reset() {
	*x = OrderDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_price_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail) ProtoMessage() {}

func (x *OrderDetail) ProtoReflect() protoreflect.Message {
	mi := &file_price_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail.ProtoReflect.Descriptor instead.
func (*OrderDetail) Descriptor() ([]byte, []int) {
	return file_price_proto_rawDescGZIP(), []int{2}
}

func (x *OrderDetail) GetInstanceCnt() int32 {
	if x != nil {
		return x.InstanceCnt
	}
	return 0
}

func (x *OrderDetail) GetCycleCnt() int32 {
	if x != nil {
		return x.CycleCnt
	}
	return 0
}

func (x *OrderDetail) GetCycleType() int32 {
	if x != nil {
		return x.CycleType
	}
	return 0
}

func (x *OrderDetail) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Master       bool        `protobuf:"varint,1,opt,name=master,proto3" form:"master" json:"master" query:"master"`
	ResourceType string      `protobuf:"bytes,2,opt,name=resourceType,proto3" form:"resourceType" json:"resourceType,omitempty" query:"resourceType"`
	ServiceTag   string      `protobuf:"bytes,3,opt,name=serviceTag,proto3" form:"serviceTag" json:"serviceTag,omitempty" query:"serviceTag"`
	ItemConfig   *ItemConfig `protobuf:"bytes,4,opt,name=itemConfig,proto3" form:"itemConfig" json:"itemConfig,omitempty" query:"itemConfig"`
	ItemValue    int32       `protobuf:"varint,5,opt,name=itemValue,proto3" form:"itemValue" json:"itemValue,omitempty" query:"itemValue"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_price_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_price_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_price_proto_rawDescGZIP(), []int{3}
}

func (x *Item) GetMaster() bool {
	if x != nil {
		return x.Master
	}
	return false
}

func (x *Item) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *Item) GetServiceTag() string {
	if x != nil {
		return x.ServiceTag
	}
	return ""
}

func (x *Item) GetItemConfig() *ItemConfig {
	if x != nil {
		return x.ItemConfig
	}
	return nil
}

func (x *Item) GetItemValue() int32 {
	if x != nil {
		return x.ItemValue
	}
	return 0
}

type ItemConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version       string `protobuf:"bytes,1,opt,name=version,proto3" form:"version" json:"version,omitempty" query:"version"`
	Edition       string `protobuf:"bytes,2,opt,name=edition,proto3" form:"edition" json:"edition,omitempty" query:"edition"`
	BillMode      string `protobuf:"bytes,3,opt,name=billMode,proto3" form:"billMode" json:"billMode,omitempty" query:"billMode"`
	InstanceName  string `protobuf:"bytes,4,opt,name=instanceName,proto3" form:"instanceName" json:"instanceName,omitempty" query:"instanceName"`
	Type          string `protobuf:"bytes,5,opt,name=type,proto3" form:"type" json:"type,omitempty" query:"type"`
	CpuNum        string `protobuf:"bytes,6,opt,name=cpuNum,proto3" form:"cpuNum" json:"cpuNum,omitempty" query:"cpuNum"`
	MemSize       string `protobuf:"bytes,7,opt,name=memSize,proto3" form:"memSize" json:"memSize,omitempty" query:"memSize"`
	SysVolumeType string `protobuf:"bytes,8,opt,name=sysVolumeType,proto3" form:"sysVolumeType" json:"sysVolumeType,omitempty" query:"sysVolumeType"`
	SysVolumeSize int64  `protobuf:"varint,9,opt,name=sysVolumeSize,proto3" form:"sysVolumeSize" json:"sysVolumeSize,omitempty" query:"sysVolumeSize"`
	RegionId      string `protobuf:"bytes,10,opt,name=regionId,proto3" form:"regionId" json:"regionId,omitempty" query:"regionId"`
	HostType      string `protobuf:"bytes,11,opt,name=hostType,proto3" form:"hostType" json:"hostType,omitempty" query:"hostType"`
	VolumeType    string `protobuf:"bytes,12,opt,name=volumeType,proto3" form:"volumeType" json:"volumeType,omitempty" query:"volumeType"`
	VolumeSize    int32  `protobuf:"varint,13,opt,name=volumeSize,proto3" form:"volumeSize" json:"volumeSize,omitempty" query:"volumeSize"`
}

func (x *ItemConfig) Reset() {
	*x = ItemConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_price_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemConfig) ProtoMessage() {}

func (x *ItemConfig) ProtoReflect() protoreflect.Message {
	mi := &file_price_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemConfig.ProtoReflect.Descriptor instead.
func (*ItemConfig) Descriptor() ([]byte, []int) {
	return file_price_proto_rawDescGZIP(), []int{4}
}

func (x *ItemConfig) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ItemConfig) GetEdition() string {
	if x != nil {
		return x.Edition
	}
	return ""
}

func (x *ItemConfig) GetBillMode() string {
	if x != nil {
		return x.BillMode
	}
	return ""
}

func (x *ItemConfig) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *ItemConfig) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ItemConfig) GetCpuNum() string {
	if x != nil {
		return x.CpuNum
	}
	return ""
}

func (x *ItemConfig) GetMemSize() string {
	if x != nil {
		return x.MemSize
	}
	return ""
}

func (x *ItemConfig) GetSysVolumeType() string {
	if x != nil {
		return x.SysVolumeType
	}
	return ""
}

func (x *ItemConfig) GetSysVolumeSize() int64 {
	if x != nil {
		return x.SysVolumeSize
	}
	return 0
}

func (x *ItemConfig) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *ItemConfig) GetHostType() string {
	if x != nil {
		return x.HostType
	}
	return ""
}

func (x *ItemConfig) GetVolumeType() string {
	if x != nil {
		return x.VolumeType
	}
	return ""
}

func (x *ItemConfig) GetVolumeSize() int32 {
	if x != nil {
		return x.VolumeSize
	}
	return 0
}

type QueryPriceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSucceed        bool             `protobuf:"varint,1,opt,name=isSucceed,proto3" form:"isSucceed" json:"isSucceed,omitempty" query:"isSucceed"`
	TotalPrice       float32          `protobuf:"fixed32,2,opt,name=totalPrice,proto3" form:"totalPrice" json:"totalPrice,omitempty" query:"totalPrice"`
	FinalPrice       float32          `protobuf:"fixed32,3,opt,name=finalPrice,proto3" form:"finalPrice" json:"finalPrice,omitempty" query:"finalPrice"`
	SubOrderPrices   []*SubOrderPrice `protobuf:"bytes,4,rep,name=subOrderPrices,proto3" form:"subOrderPrices" json:"subOrderPrices,omitempty" query:"subOrderPrices"`
	VerifyStatusCode int32            `protobuf:"varint,5,opt,name=verifyStatusCode,proto3" form:"verifyStatusCode" json:"verifyStatusCode,omitempty" query:"verifyStatusCode"`
}

func (x *QueryPriceResponse) Reset() {
	*x = QueryPriceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_price_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPriceResponse) ProtoMessage() {}

func (x *QueryPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_price_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPriceResponse.ProtoReflect.Descriptor instead.
func (*QueryPriceResponse) Descriptor() ([]byte, []int) {
	return file_price_proto_rawDescGZIP(), []int{5}
}

func (x *QueryPriceResponse) GetIsSucceed() bool {
	if x != nil {
		return x.IsSucceed
	}
	return false
}

func (x *QueryPriceResponse) GetTotalPrice() float32 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *QueryPriceResponse) GetFinalPrice() float32 {
	if x != nil {
		return x.FinalPrice
	}
	return 0
}

func (x *QueryPriceResponse) GetSubOrderPrices() []*SubOrderPrice {
	if x != nil {
		return x.SubOrderPrices
	}
	return nil
}

func (x *QueryPriceResponse) GetVerifyStatusCode() int32 {
	if x != nil {
		return x.VerifyStatusCode
	}
	return 0
}

type SubOrderPrice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalPrice float32 `protobuf:"fixed32,1,opt,name=totalPrice,proto3" form:"totalPrice" json:"totalPrice,omitempty" query:"totalPrice"`
	FinalPrice float32 `protobuf:"fixed32,2,opt,name=finalPrice,proto3" form:"finalPrice" json:"finalPrice,omitempty" query:"finalPrice"`
	ServiceTag string  `protobuf:"bytes,3,opt,name=serviceTag,proto3" form:"serviceTag" json:"serviceTag,omitempty" query:"serviceTag"`
}

func (x *SubOrderPrice) Reset() {
	*x = SubOrderPrice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_price_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubOrderPrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubOrderPrice) ProtoMessage() {}

func (x *SubOrderPrice) ProtoReflect() protoreflect.Message {
	mi := &file_price_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubOrderPrice.ProtoReflect.Descriptor instead.
func (*SubOrderPrice) Descriptor() ([]byte, []int) {
	return file_price_proto_rawDescGZIP(), []int{6}
}

func (x *SubOrderPrice) GetTotalPrice() float32 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *SubOrderPrice) GetFinalPrice() float32 {
	if x != nil {
		return x.FinalPrice
	}
	return 0
}

func (x *SubOrderPrice) GetServiceTag() string {
	if x != nil {
		return x.ServiceTag
	}
	return ""
}

type OrderItemPrice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId        string  `protobuf:"bytes,1,opt,name=itemId,proto3" form:"itemId" json:"itemId,omitempty" query:"itemId"`
	ResourceType  string  `protobuf:"bytes,2,opt,name=resourceType,proto3" form:"resourceType" json:"resourceType,omitempty" query:"resourceType"`
	TotalPrice    float32 `protobuf:"fixed32,3,opt,name=totalPrice,proto3" form:"totalPrice" json:"totalPrice,omitempty" query:"totalPrice"`
	FinalPrice    float32 `protobuf:"fixed32,4,opt,name=finalPrice,proto3" form:"finalPrice" json:"finalPrice,omitempty" query:"finalPrice"`
	DiscountPrice float32 `protobuf:"fixed32,5,opt,name=discountPrice,proto3" form:"discountPrice" json:"discountPrice,omitempty" query:"discountPrice"`
}

func (x *OrderItemPrice) Reset() {
	*x = OrderItemPrice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_price_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderItemPrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderItemPrice) ProtoMessage() {}

func (x *OrderItemPrice) ProtoReflect() protoreflect.Message {
	mi := &file_price_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderItemPrice.ProtoReflect.Descriptor instead.
func (*OrderItemPrice) Descriptor() ([]byte, []int) {
	return file_price_proto_rawDescGZIP(), []int{7}
}

func (x *OrderItemPrice) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *OrderItemPrice) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *OrderItemPrice) GetTotalPrice() float32 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *OrderItemPrice) GetFinalPrice() float32 {
	if x != nil {
		return x.FinalPrice
	}
	return 0
}

func (x *OrderItemPrice) GetDiscountPrice() float32 {
	if x != nil {
		return x.DiscountPrice
	}
	return 0
}

var File_price_proto protoreflect.FileDescriptor

var file_price_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3d, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4a, 0x73, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x78, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x2a, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x31,
	0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0xa2, 0x01, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x43, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x43, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x43, 0x6e, 0x74, 0x12,
	0x32, 0x0a, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x14, 0xca, 0xf3, 0x18, 0x10, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x52, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xc6, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x29, 0x0a, 0x06, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x42,
	0x11, 0xca, 0xf3, 0x18, 0x0d, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x22, 0x52, 0x06, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x61, 0x67, 0x12, 0x31,
	0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x8a, 0x03, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x6c, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x6c, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x70, 0x75, 0x4e, 0x75, 0x6d,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x70, 0x75, 0x4e, 0x75, 0x6d, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x6d, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x79, 0x73, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x79, 0x73, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x79, 0x73, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x79, 0x73, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xdc, 0x01, 0x0a,
	0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x3c, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x75, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52,
	0x0e, 0x73, 0x75, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12,
	0x2a, 0x0a, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x6f, 0x0a, 0x0d, 0x53,
	0x75, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x61, 0x67, 0x22, 0xb2, 0x01, 0x0a,
	0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x32, 0xd6, 0x01, 0x0a, 0x0c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x90, 0x01, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0xd2, 0xc1, 0x18, 0x24, 0x2f, 0x76, 0x33, 0x2f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x65, 0x77, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65,
	0xe2, 0xc9, 0x18, 0x21, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x78, 0x2d, 0x77, 0x77, 0x77, 0x2d, 0x66, 0x6f, 0x72, 0x6d, 0x2d, 0x75, 0x72, 0x6c, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x1a, 0x33, 0x92, 0xce, 0x18, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x73,
	0x3a, 0x2f, 0x2f, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2d, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x2e, 0x63, 0x74, 0x61, 0x70, 0x69, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2e, 0x63, 0x74, 0x79, 0x75, 0x6e, 0x2e, 0x63, 0x6e, 0x42, 0x45, 0x5a, 0x43, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d,
	0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x69, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_price_proto_rawDescOnce sync.Once
	file_price_proto_rawDescData = file_price_proto_rawDesc
)

func file_price_proto_rawDescGZIP() []byte {
	file_price_proto_rawDescOnce.Do(func() {
		file_price_proto_rawDescData = protoimpl.X.CompressGZIP(file_price_proto_rawDescData)
	})
	return file_price_proto_rawDescData
}

var file_price_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_price_proto_goTypes = []interface{}{
	(*QueryPriceRequest)(nil),       // 0: proto.QueryPriceRequest
	(*QueryPriceRequestDetail)(nil), // 1: proto.QueryPriceRequestDetail
	(*OrderDetail)(nil),             // 2: proto.OrderDetail
	(*Item)(nil),                    // 3: proto.Item
	(*ItemConfig)(nil),              // 4: proto.ItemConfig
	(*QueryPriceResponse)(nil),      // 5: proto.QueryPriceResponse
	(*SubOrderPrice)(nil),           // 6: proto.SubOrderPrice
	(*OrderItemPrice)(nil),          // 7: proto.OrderItemPrice
	(*common.CustomInfo)(nil),       // 8: proto.CustomInfo
}
var file_price_proto_depIdxs = []int32{
	2, // 0: proto.QueryPriceRequestDetail.orders:type_name -> proto.OrderDetail
	8, // 1: proto.QueryPriceRequestDetail.customInfo:type_name -> proto.CustomInfo
	3, // 2: proto.OrderDetail.items:type_name -> proto.Item
	4, // 3: proto.Item.itemConfig:type_name -> proto.ItemConfig
	6, // 4: proto.QueryPriceResponse.subOrderPrices:type_name -> proto.SubOrderPrice
	0, // 5: proto.PriceService.QueryPrice:input_type -> proto.QueryPriceRequest
	5, // 6: proto.PriceService.QueryPrice:output_type -> proto.QueryPriceResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_price_proto_init() }
func file_price_proto_init() {
	if File_price_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_price_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_price_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPriceRequestDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_price_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_price_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_price_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_price_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPriceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_price_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubOrderPrice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_price_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderItemPrice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_price_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_price_proto_goTypes,
		DependencyIndexes: file_price_proto_depIdxs,
		MessageInfos:      file_price_proto_msgTypes,
	}.Build()
	File_price_proto = out.File
	file_price_proto_rawDesc = nil
	file_price_proto_goTypes = nil
	file_price_proto_depIdxs = nil
}
