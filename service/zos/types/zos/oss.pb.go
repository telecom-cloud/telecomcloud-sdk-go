// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v4.25.1
// source: oss.proto

package zos

import (
	_ "github.com/telecom-cloud/client-go/pkg/openapi/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetOssServiceStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId string `protobuf:"bytes,1,opt,name=regionId,proto3" json:"regionId,omitempty" query:"regionID"`
}

func (x *GetOssServiceStatusRequest) Reset() {
	*x = GetOssServiceStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOssServiceStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOssServiceStatusRequest) ProtoMessage() {}

func (x *GetOssServiceStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOssServiceStatusRequest.ProtoReflect.Descriptor instead.
func (*GetOssServiceStatusRequest) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{0}
}

func (x *GetOssServiceStatusRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

type GetOssServiceStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,1,opt,name=state,proto3" form:"state" json:"state,omitempty" query:"state"`
}

func (x *GetOssServiceStatusResponse) Reset() {
	*x = GetOssServiceStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOssServiceStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOssServiceStatusResponse) ProtoMessage() {}

func (x *GetOssServiceStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOssServiceStatusResponse.ProtoReflect.Descriptor instead.
func (*GetOssServiceStatusResponse) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{1}
}

func (x *GetOssServiceStatusResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type NewOssServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionID    string `protobuf:"bytes,1,opt,name=regionID,proto3" form:"regionID" json:"regionID,omitempty"`
	ClientToken string `protobuf:"bytes,2,opt,name=clientToken,proto3" form:"clientToken" json:"clientToken,omitempty"`
}

func (x *NewOssServiceRequest) Reset() {
	*x = NewOssServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOssServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOssServiceRequest) ProtoMessage() {}

func (x *NewOssServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOssServiceRequest.ProtoReflect.Descriptor instead.
func (*NewOssServiceRequest) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{2}
}

func (x *NewOssServiceRequest) GetRegionID() string {
	if x != nil {
		return x.RegionID
	}
	return ""
}

func (x *NewOssServiceRequest) GetClientToken() string {
	if x != nil {
		return x.ClientToken
	}
	return ""
}

type NewOssServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterOrderID        string     `protobuf:"bytes,1,opt,name=masterOrderID,proto3" form:"masterOrderID" json:"masterOrderID,omitempty" query:"masterOrderID"`
	MasterOrderNO        string     `protobuf:"bytes,2,opt,name=masterOrderNO,proto3" form:"masterOrderNO" json:"masterOrderNO,omitempty" query:"masterOrderNO"`
	RegionID             string     `protobuf:"bytes,3,opt,name=regionID,proto3" form:"regionID" json:"regionID,omitempty" query:"regionID"`
	MasterResourceID     string     `protobuf:"bytes,4,opt,name=masterResourceID,proto3" form:"masterResourceID" json:"masterResourceID,omitempty" query:"masterResourceID"`
	MasterResourceStatus string     `protobuf:"bytes,5,opt,name=masterResourceStatus,proto3" form:"masterResourceStatus" json:"masterResourceStatus,omitempty" query:"masterResourceStatus"`
	Resources            *Resources `protobuf:"bytes,6,opt,name=resources,proto3" form:"resources" json:"resources,omitempty" query:"resources"`
}

func (x *NewOssServiceResponse) Reset() {
	*x = NewOssServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOssServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOssServiceResponse) ProtoMessage() {}

func (x *NewOssServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOssServiceResponse.ProtoReflect.Descriptor instead.
func (*NewOssServiceResponse) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{3}
}

func (x *NewOssServiceResponse) GetMasterOrderID() string {
	if x != nil {
		return x.MasterOrderID
	}
	return ""
}

func (x *NewOssServiceResponse) GetMasterOrderNO() string {
	if x != nil {
		return x.MasterOrderNO
	}
	return ""
}

func (x *NewOssServiceResponse) GetRegionID() string {
	if x != nil {
		return x.RegionID
	}
	return ""
}

func (x *NewOssServiceResponse) GetMasterResourceID() string {
	if x != nil {
		return x.MasterResourceID
	}
	return ""
}

func (x *NewOssServiceResponse) GetMasterResourceStatus() string {
	if x != nil {
		return x.MasterResourceStatus
	}
	return ""
}

func (x *NewOssServiceResponse) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

type Resources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZosID            string `protobuf:"bytes,1,opt,name=zosID,proto3" form:"zosID" json:"zosID,omitempty" query:"zosID"`
	OrderID          string `protobuf:"bytes,2,opt,name=orderID,proto3" form:"orderID" json:"orderID,omitempty" query:"orderID"`
	StartTime        int64  `protobuf:"varint,3,opt,name=startTime,proto3" form:"startTime" json:"startTime,omitempty" query:"startTime"`
	CreateTime       int64  `protobuf:"varint,4,opt,name=createTime,proto3" form:"createTime" json:"createTime,omitempty" query:"createTime"`
	UpdateTime       int64  `protobuf:"varint,5,opt,name=updateTime,proto3" form:"updateTime" json:"updateTime,omitempty" query:"updateTime"`
	Status           int64  `protobuf:"varint,6,opt,name=status,proto3" form:"status" json:"status,omitempty" query:"status"`
	IsMaster         bool   `protobuf:"varint,7,opt,name=isMaster,proto3" form:"isMaster" json:"isMaster,omitempty" query:"isMaster"`
	ItemValue        int64  `protobuf:"varint,8,opt,name=itemValue,proto3" form:"itemValue" json:"itemValue,omitempty" query:"itemValue"`
	ResourceType     string `protobuf:"bytes,9,opt,name=resourceType,proto3" form:"resourceType" json:"resourceType,omitempty" query:"resourceType"`
	MasterResourceID string `protobuf:"bytes,10,opt,name=masterResourceID,proto3" form:"masterResourceID" json:"masterResourceID,omitempty" query:"masterResourceID"`
	MasterOrderID    string `protobuf:"bytes,11,opt,name=masterOrderID,proto3" form:"masterOrderID" json:"masterOrderID,omitempty" query:"masterOrderID"`
}

func (x *Resources) Reset() {
	*x = Resources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resources) ProtoMessage() {}

func (x *Resources) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resources.ProtoReflect.Descriptor instead.
func (*Resources) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{4}
}

func (x *Resources) GetZosID() string {
	if x != nil {
		return x.ZosID
	}
	return ""
}

func (x *Resources) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *Resources) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Resources) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Resources) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *Resources) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Resources) GetIsMaster() bool {
	if x != nil {
		return x.IsMaster
	}
	return false
}

func (x *Resources) GetItemValue() int64 {
	if x != nil {
		return x.ItemValue
	}
	return 0
}

func (x *Resources) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *Resources) GetMasterResourceID() string {
	if x != nil {
		return x.MasterResourceID
	}
	return ""
}

func (x *Resources) GetMasterOrderID() string {
	if x != nil {
		return x.MasterOrderID
	}
	return ""
}

type CreateBucketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionID        string           `protobuf:"bytes,1,opt,name=regionID,proto3" form:"regionID" json:"regionID,omitempty"`
	ACL             string           `protobuf:"bytes,2,opt,name=ACL,proto3" form:"ACL" json:"ACL,omitempty"`
	Bucket          string           `protobuf:"bytes,3,opt,name=bucket,proto3" form:"bucket" json:"bucket,omitempty"`
	ProjectID       string           `protobuf:"bytes,4,opt,name=projectID,proto3" form:"projectID" json:"projectID,omitempty"`
	CmkUUID         string           `protobuf:"bytes,5,opt,name=cmkUUID,proto3" form:"cmkUUID" json:"cmkUUID,omitempty"`
	IsEncrypted     bool             `protobuf:"varint,6,opt,name=isEncrypted,proto3" form:"isEncrypted" json:"isEncrypted,omitempty"`
	StorageType     string           `protobuf:"bytes,7,opt,name=storageType,proto3" form:"storageType" json:"storageType,omitempty"`
	AZPolicy        string           `protobuf:"bytes,8,opt,name=AZPolicy,proto3" form:"AZPolicy" json:"AZPolicy,omitempty"`
	Labels          []*Label         `protobuf:"bytes,9,rep,name=labels,proto3" form:"labels" json:"labels,omitempty"`
	OtherBucketInfo *OtherBucketInfo `protobuf:"bytes,10,opt,name=otherBucketInfo,proto3" form:"otherBucketInfo" json:"otherBucketInfo,omitempty"`
}

func (x *CreateBucketRequest) Reset() {
	*x = CreateBucketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBucketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBucketRequest) ProtoMessage() {}

func (x *CreateBucketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBucketRequest.ProtoReflect.Descriptor instead.
func (*CreateBucketRequest) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{5}
}

func (x *CreateBucketRequest) GetRegionID() string {
	if x != nil {
		return x.RegionID
	}
	return ""
}

func (x *CreateBucketRequest) GetACL() string {
	if x != nil {
		return x.ACL
	}
	return ""
}

func (x *CreateBucketRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *CreateBucketRequest) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *CreateBucketRequest) GetCmkUUID() string {
	if x != nil {
		return x.CmkUUID
	}
	return ""
}

func (x *CreateBucketRequest) GetIsEncrypted() bool {
	if x != nil {
		return x.IsEncrypted
	}
	return false
}

func (x *CreateBucketRequest) GetStorageType() string {
	if x != nil {
		return x.StorageType
	}
	return ""
}

func (x *CreateBucketRequest) GetAZPolicy() string {
	if x != nil {
		return x.AZPolicy
	}
	return ""
}

func (x *CreateBucketRequest) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateBucketRequest) GetOtherBucketInfo() *OtherBucketInfo {
	if x != nil {
		return x.OtherBucketInfo
	}
	return nil
}

type Label struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" form:"key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" form:"value" json:"value,omitempty"`
}

func (x *Label) Reset() {
	*x = Label{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Label) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Label) ProtoMessage() {}

func (x *Label) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Label.ProtoReflect.Descriptor instead.
func (*Label) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{6}
}

func (x *Label) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Label) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type OtherBucketInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectLockEnabledForBucket bool `protobuf:"varint,1,opt,name=ObjectLockEnabledForBucket,proto3" form:"ObjectLockEnabledForBucket" json:"ObjectLockEnabledForBucket,omitempty"`
}

func (x *OtherBucketInfo) Reset() {
	*x = OtherBucketInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OtherBucketInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OtherBucketInfo) ProtoMessage() {}

func (x *OtherBucketInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OtherBucketInfo.ProtoReflect.Descriptor instead.
func (*OtherBucketInfo) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{7}
}

func (x *OtherBucketInfo) GetObjectLockEnabledForBucket() bool {
	if x != nil {
		return x.ObjectLockEnabledForBucket
	}
	return false
}

type CreateBucketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" form:"data" json:"data,omitempty" query:"data"`
}

func (x *CreateBucketResponse) Reset() {
	*x = CreateBucketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBucketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBucketResponse) ProtoMessage() {}

func (x *CreateBucketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBucketResponse.ProtoReflect.Descriptor instead.
func (*CreateBucketResponse) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{8}
}

func (x *CreateBucketResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GenerateObjectUploadLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionID string `protobuf:"bytes,1,opt,name=regionID,proto3" form:"regionID" json:"regionID,omitempty"`
	Bucket   string `protobuf:"bytes,2,opt,name=bucket,proto3" form:"bucket" json:"bucket,omitempty"`
	Key      string `protobuf:"bytes,3,opt,name=key,proto3" form:"key" json:"key,omitempty"`
	// url 过期时间，默认 3600
	ExpiresIn int32 `protobuf:"varint,4,opt,name=expiresIn,proto3" form:"expiresIn" json:"expiresIn,omitempty"`
}

func (x *GenerateObjectUploadLinkRequest) Reset() {
	*x = GenerateObjectUploadLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateObjectUploadLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateObjectUploadLinkRequest) ProtoMessage() {}

func (x *GenerateObjectUploadLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateObjectUploadLinkRequest.ProtoReflect.Descriptor instead.
func (*GenerateObjectUploadLinkRequest) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{9}
}

func (x *GenerateObjectUploadLinkRequest) GetRegionID() string {
	if x != nil {
		return x.RegionID
	}
	return ""
}

func (x *GenerateObjectUploadLinkRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *GenerateObjectUploadLinkRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GenerateObjectUploadLinkRequest) GetExpiresIn() int32 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

type GenerateObjectUploadLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url    string  `protobuf:"bytes,1,opt,name=url,proto3" form:"url" json:"url,omitempty" query:"url"`
	Fields *Fields `protobuf:"bytes,2,opt,name=fields,proto3" form:"fields" json:"fields,omitempty" query:"fields"`
}

func (x *GenerateObjectUploadLinkResponse) Reset() {
	*x = GenerateObjectUploadLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateObjectUploadLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateObjectUploadLinkResponse) ProtoMessage() {}

func (x *GenerateObjectUploadLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateObjectUploadLinkResponse.ProtoReflect.Descriptor instead.
func (*GenerateObjectUploadLinkResponse) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{10}
}

func (x *GenerateObjectUploadLinkResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GenerateObjectUploadLinkResponse) GetFields() *Fields {
	if x != nil {
		return x.Fields
	}
	return nil
}

type Fields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy         string `protobuf:"bytes,1,opt,name=policy,proto3" form:"policy" json:"policy,omitempty" query:"policy"`
	AWSAccessKeyId string `protobuf:"bytes,2,opt,name=AWSAccessKeyId,proto3" form:"AWSAccessKeyId" json:"AWSAccessKeyId,omitempty" query:"AWSAccessKeyId"`
	Key            string `protobuf:"bytes,3,opt,name=key,proto3" form:"key" json:"key,omitempty" query:"key"`
	Signature      string `protobuf:"bytes,4,opt,name=signature,proto3" form:"signature" json:"signature,omitempty" query:"signature"`
}

func (x *Fields) Reset() {
	*x = Fields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fields) ProtoMessage() {}

func (x *Fields) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fields.ProtoReflect.Descriptor instead.
func (*Fields) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{11}
}

func (x *Fields) GetPolicy() string {
	if x != nil {
		return x.Policy
	}
	return ""
}

func (x *Fields) GetAWSAccessKeyId() string {
	if x != nil {
		return x.AWSAccessKeyId
	}
	return ""
}

func (x *Fields) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Fields) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type GetKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionID string `protobuf:"bytes,1,opt,name=regionID,proto3" json:"regionID,omitempty" query:"regionID"`
}

func (x *GetKeysRequest) Reset() {
	*x = GetKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeysRequest) ProtoMessage() {}

func (x *GetKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeysRequest.ProtoReflect.Descriptor instead.
func (*GetKeysRequest) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{12}
}

func (x *GetKeysRequest) GetRegionID() string {
	if x != nil {
		return x.RegionID
	}
	return ""
}

type GetKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*GetKeys `protobuf:"bytes,1,rep,name=data,proto3" form:"data" json:"data,omitempty" query:"data"`
}

func (x *GetKeysResponse) Reset() {
	*x = GetKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeysResponse) ProtoMessage() {}

func (x *GetKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeysResponse.ProtoReflect.Descriptor instead.
func (*GetKeysResponse) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{13}
}

func (x *GetKeysResponse) GetData() []*GetKeys {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKey  string `protobuf:"bytes,1,opt,name=accessKey,proto3" form:"accessKey" json:"accessKey,omitempty" query:"accessKey"`
	SecretKey  string `protobuf:"bytes,2,opt,name=secretKey,proto3" form:"secretKey" json:"secretKey,omitempty" query:"secretKey"`
	RegionName string `protobuf:"bytes,3,opt,name=regionName,proto3" form:"regionName" json:"regionName,omitempty" query:"regionName"`
	RegionID   string `protobuf:"bytes,4,opt,name=regionID,proto3" form:"regionID" json:"regionID,omitempty" query:"regionID"`
}

func (x *GetKeys) Reset() {
	*x = GetKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeys) ProtoMessage() {}

func (x *GetKeys) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeys.ProtoReflect.Descriptor instead.
func (*GetKeys) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{14}
}

func (x *GetKeys) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *GetKeys) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *GetKeys) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

func (x *GetKeys) GetRegionID() string {
	if x != nil {
		return x.RegionID
	}
	return ""
}

type ListBucketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionID  string `protobuf:"bytes,1,opt,name=regionID,proto3" json:"regionID,omitempty" query:"regionID"`
	ProjectID string `protobuf:"bytes,2,opt,name=projectID,proto3" json:"projectID,omitempty" query:"projectID"`
	PageSize  int64  `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty" query:"pageSize"`
	PageNo    int64  `protobuf:"varint,4,opt,name=pageNo,proto3" json:"pageNo,omitempty" query:"pageNo"`
}

func (x *ListBucketsRequest) Reset() {
	*x = ListBucketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBucketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBucketsRequest) ProtoMessage() {}

func (x *ListBucketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBucketsRequest.ProtoReflect.Descriptor instead.
func (*ListBucketsRequest) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{15}
}

func (x *ListBucketsRequest) GetRegionID() string {
	if x != nil {
		return x.RegionID
	}
	return ""
}

func (x *ListBucketsRequest) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *ListBucketsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListBucketsRequest) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

type ListBucketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketList []*GetBucketResponse `protobuf:"bytes,1,rep,name=bucketList,proto3" form:"bucketList" json:"bucketList,omitempty" query:"bucketList"`
}

func (x *ListBucketsResponse) Reset() {
	*x = ListBucketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBucketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBucketsResponse) ProtoMessage() {}

func (x *ListBucketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBucketsResponse.ProtoReflect.Descriptor instead.
func (*ListBucketsResponse) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{16}
}

func (x *ListBucketsResponse) GetBucketList() []*GetBucketResponse {
	if x != nil {
		return x.BucketList
	}
	return nil
}

type GetBucketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket   string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty" query:"bucket"`
	RegionID string `protobuf:"bytes,2,opt,name=regionID,proto3" json:"regionID,omitempty" query:"regionID"`
}

func (x *GetBucketRequest) Reset() {
	*x = GetBucketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBucketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBucketRequest) ProtoMessage() {}

func (x *GetBucketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBucketRequest.ProtoReflect.Descriptor instead.
func (*GetBucketRequest) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{17}
}

func (x *GetBucketRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *GetBucketRequest) GetRegionID() string {
	if x != nil {
		return x.RegionID
	}
	return ""
}

type GetBucketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepeprojectID     string             `protobuf:"bytes,1,opt,name=repeprojectID,proto3" form:"repeprojectID" json:"repeprojectID,omitempty" query:"repeprojectID"`
	CmkUUID           string             `protobuf:"bytes,2,opt,name=cmkUUID,proto3" form:"cmkUUID" json:"cmkUUID,omitempty" query:"cmkUUID"`
	StorageType       string             `protobuf:"bytes,3,opt,name=storageType,proto3" form:"storageType" json:"storageType,omitempty" query:"storageType"`
	AZPolicy          string             `protobuf:"bytes,4,opt,name=AZPolicy,proto3" form:"AZPolicy" json:"AZPolicy,omitempty" query:"AZPolicy"`
	BucketQuota       *BucketQuota       `protobuf:"bytes,5,opt,name=bucketQuota,proto3" form:"bucketQuota" json:"bucketQuota,omitempty" query:"bucketQuota"`
	Tenant            string             `protobuf:"bytes,6,opt,name=tenant,proto3" form:"tenant" json:"tenant,omitempty" query:"tenant"`
	Ctime             string             `protobuf:"bytes,7,opt,name=ctime,proto3" form:"ctime" json:"ctime,omitempty" query:"ctime"`
	BucketPreviewFlag int64              `protobuf:"varint,8,opt,name=bucketPreviewFlag,proto3" form:"bucketPreviewFlag" json:"bucketPreviewFlag,omitempty" query:"bucketPreviewFlag"`
	PlacementRule     string             `protobuf:"bytes,9,opt,name=placementRule,proto3" form:"placementRule" json:"placementRule,omitempty" query:"placementRule"`
	Mtime             string             `protobuf:"bytes,10,opt,name=mtime,proto3" form:"mtime" json:"mtime,omitempty" query:"mtime"`
	Bucket            string             `protobuf:"bytes,11,opt,name=bucket,proto3" form:"bucket" json:"bucket,omitempty" query:"bucket"`
	Owner             string             `protobuf:"bytes,12,opt,name=owner,proto3" form:"owner" json:"owner,omitempty" query:"owner"`
	Usage             *Usage             `protobuf:"bytes,13,opt,name=usage,proto3" form:"usage" json:"usage,omitempty" query:"usage"`
	NumShards         int64              `protobuf:"varint,14,opt,name=numShards,proto3" form:"numShards" json:"numShards,omitempty" query:"numShards"`
	IndexType         string             `protobuf:"bytes,15,opt,name=indexType,proto3" form:"indexType" json:"indexType,omitempty" query:"indexType"`
	ExplicitPlacement *ExplicitPlacement `protobuf:"bytes,16,opt,name=explicitPlacement,proto3" form:"explicitPlacement" json:"explicitPlacement,omitempty" query:"explicitPlacement"`
	Zonegroup         string             `protobuf:"bytes,17,opt,name=zonegroup,proto3" form:"zonegroup" json:"zonegroup,omitempty" query:"zonegroup"`
}

func (x *GetBucketResponse) Reset() {
	*x = GetBucketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBucketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBucketResponse) ProtoMessage() {}

func (x *GetBucketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBucketResponse.ProtoReflect.Descriptor instead.
func (*GetBucketResponse) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{18}
}

func (x *GetBucketResponse) GetRepeprojectID() string {
	if x != nil {
		return x.RepeprojectID
	}
	return ""
}

func (x *GetBucketResponse) GetCmkUUID() string {
	if x != nil {
		return x.CmkUUID
	}
	return ""
}

func (x *GetBucketResponse) GetStorageType() string {
	if x != nil {
		return x.StorageType
	}
	return ""
}

func (x *GetBucketResponse) GetAZPolicy() string {
	if x != nil {
		return x.AZPolicy
	}
	return ""
}

func (x *GetBucketResponse) GetBucketQuota() *BucketQuota {
	if x != nil {
		return x.BucketQuota
	}
	return nil
}

func (x *GetBucketResponse) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *GetBucketResponse) GetCtime() string {
	if x != nil {
		return x.Ctime
	}
	return ""
}

func (x *GetBucketResponse) GetBucketPreviewFlag() int64 {
	if x != nil {
		return x.BucketPreviewFlag
	}
	return 0
}

func (x *GetBucketResponse) GetPlacementRule() string {
	if x != nil {
		return x.PlacementRule
	}
	return ""
}

func (x *GetBucketResponse) GetMtime() string {
	if x != nil {
		return x.Mtime
	}
	return ""
}

func (x *GetBucketResponse) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *GetBucketResponse) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *GetBucketResponse) GetUsage() *Usage {
	if x != nil {
		return x.Usage
	}
	return nil
}

func (x *GetBucketResponse) GetNumShards() int64 {
	if x != nil {
		return x.NumShards
	}
	return 0
}

func (x *GetBucketResponse) GetIndexType() string {
	if x != nil {
		return x.IndexType
	}
	return ""
}

func (x *GetBucketResponse) GetExplicitPlacement() *ExplicitPlacement {
	if x != nil {
		return x.ExplicitPlacement
	}
	return nil
}

func (x *GetBucketResponse) GetZonegroup() string {
	if x != nil {
		return x.Zonegroup
	}
	return ""
}

type BucketQuota struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled    bool  `protobuf:"varint,1,opt,name=enabled,proto3" form:"enabled" json:"enabled,omitempty" query:"enabled"`
	MaxSize    int64 `protobuf:"varint,2,opt,name=maxSize,proto3" form:"maxSize" json:"maxSize,omitempty" query:"maxSize"`
	MaxObjects int64 `protobuf:"varint,3,opt,name=maxObjects,proto3" form:"maxObjects" json:"maxObjects,omitempty" query:"maxObjects"`
	CheckOnRaw bool  `protobuf:"varint,4,opt,name=checkOnRaw,proto3" form:"checkOnRaw" json:"checkOnRaw,omitempty" query:"checkOnRaw"`
	MaxSizeKb  int64 `protobuf:"varint,5,opt,name=maxSizeKb,proto3" form:"maxSizeKb" json:"maxSizeKb,omitempty" query:"maxSizeKb"`
}

func (x *BucketQuota) Reset() {
	*x = BucketQuota{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketQuota) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketQuota) ProtoMessage() {}

func (x *BucketQuota) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketQuota.ProtoReflect.Descriptor instead.
func (*BucketQuota) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{19}
}

func (x *BucketQuota) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *BucketQuota) GetMaxSize() int64 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *BucketQuota) GetMaxObjects() int64 {
	if x != nil {
		return x.MaxObjects
	}
	return 0
}

func (x *BucketQuota) GetCheckOnRaw() bool {
	if x != nil {
		return x.CheckOnRaw
	}
	return false
}

func (x *BucketQuota) GetMaxSizeKb() int64 {
	if x != nil {
		return x.MaxSizeKb
	}
	return 0
}

type Usage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SizeKbUtilized      int64                `protobuf:"varint,1,opt,name=sizeKbUtilized,proto3" form:"sizeKbUtilized" json:"sizeKbUtilized,omitempty" query:"sizeKbUtilized"`
	SizeActual          int64                `protobuf:"varint,2,opt,name=sizeActual,proto3" form:"sizeActual" json:"sizeActual,omitempty" query:"sizeActual"`
	SizeKbActual        int64                `protobuf:"varint,3,opt,name=sizeKbActual,proto3" form:"sizeKbActual" json:"sizeKbActual,omitempty" query:"sizeKbActual"`
	SizeKb              int64                `protobuf:"varint,4,opt,name=sizeKb,proto3" form:"sizeKb" json:"sizeKb,omitempty" query:"sizeKb"`
	StorageTypeIa       *StorageTypeIa       `protobuf:"bytes,5,opt,name=storageTypeIa,proto3" form:"storageTypeIa" json:"storageTypeIa,omitempty" query:"storageTypeIa"`
	NumObjects          int64                `protobuf:"varint,6,opt,name=numObjects,proto3" form:"numObjects" json:"numObjects,omitempty" query:"numObjects"`
	EarlydelGlacierSize int64                `protobuf:"varint,7,opt,name=earlydelGlacierSize,proto3" form:"earlydelGlacierSize" json:"earlydelGlacierSize,omitempty" query:"earlydelGlacierSize"`
	StorageTypeGlacier  *StorageTypeGlacier  `protobuf:"bytes,8,opt,name=storageTypeGlacier,proto3" form:"storageTypeGlacier" json:"storageTypeGlacier,omitempty" query:"storageTypeGlacier"`
	StorageTypeStandard *StorageTypeStandard `protobuf:"bytes,9,opt,name=storageTypeStandard,proto3" form:"storageTypeStandard" json:"storageTypeStandard,omitempty" query:"storageTypeStandard"`
	NumMultiparts       int64                `protobuf:"varint,10,opt,name=numMultiparts,proto3" form:"numMultiparts" json:"numMultiparts,omitempty" query:"numMultiparts"`
	EarlydelIaSize      int64                `protobuf:"varint,11,opt,name=earlydelIaSize,proto3" form:"earlydelIaSize" json:"earlydelIaSize,omitempty" query:"earlydelIaSize"`
	SizeUtilized        int64                `protobuf:"varint,12,opt,name=sizeUtilized,proto3" form:"sizeUtilized" json:"sizeUtilized,omitempty" query:"sizeUtilized"`
	Size                int64                `protobuf:"varint,13,opt,name=size,proto3" form:"size" json:"size,omitempty" query:"size"`
}

func (x *Usage) Reset() {
	*x = Usage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Usage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Usage) ProtoMessage() {}

func (x *Usage) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Usage.ProtoReflect.Descriptor instead.
func (*Usage) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{20}
}

func (x *Usage) GetSizeKbUtilized() int64 {
	if x != nil {
		return x.SizeKbUtilized
	}
	return 0
}

func (x *Usage) GetSizeActual() int64 {
	if x != nil {
		return x.SizeActual
	}
	return 0
}

func (x *Usage) GetSizeKbActual() int64 {
	if x != nil {
		return x.SizeKbActual
	}
	return 0
}

func (x *Usage) GetSizeKb() int64 {
	if x != nil {
		return x.SizeKb
	}
	return 0
}

func (x *Usage) GetStorageTypeIa() *StorageTypeIa {
	if x != nil {
		return x.StorageTypeIa
	}
	return nil
}

func (x *Usage) GetNumObjects() int64 {
	if x != nil {
		return x.NumObjects
	}
	return 0
}

func (x *Usage) GetEarlydelGlacierSize() int64 {
	if x != nil {
		return x.EarlydelGlacierSize
	}
	return 0
}

func (x *Usage) GetStorageTypeGlacier() *StorageTypeGlacier {
	if x != nil {
		return x.StorageTypeGlacier
	}
	return nil
}

func (x *Usage) GetStorageTypeStandard() *StorageTypeStandard {
	if x != nil {
		return x.StorageTypeStandard
	}
	return nil
}

func (x *Usage) GetNumMultiparts() int64 {
	if x != nil {
		return x.NumMultiparts
	}
	return 0
}

func (x *Usage) GetEarlydelIaSize() int64 {
	if x != nil {
		return x.EarlydelIaSize
	}
	return 0
}

func (x *Usage) GetSizeUtilized() int64 {
	if x != nil {
		return x.SizeUtilized
	}
	return 0
}

func (x *Usage) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type StorageTypeIa struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SizeKbUtilized int64 `protobuf:"varint,1,opt,name=sizeKbUtilized,proto3" form:"sizeKbUtilized" json:"sizeKbUtilized,omitempty" query:"sizeKbUtilized"`
	SizeActual     int64 `protobuf:"varint,2,opt,name=sizeActual,proto3" form:"sizeActual" json:"sizeActual,omitempty" query:"sizeActual"`
	SizeKbActual   int64 `protobuf:"varint,3,opt,name=sizeKbActual,proto3" form:"sizeKbActual" json:"sizeKbActual,omitempty" query:"sizeKbActual"`
	NumObjects     int64 `protobuf:"varint,4,opt,name=numObjects,proto3" form:"numObjects" json:"numObjects,omitempty" query:"numObjects"`
	SizeUtillized  int64 `protobuf:"varint,5,opt,name=sizeUtillized,proto3" form:"sizeUtillized" json:"sizeUtillized,omitempty" query:"sizeUtillized"`
	NumMultiparts  int64 `protobuf:"varint,6,opt,name=numMultiparts,proto3" form:"numMultiparts" json:"numMultiparts,omitempty" query:"numMultiparts"`
	SizeKb         int64 `protobuf:"varint,7,opt,name=sizeKb,proto3" form:"sizeKb" json:"sizeKb,omitempty" query:"sizeKb"`
	Size           int64 `protobuf:"varint,8,opt,name=size,proto3" form:"size" json:"size,omitempty" query:"size"`
}

func (x *StorageTypeIa) Reset() {
	*x = StorageTypeIa{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageTypeIa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageTypeIa) ProtoMessage() {}

func (x *StorageTypeIa) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageTypeIa.ProtoReflect.Descriptor instead.
func (*StorageTypeIa) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{21}
}

func (x *StorageTypeIa) GetSizeKbUtilized() int64 {
	if x != nil {
		return x.SizeKbUtilized
	}
	return 0
}

func (x *StorageTypeIa) GetSizeActual() int64 {
	if x != nil {
		return x.SizeActual
	}
	return 0
}

func (x *StorageTypeIa) GetSizeKbActual() int64 {
	if x != nil {
		return x.SizeKbActual
	}
	return 0
}

func (x *StorageTypeIa) GetNumObjects() int64 {
	if x != nil {
		return x.NumObjects
	}
	return 0
}

func (x *StorageTypeIa) GetSizeUtillized() int64 {
	if x != nil {
		return x.SizeUtillized
	}
	return 0
}

func (x *StorageTypeIa) GetNumMultiparts() int64 {
	if x != nil {
		return x.NumMultiparts
	}
	return 0
}

func (x *StorageTypeIa) GetSizeKb() int64 {
	if x != nil {
		return x.SizeKb
	}
	return 0
}

func (x *StorageTypeIa) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type StorageTypeGlacier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SizeKbUtilized int64 `protobuf:"varint,1,opt,name=sizeKbUtilized,proto3" form:"sizeKbUtilized" json:"sizeKbUtilized,omitempty" query:"sizeKbUtilized"`
	SizeActual     int64 `protobuf:"varint,2,opt,name=sizeActual,proto3" form:"sizeActual" json:"sizeActual,omitempty" query:"sizeActual"`
	SizeKbActual   int64 `protobuf:"varint,3,opt,name=sizeKbActual,proto3" form:"sizeKbActual" json:"sizeKbActual,omitempty" query:"sizeKbActual"`
	NumObjects     int64 `protobuf:"varint,4,opt,name=numObjects,proto3" form:"numObjects" json:"numObjects,omitempty" query:"numObjects"`
	SizeUtillized  int64 `protobuf:"varint,5,opt,name=sizeUtillized,proto3" form:"sizeUtillized" json:"sizeUtillized,omitempty" query:"sizeUtillized"`
	NumMultiparts  int64 `protobuf:"varint,6,opt,name=numMultiparts,proto3" form:"numMultiparts" json:"numMultiparts,omitempty" query:"numMultiparts"`
	SizeKb         int64 `protobuf:"varint,7,opt,name=sizeKb,proto3" form:"sizeKb" json:"sizeKb,omitempty" query:"sizeKb"`
	Size           int64 `protobuf:"varint,8,opt,name=size,proto3" form:"size" json:"size,omitempty" query:"size"`
}

func (x *StorageTypeGlacier) Reset() {
	*x = StorageTypeGlacier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageTypeGlacier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageTypeGlacier) ProtoMessage() {}

func (x *StorageTypeGlacier) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageTypeGlacier.ProtoReflect.Descriptor instead.
func (*StorageTypeGlacier) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{22}
}

func (x *StorageTypeGlacier) GetSizeKbUtilized() int64 {
	if x != nil {
		return x.SizeKbUtilized
	}
	return 0
}

func (x *StorageTypeGlacier) GetSizeActual() int64 {
	if x != nil {
		return x.SizeActual
	}
	return 0
}

func (x *StorageTypeGlacier) GetSizeKbActual() int64 {
	if x != nil {
		return x.SizeKbActual
	}
	return 0
}

func (x *StorageTypeGlacier) GetNumObjects() int64 {
	if x != nil {
		return x.NumObjects
	}
	return 0
}

func (x *StorageTypeGlacier) GetSizeUtillized() int64 {
	if x != nil {
		return x.SizeUtillized
	}
	return 0
}

func (x *StorageTypeGlacier) GetNumMultiparts() int64 {
	if x != nil {
		return x.NumMultiparts
	}
	return 0
}

func (x *StorageTypeGlacier) GetSizeKb() int64 {
	if x != nil {
		return x.SizeKb
	}
	return 0
}

func (x *StorageTypeGlacier) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type StorageTypeStandard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SizeKbUtilized int64 `protobuf:"varint,1,opt,name=sizeKbUtilized,proto3" form:"sizeKbUtilized" json:"sizeKbUtilized,omitempty" query:"sizeKbUtilized"`
	SizeActual     int64 `protobuf:"varint,2,opt,name=sizeActual,proto3" form:"sizeActual" json:"sizeActual,omitempty" query:"sizeActual"`
	SizeKbActual   int64 `protobuf:"varint,3,opt,name=sizeKbActual,proto3" form:"sizeKbActual" json:"sizeKbActual,omitempty" query:"sizeKbActual"`
	NumObjects     int64 `protobuf:"varint,4,opt,name=numObjects,proto3" form:"numObjects" json:"numObjects,omitempty" query:"numObjects"`
	SizeUtillized  int64 `protobuf:"varint,5,opt,name=sizeUtillized,proto3" form:"sizeUtillized" json:"sizeUtillized,omitempty" query:"sizeUtillized"`
	NumMultiparts  int64 `protobuf:"varint,6,opt,name=numMultiparts,proto3" form:"numMultiparts" json:"numMultiparts,omitempty" query:"numMultiparts"`
	SizeKb         int64 `protobuf:"varint,7,opt,name=sizeKb,proto3" form:"sizeKb" json:"sizeKb,omitempty" query:"sizeKb"`
	Size           int64 `protobuf:"varint,8,opt,name=size,proto3" form:"size" json:"size,omitempty" query:"size"`
}

func (x *StorageTypeStandard) Reset() {
	*x = StorageTypeStandard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageTypeStandard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageTypeStandard) ProtoMessage() {}

func (x *StorageTypeStandard) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageTypeStandard.ProtoReflect.Descriptor instead.
func (*StorageTypeStandard) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{23}
}

func (x *StorageTypeStandard) GetSizeKbUtilized() int64 {
	if x != nil {
		return x.SizeKbUtilized
	}
	return 0
}

func (x *StorageTypeStandard) GetSizeActual() int64 {
	if x != nil {
		return x.SizeActual
	}
	return 0
}

func (x *StorageTypeStandard) GetSizeKbActual() int64 {
	if x != nil {
		return x.SizeKbActual
	}
	return 0
}

func (x *StorageTypeStandard) GetNumObjects() int64 {
	if x != nil {
		return x.NumObjects
	}
	return 0
}

func (x *StorageTypeStandard) GetSizeUtillized() int64 {
	if x != nil {
		return x.SizeUtillized
	}
	return 0
}

func (x *StorageTypeStandard) GetNumMultiparts() int64 {
	if x != nil {
		return x.NumMultiparts
	}
	return 0
}

func (x *StorageTypeStandard) GetSizeKb() int64 {
	if x != nil {
		return x.SizeKb
	}
	return 0
}

func (x *StorageTypeStandard) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ExplicitPlacement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataExtraPool string `protobuf:"bytes,1,opt,name=dataExtraPool,proto3" form:"dataExtraPool" json:"dataExtraPool,omitempty" query:"dataExtraPool"`
	DataPool      string `protobuf:"bytes,2,opt,name=dataPool,proto3" form:"dataPool" json:"dataPool,omitempty" query:"dataPool"`
	IndexPool     string `protobuf:"bytes,3,opt,name=indexPool,proto3" form:"indexPool" json:"indexPool,omitempty" query:"indexPool"`
}

func (x *ExplicitPlacement) Reset() {
	*x = ExplicitPlacement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExplicitPlacement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplicitPlacement) ProtoMessage() {}

func (x *ExplicitPlacement) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExplicitPlacement.ProtoReflect.Descriptor instead.
func (*ExplicitPlacement) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{24}
}

func (x *ExplicitPlacement) GetDataExtraPool() string {
	if x != nil {
		return x.DataExtraPool
	}
	return ""
}

func (x *ExplicitPlacement) GetDataPool() string {
	if x != nil {
		return x.DataPool
	}
	return ""
}

func (x *ExplicitPlacement) GetIndexPool() string {
	if x != nil {
		return x.IndexPool
	}
	return ""
}

type GetBucketAclRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket   string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty" query:"bucket"`
	RegionID string `protobuf:"bytes,2,opt,name=regionID,proto3" json:"regionID,omitempty" query:"regionID"`
}

func (x *GetBucketAclRequest) Reset() {
	*x = GetBucketAclRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBucketAclRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBucketAclRequest) ProtoMessage() {}

func (x *GetBucketAclRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBucketAclRequest.ProtoReflect.Descriptor instead.
func (*GetBucketAclRequest) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{25}
}

func (x *GetBucketAclRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *GetBucketAclRequest) GetRegionID() string {
	if x != nil {
		return x.RegionID
	}
	return ""
}

type GetBucketAclResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner  string   `protobuf:"bytes,1,opt,name=owner,proto3" form:"owner" json:"owner,omitempty" query:"owner"`
	Grants []*Grant `protobuf:"bytes,2,rep,name=grants,proto3" form:"grants" json:"grants,omitempty" query:"grants"`
}

func (x *GetBucketAclResponse) Reset() {
	*x = GetBucketAclResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBucketAclResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBucketAclResponse) ProtoMessage() {}

func (x *GetBucketAclResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBucketAclResponse.ProtoReflect.Descriptor instead.
func (*GetBucketAclResponse) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{26}
}

func (x *GetBucketAclResponse) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *GetBucketAclResponse) GetGrants() []*Grant {
	if x != nil {
		return x.Grants
	}
	return nil
}

type Owner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName string `protobuf:"bytes,1,opt,name=displayName,proto3" form:"displayName" json:"displayName,omitempty" query:"displayName"`
	ID          string `protobuf:"bytes,2,opt,name=ID,proto3" form:"ID" json:"ID,omitempty" query:"ID"`
}

func (x *Owner) Reset() {
	*x = Owner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Owner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Owner) ProtoMessage() {}

func (x *Owner) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Owner.ProtoReflect.Descriptor instead.
func (*Owner) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{27}
}

func (x *Owner) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Owner) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type Grant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Grantee    *Grantee `protobuf:"bytes,1,opt,name=grantee,proto3" form:"grantee" json:"grantee,omitempty" query:"grantee"`
	Permission string   `protobuf:"bytes,2,opt,name=permission,proto3" form:"permission" json:"permission,omitempty" query:"permission"`
}

func (x *Grant) Reset() {
	*x = Grant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Grant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Grant) ProtoMessage() {}

func (x *Grant) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Grant.ProtoReflect.Descriptor instead.
func (*Grant) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{28}
}

func (x *Grant) GetGrantee() *Grantee {
	if x != nil {
		return x.Grantee
	}
	return nil
}

func (x *Grant) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

type Grantee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailAddress string `protobuf:"bytes,1,opt,name=emailAddress,proto3" form:"emailAddress" json:"emailAddress,omitempty" query:"emailAddress"`
	Type         string `protobuf:"bytes,2,opt,name=type,proto3" form:"type" json:"type,omitempty" query:"type"`
	DisplayName  string `protobuf:"bytes,3,opt,name=displayName,proto3" form:"displayName" json:"displayName,omitempty" query:"displayName"`
	ID           string `protobuf:"bytes,4,opt,name=ID,proto3" form:"ID" json:"ID,omitempty" query:"ID"`
	URI          string `protobuf:"bytes,5,opt,name=URI,proto3" form:"URI" json:"URI,omitempty" query:"URI"`
}

func (x *Grantee) Reset() {
	*x = Grantee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Grantee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Grantee) ProtoMessage() {}

func (x *Grantee) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Grantee.ProtoReflect.Descriptor instead.
func (*Grantee) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{29}
}

func (x *Grantee) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *Grantee) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Grantee) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Grantee) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Grantee) GetURI() string {
	if x != nil {
		return x.URI
	}
	return ""
}

type PutBucketAclRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket              string               `protobuf:"bytes,1,opt,name=bucket,proto3" form:"bucket" json:"bucket,omitempty"`
	RegionID            string               `protobuf:"bytes,2,opt,name=regionID,proto3" form:"regionID" json:"regionID,omitempty"`
	ACL                 string               `protobuf:"bytes,3,opt,name=ACL,proto3" form:"ACL" json:"ACL,omitempty"`
	AccessControlPolicy *AccessControlPolicy `protobuf:"bytes,4,opt,name=accessControlPolicy,proto3" form:"accessControlPolicy" json:"accessControlPolicy,omitempty"`
}

func (x *PutBucketAclRequest) Reset() {
	*x = PutBucketAclRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutBucketAclRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutBucketAclRequest) ProtoMessage() {}

func (x *PutBucketAclRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutBucketAclRequest.ProtoReflect.Descriptor instead.
func (*PutBucketAclRequest) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{30}
}

func (x *PutBucketAclRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *PutBucketAclRequest) GetRegionID() string {
	if x != nil {
		return x.RegionID
	}
	return ""
}

func (x *PutBucketAclRequest) GetACL() string {
	if x != nil {
		return x.ACL
	}
	return ""
}

func (x *PutBucketAclRequest) GetAccessControlPolicy() *AccessControlPolicy {
	if x != nil {
		return x.AccessControlPolicy
	}
	return nil
}

type AccessControlPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner  *Owner   `protobuf:"bytes,1,opt,name=owner,proto3" form:"owner" json:"owner,omitempty"`
	Grants []*Grant `protobuf:"bytes,2,rep,name=grants,proto3" form:"grants" json:"grants,omitempty"`
}

func (x *AccessControlPolicy) Reset() {
	*x = AccessControlPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessControlPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessControlPolicy) ProtoMessage() {}

func (x *AccessControlPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessControlPolicy.ProtoReflect.Descriptor instead.
func (*AccessControlPolicy) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{31}
}

func (x *AccessControlPolicy) GetOwner() *Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *AccessControlPolicy) GetGrants() []*Grant {
	if x != nil {
		return x.Grants
	}
	return nil
}

type PutBucketAclResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" form:"data" json:"data,omitempty" query:"data"`
}

func (x *PutBucketAclResponse) Reset() {
	*x = PutBucketAclResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutBucketAclResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutBucketAclResponse) ProtoMessage() {}

func (x *PutBucketAclResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutBucketAclResponse.ProtoReflect.Descriptor instead.
func (*PutBucketAclResponse) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{32}
}

func (x *PutBucketAclResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type PutBucketCorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket            string             `protobuf:"bytes,1,opt,name=bucket,proto3" form:"bucket" json:"bucket,omitempty"`
	RegionID          string             `protobuf:"bytes,2,opt,name=regionID,proto3" form:"regionID" json:"regionID,omitempty"`
	CORSConfiguration *CORSConfiguration `protobuf:"bytes,3,opt,name=CORSConfiguration,proto3" form:"CORSConfiguration" json:"CORSConfiguration,omitempty"`
}

func (x *PutBucketCorsRequest) Reset() {
	*x = PutBucketCorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutBucketCorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutBucketCorsRequest) ProtoMessage() {}

func (x *PutBucketCorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutBucketCorsRequest.ProtoReflect.Descriptor instead.
func (*PutBucketCorsRequest) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{33}
}

func (x *PutBucketCorsRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *PutBucketCorsRequest) GetRegionID() string {
	if x != nil {
		return x.RegionID
	}
	return ""
}

func (x *PutBucketCorsRequest) GetCORSConfiguration() *CORSConfiguration {
	if x != nil {
		return x.CORSConfiguration
	}
	return nil
}

type CORSConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CORSRules []*CORSRule `protobuf:"bytes,1,rep,name=CORSRules,proto3" form:"CORSRules" json:"CORSRules,omitempty"`
}

func (x *CORSConfiguration) Reset() {
	*x = CORSConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CORSConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CORSConfiguration) ProtoMessage() {}

func (x *CORSConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CORSConfiguration.ProtoReflect.Descriptor instead.
func (*CORSConfiguration) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{34}
}

func (x *CORSConfiguration) GetCORSRules() []*CORSRule {
	if x != nil {
		return x.CORSRules
	}
	return nil
}

type CORSRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowedHeaders []string `protobuf:"bytes,1,rep,name=allowedHeaders,proto3" form:"allowedHeaders" json:"allowedHeaders,omitempty"`
	AllowedMethods []string `protobuf:"bytes,2,rep,name=allowedMethods,proto3" form:"allowedMethods" json:"allowedMethods,omitempty"`
	AllowedOrigins []string `protobuf:"bytes,3,rep,name=allowedOrigins,proto3" form:"allowedOrigins" json:"allowedOrigins,omitempty"`
	ExposeHeaders  []string `protobuf:"bytes,4,rep,name=exposeHeaders,proto3" form:"exposeHeaders" json:"exposeHeaders,omitempty"`
	MaxAgeSeconds  int32    `protobuf:"varint,5,opt,name=maxAgeSeconds,proto3" form:"maxAgeSeconds" json:"maxAgeSeconds,omitempty"`
}

func (x *CORSRule) Reset() {
	*x = CORSRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CORSRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CORSRule) ProtoMessage() {}

func (x *CORSRule) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CORSRule.ProtoReflect.Descriptor instead.
func (*CORSRule) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{35}
}

func (x *CORSRule) GetAllowedHeaders() []string {
	if x != nil {
		return x.AllowedHeaders
	}
	return nil
}

func (x *CORSRule) GetAllowedMethods() []string {
	if x != nil {
		return x.AllowedMethods
	}
	return nil
}

func (x *CORSRule) GetAllowedOrigins() []string {
	if x != nil {
		return x.AllowedOrigins
	}
	return nil
}

func (x *CORSRule) GetExposeHeaders() []string {
	if x != nil {
		return x.ExposeHeaders
	}
	return nil
}

func (x *CORSRule) GetMaxAgeSeconds() int32 {
	if x != nil {
		return x.MaxAgeSeconds
	}
	return 0
}

type PutBucketCorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PutBucketCorsResponse) Reset() {
	*x = PutBucketCorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutBucketCorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutBucketCorsResponse) ProtoMessage() {}

func (x *PutBucketCorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutBucketCorsResponse.ProtoReflect.Descriptor instead.
func (*PutBucketCorsResponse) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{36}
}

var File_oss_proto protoreflect.FileDescriptor

var file_oss_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6f, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x46, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xb2,
	0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x08, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x73, 0x0a, 0x14, 0x4e, 0x65,
	0x77, 0x4f, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x31, 0x0a, 0x0b,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x8f, 0x02, 0x0a, 0x15, 0x4e, 0x65, 0x77, 0x4f, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x4f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4e, 0x4f, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x12, 0x32, 0x0a,
	0x14, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2e, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x22, 0xe1, 0x02, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x7a, 0x6f, 0x73, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x7a, 0x6f, 0x73, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x12,
	0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x22, 0xeb, 0x03, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0c, 0xca, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x19, 0x0a, 0x03, 0x41, 0x43, 0x4c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x41, 0x43, 0x4c, 0x52, 0x03, 0x41,
	0x43, 0x4c, 0x12, 0x22, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x07, 0x63, 0x6d, 0x6b, 0x55, 0x55, 0x49, 0x44, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x63, 0x6d, 0x6b, 0x55, 0x55, 0x49,
	0x44, 0x52, 0x07, 0x63, 0x6d, 0x6b, 0x55, 0x55, 0x49, 0x44, 0x12, 0x31, 0x0a, 0x0b, 0x69, 0x73,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x42,
	0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x69, 0x73, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64,
	0x52, 0x0b, 0x69, 0x73, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x12, 0x31, 0x0a,
	0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x28, 0x0a, 0x08, 0x41, 0x5a, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x41, 0x5a, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x08, 0x41, 0x5a, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x30, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x55, 0x0a, 0x0f,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x13, 0xca,
	0xbb, 0x18, 0x0f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x43, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x6b,
	0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xbb, 0x18, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x71, 0x0a, 0x0f, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x5e, 0x0a, 0x1a, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x46, 0x6f, 0x72, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x42,
	0x1e, 0xca, 0xbb, 0x18, 0x1a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x1a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x46, 0x6f, 0x72, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x2a, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb7, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca,
	0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x08, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x6b, 0x65, 0x79, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49,
	0x6e, 0x22, 0x5b, 0x0a, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x78,
	0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x26, 0x0a, 0x0e, 0x41, 0x57, 0x53, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x57, 0x53, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x3a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4b,
	0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xb2, 0xbb,
	0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x22, 0x35, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x81, 0x01, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22,
	0xb9, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xb2, 0xbb, 0x18, 0x08, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x2b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0d, 0xb2, 0xbb, 0x18, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x44, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x28, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x0c, 0xb2, 0xbb, 0x18, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xb2, 0xbb, 0x18, 0x06, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x6f, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x22, 0x4f, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x60, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x22, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xb2, 0xbb, 0x18, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xb2, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xd3,
	0x04, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x65, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x70,
	0x65, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6d,
	0x6b, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6d, 0x6b,
	0x55, 0x55, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x5a, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x5a, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x12, 0x34, 0x0a, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x0b, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x22,
	0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x75, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x46,
	0x0a, 0x11, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x11, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x7a, 0x6f, 0x6e, 0x65, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x7a, 0x6f, 0x6e, 0x65, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x22, 0x9f, 0x01, 0x0a, 0x0b, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x6d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61,
	0x78, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x4f, 0x6e, 0x52, 0x61, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x4f, 0x6e, 0x52, 0x61, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x53,
	0x69, 0x7a, 0x65, 0x4b, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x78,
	0x53, 0x69, 0x7a, 0x65, 0x4b, 0x62, 0x22, 0xb8, 0x04, 0x0a, 0x05, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x73, 0x69, 0x7a, 0x65, 0x4b, 0x62, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x69, 0x7a, 0x65, 0x4b, 0x62,
	0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x7a, 0x65,
	0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x69,
	0x7a, 0x65, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x69, 0x7a, 0x65,
	0x4b, 0x62, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x73, 0x69, 0x7a, 0x65, 0x4b, 0x62, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x69, 0x7a, 0x65, 0x4b, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x69,
	0x7a, 0x65, 0x4b, 0x62, 0x12, 0x3a, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x61, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x61,
	0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x12, 0x30, 0x0a, 0x13, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x64, 0x65, 0x6c, 0x47, 0x6c, 0x61, 0x63,
	0x69, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x65,
	0x61, 0x72, 0x6c, 0x79, 0x64, 0x65, 0x6c, 0x47, 0x6c, 0x61, 0x63, 0x69, 0x65, 0x72, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x49, 0x0a, 0x12, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x47, 0x6c, 0x61, 0x63, 0x69, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x47, 0x6c, 0x61, 0x63, 0x69, 0x65, 0x72, 0x52, 0x12, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x47, 0x6c, 0x61, 0x63, 0x69, 0x65, 0x72, 0x12, 0x4c, 0x0a,
	0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x52, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6e,
	0x75, 0x6d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74,
	0x73, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x64, 0x65, 0x6c, 0x49, 0x61, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x65, 0x61, 0x72, 0x6c, 0x79,
	0x64, 0x65, 0x6c, 0x49, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x69, 0x7a,
	0x65, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x73, 0x69, 0x7a, 0x65, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x22, 0x93, 0x02, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x61, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x69, 0x7a, 0x65, 0x4b, 0x62, 0x55, 0x74, 0x69,
	0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x69, 0x7a,
	0x65, 0x4b, 0x62, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x69, 0x7a, 0x65, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x73, 0x69, 0x7a, 0x65, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x73,
	0x69, 0x7a, 0x65, 0x4b, 0x62, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x73, 0x69, 0x7a, 0x65, 0x4b, 0x62, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x12,
	0x1e, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x73, 0x69, 0x7a, 0x65, 0x55, 0x74, 0x69, 0x6c, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x69, 0x7a, 0x65, 0x55, 0x74, 0x69, 0x6c,
	0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x61, 0x72, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x75,
	0x6d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x69, 0x7a, 0x65, 0x4b, 0x62, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x69, 0x7a,
	0x65, 0x4b, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x98, 0x02, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x47, 0x6c, 0x61, 0x63, 0x69, 0x65, 0x72, 0x12, 0x26,
	0x0a, 0x0e, 0x73, 0x69, 0x7a, 0x65, 0x4b, 0x62, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x69, 0x7a, 0x65, 0x4b, 0x62, 0x55, 0x74,
	0x69, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x41, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x69, 0x7a, 0x65,
	0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x69, 0x7a, 0x65, 0x4b, 0x62,
	0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x69,
	0x7a, 0x65, 0x4b, 0x62, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x75,
	0x6d, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6e, 0x75, 0x6d, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x69,
	0x7a, 0x65, 0x55, 0x74, 0x69, 0x6c, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x73, 0x69, 0x7a, 0x65, 0x55, 0x74, 0x69, 0x6c, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x61, 0x72, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x7a, 0x65, 0x4b, 0x62,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x69, 0x7a, 0x65, 0x4b, 0x62, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x22, 0x99, 0x02, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x69,
	0x7a, 0x65, 0x4b, 0x62, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x73, 0x69, 0x7a, 0x65, 0x4b, 0x62, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x41, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x69, 0x7a, 0x65, 0x4b, 0x62, 0x41, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x69, 0x7a, 0x65, 0x4b, 0x62,
	0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x69, 0x7a, 0x65, 0x55, 0x74,
	0x69, 0x6c, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73,
	0x69, 0x7a, 0x65, 0x55, 0x74, 0x69, 0x6c, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x6e, 0x75, 0x6d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72,
	0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x7a, 0x65, 0x4b, 0x62, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x69, 0x7a, 0x65, 0x4b, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x73,
	0x0a, 0x11, 0x45, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x50, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x50, 0x6f, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x6f,
	0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x50,
	0x6f, 0x6f, 0x6c, 0x22, 0x63, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xb2, 0xbb, 0x18, 0x06,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x28,
	0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0c, 0xb2, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x08,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x52, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x06, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x22, 0x39, 0x0a, 0x05,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x51, 0x0a, 0x05, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x12, 0x28, 0x0a, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65,
	0x65, 0x52, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x85, 0x01, 0x0a, 0x07, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x49, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55,
	0x52, 0x49, 0x22, 0xe5, 0x01, 0x0a, 0x13, 0x50, 0x75, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x28,
	0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x08,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x19, 0x0a, 0x03, 0x41, 0x43, 0x4c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x41, 0x43, 0x4c, 0x52, 0x03,
	0x41, 0x43, 0x4c, 0x12, 0x65, 0x0a, 0x13, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x42, 0x17, 0xca, 0xbb,
	0x18, 0x13, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x13, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x76, 0x0a, 0x13, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x12, 0x2d, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x42, 0x09,
	0xca, 0xbb, 0x18, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x30, 0x0a, 0x06, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x42, 0x0a,
	0xca, 0xbb, 0x18, 0x06, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x06, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x73, 0x22, 0x2a, 0x0a, 0x14, 0x50, 0x75, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x41,
	0x63, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc3,
	0x01, 0x0a, 0x14, 0x50, 0x75, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca,
	0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x08, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x5d, 0x0a, 0x11, 0x43, 0x4f, 0x52, 0x53, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x4f, 0x52, 0x53, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x15, 0xca, 0xbb, 0x18, 0x11,
	0x43, 0x4f, 0x52, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x11, 0x43, 0x4f, 0x52, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x51, 0x0a, 0x11, 0x43, 0x4f, 0x52, 0x53, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x09, 0x43, 0x4f, 0x52,
	0x53, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x4f, 0x52, 0x53, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x0d, 0xca,
	0xbb, 0x18, 0x09, 0x43, 0x4f, 0x52, 0x53, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x09, 0x43, 0x4f,
	0x52, 0x53, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x22, 0xb0, 0x02, 0x0a, 0x08, 0x43, 0x4f, 0x52, 0x53,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x3a, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x12, 0xca, 0xbb,
	0x18, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x3a, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x12, 0xca, 0xbb, 0x18, 0x0e, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x52, 0x0e, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x3a, 0x0a, 0x0e,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x42, 0x12, 0xca, 0xbb, 0x18, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x73, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x73, 0x12, 0x37, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x6f,
	0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x42,
	0x11, 0xca, 0xbb, 0x18, 0x0d, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x12, 0x37, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x41, 0x67, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x11, 0xca, 0xbb, 0x18, 0x0d, 0x6d, 0x61,
	0x78, 0x41, 0x67, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x0d, 0x6d, 0x61, 0x78,
	0x41, 0x67, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x50, 0x75,
	0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0xce, 0x08, 0x0a, 0x0a, 0x5a, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x22, 0xca, 0xc1, 0x18, 0x1e, 0x2f, 0x76, 0x34, 0x2f, 0x6f, 0x73, 0x73, 0x2f, 0x67,
	0x65, 0x74, 0x2d, 0x6f, 0x73, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x5b, 0x0a, 0x0d, 0x4e, 0x65, 0x77, 0x4f, 0x73, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e,
	0x65, 0x77, 0x4f, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x77, 0x4f,
	0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x0f, 0xd2, 0xc1, 0x18, 0x0b, 0x2f, 0x76, 0x34, 0x2f, 0x6f, 0x73, 0x73, 0x2f, 0x6e,
	0x65, 0x77, 0x12, 0x62, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0xd2, 0xc1, 0x18,
	0x15, 0x2f, 0x76, 0x34, 0x2f, 0x6f, 0x73, 0x73, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2d,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x94, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c,
	0x69, 0x6e, 0x6b, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0xd2, 0xc1, 0x18, 0x23, 0x2f, 0x76, 0x34, 0x2f, 0x6f, 0x73,
	0x73, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x2d, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x2d, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2d, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x4e, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0xca, 0xc1, 0x18, 0x10, 0x2f, 0x76, 0x34,
	0x2f, 0x6f, 0x73, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x2d, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x5e, 0x0a,
	0x0b, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x18, 0xca, 0xc1, 0x18, 0x14, 0x2f, 0x76, 0x34, 0x2f, 0x6f, 0x73, 0x73,
	0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2d, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x5b, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0xca,
	0xc1, 0x18, 0x17, 0x2f, 0x76, 0x34, 0x2f, 0x6f, 0x73, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x2d, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x2d, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x63, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x6c, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1a, 0xca, 0xc1, 0x18, 0x16, 0x2f, 0x76, 0x34, 0x2f, 0x6f, 0x73, 0x73,
	0x2f, 0x67, 0x65, 0x74, 0x2d, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2d, 0x61, 0x63, 0x6c, 0x12,
	0x63, 0x0a, 0x0c, 0x50, 0x75, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x6c, 0x12,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0xd2, 0xc1, 0x18, 0x16, 0x2f, 0x76,
	0x34, 0x2f, 0x6f, 0x73, 0x73, 0x2f, 0x70, 0x75, 0x74, 0x2d, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x2d, 0x61, 0x63, 0x6c, 0x12, 0x67, 0x0a, 0x0d, 0x50, 0x75, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x43, 0x6f, 0x72, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75,
	0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x74, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1b, 0xd2, 0xc1, 0x18, 0x17, 0x2f, 0x76, 0x34, 0x2f, 0x6f, 0x73, 0x73, 0x2f, 0x70, 0x75,
	0x74, 0x2d, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2d, 0x63, 0x6f, 0x72, 0x73, 0x1a, 0x25, 0x92,
	0xce, 0x18, 0x21, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x7a, 0x6f, 0x73, 0x2d, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x63, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x74, 0x79, 0x75,
	0x6e, 0x2e, 0x63, 0x6e, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x74, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x73, 0x64,
	0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x7a, 0x6f, 0x73,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x7a, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_oss_proto_rawDescOnce sync.Once
	file_oss_proto_rawDescData = file_oss_proto_rawDesc
)

func file_oss_proto_rawDescGZIP() []byte {
	file_oss_proto_rawDescOnce.Do(func() {
		file_oss_proto_rawDescData = protoimpl.X.CompressGZIP(file_oss_proto_rawDescData)
	})
	return file_oss_proto_rawDescData
}

var file_oss_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_oss_proto_goTypes = []interface{}{
	(*GetOssServiceStatusRequest)(nil),       // 0: proto.GetOssServiceStatusRequest
	(*GetOssServiceStatusResponse)(nil),      // 1: proto.GetOssServiceStatusResponse
	(*NewOssServiceRequest)(nil),             // 2: proto.NewOssServiceRequest
	(*NewOssServiceResponse)(nil),            // 3: proto.NewOssServiceResponse
	(*Resources)(nil),                        // 4: proto.resources
	(*CreateBucketRequest)(nil),              // 5: proto.CreateBucketRequest
	(*Label)(nil),                            // 6: proto.label
	(*OtherBucketInfo)(nil),                  // 7: proto.otherBucketInfo
	(*CreateBucketResponse)(nil),             // 8: proto.CreateBucketResponse
	(*GenerateObjectUploadLinkRequest)(nil),  // 9: proto.GenerateObjectUploadLinkRequest
	(*GenerateObjectUploadLinkResponse)(nil), // 10: proto.GenerateObjectUploadLinkResponse
	(*Fields)(nil),                           // 11: proto.Fields
	(*GetKeysRequest)(nil),                   // 12: proto.GetKeysRequest
	(*GetKeysResponse)(nil),                  // 13: proto.GetKeysResponse
	(*GetKeys)(nil),                          // 14: proto.GetKeys
	(*ListBucketsRequest)(nil),               // 15: proto.ListBucketsRequest
	(*ListBucketsResponse)(nil),              // 16: proto.ListBucketsResponse
	(*GetBucketRequest)(nil),                 // 17: proto.GetBucketRequest
	(*GetBucketResponse)(nil),                // 18: proto.GetBucketResponse
	(*BucketQuota)(nil),                      // 19: proto.BucketQuota
	(*Usage)(nil),                            // 20: proto.Usage
	(*StorageTypeIa)(nil),                    // 21: proto.StorageTypeIa
	(*StorageTypeGlacier)(nil),               // 22: proto.StorageTypeGlacier
	(*StorageTypeStandard)(nil),              // 23: proto.StorageTypeStandard
	(*ExplicitPlacement)(nil),                // 24: proto.ExplicitPlacement
	(*GetBucketAclRequest)(nil),              // 25: proto.GetBucketAclRequest
	(*GetBucketAclResponse)(nil),             // 26: proto.GetBucketAclResponse
	(*Owner)(nil),                            // 27: proto.Owner
	(*Grant)(nil),                            // 28: proto.Grant
	(*Grantee)(nil),                          // 29: proto.Grantee
	(*PutBucketAclRequest)(nil),              // 30: proto.PutBucketAclRequest
	(*AccessControlPolicy)(nil),              // 31: proto.AccessControlPolicy
	(*PutBucketAclResponse)(nil),             // 32: proto.PutBucketAclResponse
	(*PutBucketCorsRequest)(nil),             // 33: proto.PutBucketCorsRequest
	(*CORSConfiguration)(nil),                // 34: proto.CORSConfiguration
	(*CORSRule)(nil),                         // 35: proto.CORSRule
	(*PutBucketCorsResponse)(nil),            // 36: proto.PutBucketCorsResponse
}
var file_oss_proto_depIdxs = []int32{
	4,  // 0: proto.NewOssServiceResponse.resources:type_name -> proto.resources
	6,  // 1: proto.CreateBucketRequest.labels:type_name -> proto.label
	7,  // 2: proto.CreateBucketRequest.otherBucketInfo:type_name -> proto.otherBucketInfo
	11, // 3: proto.GenerateObjectUploadLinkResponse.fields:type_name -> proto.Fields
	14, // 4: proto.GetKeysResponse.data:type_name -> proto.GetKeys
	18, // 5: proto.ListBucketsResponse.bucketList:type_name -> proto.GetBucketResponse
	19, // 6: proto.GetBucketResponse.bucketQuota:type_name -> proto.BucketQuota
	20, // 7: proto.GetBucketResponse.usage:type_name -> proto.Usage
	24, // 8: proto.GetBucketResponse.explicitPlacement:type_name -> proto.ExplicitPlacement
	21, // 9: proto.Usage.storageTypeIa:type_name -> proto.StorageTypeIa
	22, // 10: proto.Usage.storageTypeGlacier:type_name -> proto.StorageTypeGlacier
	23, // 11: proto.Usage.storageTypeStandard:type_name -> proto.StorageTypeStandard
	28, // 12: proto.GetBucketAclResponse.grants:type_name -> proto.Grant
	29, // 13: proto.Grant.grantee:type_name -> proto.Grantee
	31, // 14: proto.PutBucketAclRequest.accessControlPolicy:type_name -> proto.AccessControlPolicy
	27, // 15: proto.AccessControlPolicy.owner:type_name -> proto.Owner
	28, // 16: proto.AccessControlPolicy.grants:type_name -> proto.Grant
	34, // 17: proto.PutBucketCorsRequest.CORSConfiguration:type_name -> proto.CORSConfiguration
	35, // 18: proto.CORSConfiguration.CORSRules:type_name -> proto.CORSRule
	0,  // 19: proto.ZosService.GetOssServiceStatus:input_type -> proto.GetOssServiceStatusRequest
	2,  // 20: proto.ZosService.NewOssService:input_type -> proto.NewOssServiceRequest
	5,  // 21: proto.ZosService.CreateBucket:input_type -> proto.CreateBucketRequest
	9,  // 22: proto.ZosService.GenerateObjectUploadLink:input_type -> proto.GenerateObjectUploadLinkRequest
	12, // 23: proto.ZosService.GetKeys:input_type -> proto.GetKeysRequest
	15, // 24: proto.ZosService.ListBuckets:input_type -> proto.ListBucketsRequest
	17, // 25: proto.ZosService.GetBucket:input_type -> proto.GetBucketRequest
	25, // 26: proto.ZosService.GetBucketAcl:input_type -> proto.GetBucketAclRequest
	30, // 27: proto.ZosService.PutBucketAcl:input_type -> proto.PutBucketAclRequest
	33, // 28: proto.ZosService.PutBucketCors:input_type -> proto.PutBucketCorsRequest
	1,  // 29: proto.ZosService.GetOssServiceStatus:output_type -> proto.GetOssServiceStatusResponse
	3,  // 30: proto.ZosService.NewOssService:output_type -> proto.NewOssServiceResponse
	8,  // 31: proto.ZosService.CreateBucket:output_type -> proto.CreateBucketResponse
	10, // 32: proto.ZosService.GenerateObjectUploadLink:output_type -> proto.GenerateObjectUploadLinkResponse
	13, // 33: proto.ZosService.GetKeys:output_type -> proto.GetKeysResponse
	16, // 34: proto.ZosService.ListBuckets:output_type -> proto.ListBucketsResponse
	18, // 35: proto.ZosService.GetBucket:output_type -> proto.GetBucketResponse
	26, // 36: proto.ZosService.GetBucketAcl:output_type -> proto.GetBucketAclResponse
	32, // 37: proto.ZosService.PutBucketAcl:output_type -> proto.PutBucketAclResponse
	36, // 38: proto.ZosService.PutBucketCors:output_type -> proto.PutBucketCorsResponse
	29, // [29:39] is the sub-list for method output_type
	19, // [19:29] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_oss_proto_init() }
func file_oss_proto_init() {
	if File_oss_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_oss_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOssServiceStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOssServiceStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOssServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOssServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBucketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Label); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OtherBucketInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBucketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateObjectUploadLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateObjectUploadLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBucketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBucketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBucketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBucketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketQuota); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Usage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageTypeIa); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageTypeGlacier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageTypeStandard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExplicitPlacement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBucketAclRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBucketAclResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Owner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Grant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Grantee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutBucketAclRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessControlPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutBucketAclResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutBucketCorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CORSConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CORSRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutBucketCorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oss_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_oss_proto_goTypes,
		DependencyIndexes: file_oss_proto_depIdxs,
		MessageInfos:      file_oss_proto_msgTypes,
	}.Build()
	File_oss_proto = out.File
	file_oss_proto_rawDesc = nil
	file_oss_proto_goTypes = nil
	file_oss_proto_depIdxs = nil
}
