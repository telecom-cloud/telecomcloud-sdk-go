// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v4.25.1
// source: delegate.proto

package delegate

import (
	_ "github.com/telecom-cloud/client-go/pkg/openapi/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateAutomateDelegateRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientToken string   `protobuf:"bytes,1,opt,name=ClientToken,proto3" form:"ClientToken" json:"ClientToken,omitempty"`
	AccountId   string   `protobuf:"bytes,2,opt,name=accountId,proto3" form:"accountId" json:"accountId,omitempty"`
	PolicyIds   []string `protobuf:"bytes,3,rep,name=policyIds,proto3" form:"policyIds" json:"policyIds,omitempty"`
	Name        string   `protobuf:"bytes,4,opt,name=name,proto3" form:"name" json:"name,omitempty"`
	Remark      string   `protobuf:"bytes,5,opt,name=remark,proto3" form:"remark" json:"remark,omitempty"`
	RangeType   string   `protobuf:"bytes,6,opt,name=rangeType,proto3" form:"rangeType" json:"rangeType,omitempty"`
	RegionIds   []string `protobuf:"bytes,7,rep,name=regionIds,proto3" form:"regionIds" json:"regionIds,omitempty"`
}

func (x *CreateAutomateDelegateRoleRequest) Reset() {
	*x = CreateAutomateDelegateRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delegate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAutomateDelegateRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAutomateDelegateRoleRequest) ProtoMessage() {}

func (x *CreateAutomateDelegateRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_delegate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAutomateDelegateRoleRequest.ProtoReflect.Descriptor instead.
func (*CreateAutomateDelegateRoleRequest) Descriptor() ([]byte, []int) {
	return file_delegate_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAutomateDelegateRoleRequest) GetClientToken() string {
	if x != nil {
		return x.ClientToken
	}
	return ""
}

func (x *CreateAutomateDelegateRoleRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *CreateAutomateDelegateRoleRequest) GetPolicyIds() []string {
	if x != nil {
		return x.PolicyIds
	}
	return nil
}

func (x *CreateAutomateDelegateRoleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAutomateDelegateRoleRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CreateAutomateDelegateRoleRequest) GetRangeType() string {
	if x != nil {
		return x.RangeType
	}
	return ""
}

func (x *CreateAutomateDelegateRoleRequest) GetRegionIds() []string {
	if x != nil {
		return x.RegionIds
	}
	return nil
}

type CreateAutomateDelegateRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string    `protobuf:"bytes,1,opt,name=name,proto3" form:"name" json:"name,omitempty" query:"name"`
	AccountId       string    `protobuf:"bytes,2,opt,name=accountId,proto3" form:"accountId" json:"accountId,omitempty" query:"accountId"`
	AssumeAccountId string    `protobuf:"bytes,3,opt,name=assumeAccountId,proto3" form:"assumeAccountId" json:"assumeAccountId,omitempty" query:"assumeAccountId"`
	AssumeUserId    string    `protobuf:"bytes,4,opt,name=assumeUserId,proto3" form:"assumeUserId" json:"assumeUserId,omitempty" query:"assumeUserId"`
	PolicyList      []*Policy `protobuf:"bytes,5,rep,name=policyList,proto3" form:"policyList" json:"policyList,omitempty" query:"policyList"`
}

func (x *CreateAutomateDelegateRoleResponse) Reset() {
	*x = CreateAutomateDelegateRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delegate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAutomateDelegateRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAutomateDelegateRoleResponse) ProtoMessage() {}

func (x *CreateAutomateDelegateRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_delegate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAutomateDelegateRoleResponse.ProtoReflect.Descriptor instead.
func (*CreateAutomateDelegateRoleResponse) Descriptor() ([]byte, []int) {
	return file_delegate_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAutomateDelegateRoleResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAutomateDelegateRoleResponse) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *CreateAutomateDelegateRoleResponse) GetAssumeAccountId() string {
	if x != nil {
		return x.AssumeAccountId
	}
	return ""
}

func (x *CreateAutomateDelegateRoleResponse) GetAssumeUserId() string {
	if x != nil {
		return x.AssumeUserId
	}
	return ""
}

func (x *CreateAutomateDelegateRoleResponse) GetPolicyList() []*Policy {
	if x != nil {
		return x.PolicyList
	}
	return nil
}

type Policy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string `protobuf:"bytes,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`
	PolicyName        string `protobuf:"bytes,2,opt,name=policyName,proto3" form:"policyName" json:"policyName,omitempty" query:"policyName"`
	PolicyDescription string `protobuf:"bytes,3,opt,name=policyDescription,proto3" form:"policyDescription" json:"policyDescription,omitempty" query:"policyDescription"`
	PolicyContent     string `protobuf:"bytes,4,opt,name=policyContent,proto3" form:"policyContent" json:"policyContent,omitempty" query:"policyContent"`
}

func (x *Policy) Reset() {
	*x = Policy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delegate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Policy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policy) ProtoMessage() {}

func (x *Policy) ProtoReflect() protoreflect.Message {
	mi := &file_delegate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Policy.ProtoReflect.Descriptor instead.
func (*Policy) Descriptor() ([]byte, []int) {
	return file_delegate_proto_rawDescGZIP(), []int{2}
}

func (x *Policy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Policy) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *Policy) GetPolicyDescription() string {
	if x != nil {
		return x.PolicyDescription
	}
	return ""
}

func (x *Policy) GetPolicyContent() string {
	if x != nil {
		return x.PolicyContent
	}
	return ""
}

type SwitchDelegateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientToken  string `protobuf:"bytes,1,opt,name=ClientToken,proto3" form:"ClientToken" json:"ClientToken,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" form:"name" json:"name,omitempty"`
	AssumeUserId string `protobuf:"bytes,3,opt,name=assumeUserId,proto3" form:"assumeUserId" json:"assumeUserId,omitempty"`
	AccountId    string `protobuf:"bytes,4,opt,name=accountId,proto3" form:"accountId" json:"accountId,omitempty"`
	ValidTime    int32  `protobuf:"varint,5,opt,name=validTime,proto3" form:"validTime" json:"validTime,omitempty"`
	SupportS3    bool   `protobuf:"varint,6,opt,name=supportS3,proto3" form:"supportS3" json:"supportS3,omitempty"`
}

func (x *SwitchDelegateRequest) Reset() {
	*x = SwitchDelegateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delegate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchDelegateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchDelegateRequest) ProtoMessage() {}

func (x *SwitchDelegateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_delegate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchDelegateRequest.ProtoReflect.Descriptor instead.
func (*SwitchDelegateRequest) Descriptor() ([]byte, []int) {
	return file_delegate_proto_rawDescGZIP(), []int{3}
}

func (x *SwitchDelegateRequest) GetClientToken() string {
	if x != nil {
		return x.ClientToken
	}
	return ""
}

func (x *SwitchDelegateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SwitchDelegateRequest) GetAssumeUserId() string {
	if x != nil {
		return x.AssumeUserId
	}
	return ""
}

func (x *SwitchDelegateRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *SwitchDelegateRequest) GetValidTime() int32 {
	if x != nil {
		return x.ValidTime
	}
	return 0
}

func (x *SwitchDelegateRequest) GetSupportS3() bool {
	if x != nil {
		return x.SupportS3
	}
	return false
}

type SwitchDelegateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId      string `protobuf:"bytes,1,opt,name=appId,proto3" form:"appId" json:"appId,omitempty" query:"appId"`
	AppKey     string `protobuf:"bytes,2,opt,name=appKey,proto3" form:"appKey" json:"appKey,omitempty" query:"appKey"`
	ExpireTime int64  `protobuf:"varint,3,opt,name=expireTime,proto3" form:"expireTime" json:"expireTime,omitempty" query:"expireTime"`
	Token      string `protobuf:"bytes,4,opt,name=token,proto3" form:"token" json:"token,omitempty" query:"token"`
}

func (x *SwitchDelegateResponse) Reset() {
	*x = SwitchDelegateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delegate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchDelegateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchDelegateResponse) ProtoMessage() {}

func (x *SwitchDelegateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_delegate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchDelegateResponse.ProtoReflect.Descriptor instead.
func (*SwitchDelegateResponse) Descriptor() ([]byte, []int) {
	return file_delegate_proto_rawDescGZIP(), []int{4}
}

func (x *SwitchDelegateResponse) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *SwitchDelegateResponse) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *SwitchDelegateResponse) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *SwitchDelegateResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type CheckDelegateExistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" query:"name"`
	AccountId string `protobuf:"bytes,2,opt,name=accountId,proto3" json:"accountId,omitempty" query:"accountId"`
}

func (x *CheckDelegateExistRequest) Reset() {
	*x = CheckDelegateExistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delegate_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckDelegateExistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDelegateExistRequest) ProtoMessage() {}

func (x *CheckDelegateExistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_delegate_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDelegateExistRequest.ProtoReflect.Descriptor instead.
func (*CheckDelegateExistRequest) Descriptor() ([]byte, []int) {
	return file_delegate_proto_rawDescGZIP(), []int{5}
}

func (x *CheckDelegateExistRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CheckDelegateExistRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type CheckDelegateExistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CheckDelegateExistResponse) Reset() {
	*x = CheckDelegateExistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delegate_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckDelegateExistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDelegateExistResponse) ProtoMessage() {}

func (x *CheckDelegateExistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_delegate_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDelegateExistResponse.ProtoReflect.Descriptor instead.
func (*CheckDelegateExistResponse) Descriptor() ([]byte, []int) {
	return file_delegate_proto_rawDescGZIP(), []int{6}
}

type QueryDelegateListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty" query:"accountId"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" query:"name"`
	Type      string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty" query:"type"`
}

func (x *QueryDelegateListRequest) Reset() {
	*x = QueryDelegateListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delegate_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDelegateListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDelegateListRequest) ProtoMessage() {}

func (x *QueryDelegateListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_delegate_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDelegateListRequest.ProtoReflect.Descriptor instead.
func (*QueryDelegateListRequest) Descriptor() ([]byte, []int) {
	return file_delegate_proto_rawDescGZIP(), []int{7}
}

func (x *QueryDelegateListRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *QueryDelegateListRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryDelegateListRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type QueryDelegateListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*AssumeRole `protobuf:"bytes,1,rep,name=Result,proto3" form:"Result" json:"Result,omitempty" query:"Result"`
}

func (x *QueryDelegateListResponse) Reset() {
	*x = QueryDelegateListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delegate_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDelegateListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDelegateListResponse) ProtoMessage() {}

func (x *QueryDelegateListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_delegate_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDelegateListResponse.ProtoReflect.Descriptor instead.
func (*QueryDelegateListResponse) Descriptor() ([]byte, []int) {
	return file_delegate_proto_rawDescGZIP(), []int{8}
}

func (x *QueryDelegateListResponse) GetResult() []*AssumeRole {
	if x != nil {
		return x.Result
	}
	return nil
}

type AssumeRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" form:"name" json:"name,omitempty" query:"name"`
	AccountId    string `protobuf:"bytes,2,opt,name=accountId,proto3" form:"accountId" json:"accountId,omitempty" query:"accountId"`
	AssumeUserId string `protobuf:"bytes,3,opt,name=assumeUserId,proto3" form:"assumeUserId" json:"assumeUserId,omitempty" query:"assumeUserId"`
	Type         int64  `protobuf:"varint,4,opt,name=type,proto3" form:"type" json:"type,omitempty" query:"type"`
	CreateTime   int64  `protobuf:"varint,5,opt,name=createTime,proto3" form:"createTime" json:"createTime,omitempty" query:"createTime"`
	UpdateTime   int64  `protobuf:"varint,6,opt,name=updateTime,proto3" form:"updateTime" json:"updateTime,omitempty" query:"updateTime"`
}

func (x *AssumeRole) Reset() {
	*x = AssumeRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delegate_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssumeRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssumeRole) ProtoMessage() {}

func (x *AssumeRole) ProtoReflect() protoreflect.Message {
	mi := &file_delegate_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssumeRole.ProtoReflect.Descriptor instead.
func (*AssumeRole) Descriptor() ([]byte, []int) {
	return file_delegate_proto_rawDescGZIP(), []int{9}
}

func (x *AssumeRole) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AssumeRole) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AssumeRole) GetAssumeUserId() string {
	if x != nil {
		return x.AssumeUserId
	}
	return ""
}

func (x *AssumeRole) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AssumeRole) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AssumeRole) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type SetEpGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" form:"id" json:"id,omitempty"`
	ProjectId string `protobuf:"bytes,2,opt,name=projectId,proto3" form:"projectId" json:"projectId,omitempty"`
	PloyIds   string `protobuf:"bytes,3,opt,name=ployIds,proto3" form:"ployIds" json:"ployIds,omitempty"`
	Value     string `protobuf:"bytes,4,opt,name=value,proto3" form:"value" json:"value,omitempty"`
	AccountId string `protobuf:"bytes,5,opt,name=accountId,proto3" form:"accountId" json:"accountId,omitempty"`
}

func (x *SetEpGroupRequest) Reset() {
	*x = SetEpGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delegate_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetEpGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEpGroupRequest) ProtoMessage() {}

func (x *SetEpGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_delegate_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEpGroupRequest.ProtoReflect.Descriptor instead.
func (*SetEpGroupRequest) Descriptor() ([]byte, []int) {
	return file_delegate_proto_rawDescGZIP(), []int{10}
}

func (x *SetEpGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetEpGroupRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *SetEpGroupRequest) GetPloyIds() string {
	if x != nil {
		return x.PloyIds
	}
	return ""
}

func (x *SetEpGroupRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SetEpGroupRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type SetEpGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectPrivilegeMessageBoList []*ProjectPrivilegeMessageBoList `protobuf:"bytes,1,rep,name=projectPrivilegeMessageBoList,proto3" form:"projectPrivilegeMessageBoList" json:"projectPrivilegeMessageBoList,omitempty" query:"projectPrivilegeMessageBoList"`
	EntProjectObjRelId            string                           `protobuf:"bytes,2,opt,name=entProjectObjRelId,proto3" form:"entProjectObjRelId" json:"entProjectObjRelId,omitempty" query:"entProjectObjRelId"`
}

func (x *SetEpGroupResponse) Reset() {
	*x = SetEpGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delegate_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetEpGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEpGroupResponse) ProtoMessage() {}

func (x *SetEpGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_delegate_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEpGroupResponse.ProtoReflect.Descriptor instead.
func (*SetEpGroupResponse) Descriptor() ([]byte, []int) {
	return file_delegate_proto_rawDescGZIP(), []int{11}
}

func (x *SetEpGroupResponse) GetProjectPrivilegeMessageBoList() []*ProjectPrivilegeMessageBoList {
	if x != nil {
		return x.ProjectPrivilegeMessageBoList
	}
	return nil
}

func (x *SetEpGroupResponse) GetEntProjectObjRelId() string {
	if x != nil {
		return x.EntProjectObjRelId
	}
	return ""
}

type ProjectPrivilegeMessageBoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolyId      string `protobuf:"bytes,1,opt,name=polyId,proto3" form:"polyId" json:"polyId,omitempty" query:"polyId"`
	PrivilegeId string `protobuf:"bytes,2,opt,name=privilegeId,proto3" form:"privilegeId" json:"privilegeId,omitempty" query:"privilegeId"`
}

func (x *ProjectPrivilegeMessageBoList) Reset() {
	*x = ProjectPrivilegeMessageBoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delegate_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectPrivilegeMessageBoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectPrivilegeMessageBoList) ProtoMessage() {}

func (x *ProjectPrivilegeMessageBoList) ProtoReflect() protoreflect.Message {
	mi := &file_delegate_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectPrivilegeMessageBoList.ProtoReflect.Descriptor instead.
func (*ProjectPrivilegeMessageBoList) Descriptor() ([]byte, []int) {
	return file_delegate_proto_rawDescGZIP(), []int{12}
}

func (x *ProjectPrivilegeMessageBoList) GetPolyId() string {
	if x != nil {
		return x.PolyId
	}
	return ""
}

func (x *ProjectPrivilegeMessageBoList) GetPrivilegeId() string {
	if x != nil {
		return x.PrivilegeId
	}
	return ""
}

var File_delegate_proto protoreflect.FileDescriptor

var file_delegate_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69,
	0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xcc, 0x02, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74,
	0x6f, 0x6d, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xca,
	0xbb, 0x18, 0x0b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0b,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2b, 0x0a, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d,
	0xca, 0xbb, 0x18, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18,
	0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x73, 0x52, 0x09, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x2b, 0x0a, 0x09, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x52, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x73, 0x22, 0xd3, 0x01, 0x0a, 0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f,
	0x6d, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x73,
	0x73, 0x75, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x73, 0x73, 0x75, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x75, 0x6d, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x75,
	0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0a, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8c, 0x01, 0x0a, 0x06, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x24, 0x0a, 0x0d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xa5, 0x02, 0x0a, 0x15, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x31, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x34, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x75, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xca, 0xbb, 0x18, 0x0c, 0x61, 0x73, 0x73,
	0x75, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x75, 0x6d,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x2b, 0x0a, 0x09, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x33, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x53, 0x33, 0x52, 0x09, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x33, 0x22, 0x7c,
	0x0a, 0x16, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x66, 0x0a, 0x19,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xb2, 0xbb, 0x18, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xb2, 0xbb, 0x18, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2b, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0d, 0xb2, 0xbb, 0x18, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xb2, 0xbb, 0x18, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xb2, 0xbb, 0x18, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x46, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x73,
	0x73, 0x75, 0x6d, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xb6, 0x01, 0x0a, 0x0a, 0x41, 0x73, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x75, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x75, 0x6d, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x11, 0x53, 0x65,
	0x74, 0x45, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xca, 0xbb, 0x18,
	0x02, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x07, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x70, 0x6c, 0x6f, 0x79, 0x49,
	0x64, 0x73, 0x52, 0x07, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xbb, 0x18, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0d, 0xca, 0xbb, 0x18, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x12, 0x53, 0x65,
	0x74, 0x45, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6a, 0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x69, 0x76, 0x69,
	0x6c, 0x65, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x1d, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x12,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x62, 0x6a, 0x52, 0x65, 0x6c,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x4f, 0x62, 0x6a, 0x52, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x1d,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x6f, 0x6c, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x6f, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65,
	0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x76,
	0x69, 0x6c, 0x65, 0x67, 0x65, 0x49, 0x64, 0x32, 0xae, 0x05, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x12, 0x9e, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f,
	0x6d, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0xd2, 0xc1, 0x18, 0x27, 0x2f, 0x76,
	0x31, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x6e, 0x0a, 0x0e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x44,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0xd2, 0xc1, 0x18, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x7e, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x23, 0xca, 0xc1, 0x18, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x7a, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0xca,
	0xc1, 0x18, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x6c, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x45, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x45, 0x70, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x65, 0x74, 0x45, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0xd2, 0xc1, 0x18, 0x25, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x73, 0x65, 0x74, 0x45, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x50, 0x6c, 0x6f, 0x79, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x54, 0x6f, 0x42, 0x1a,
	0x27, 0x92, 0xce, 0x18, 0x23, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x63, 0x74, 0x69,
	0x61, 0x6d, 0x2d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x63, 0x74, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x74, 0x79, 0x75, 0x6e, 0x2e, 0x63, 0x6e, 0x42, 0x49, 0x5a, 0x47, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x2d, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_delegate_proto_rawDescOnce sync.Once
	file_delegate_proto_rawDescData = file_delegate_proto_rawDesc
)

func file_delegate_proto_rawDescGZIP() []byte {
	file_delegate_proto_rawDescOnce.Do(func() {
		file_delegate_proto_rawDescData = protoimpl.X.CompressGZIP(file_delegate_proto_rawDescData)
	})
	return file_delegate_proto_rawDescData
}

var file_delegate_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_delegate_proto_goTypes = []interface{}{
	(*CreateAutomateDelegateRoleRequest)(nil),  // 0: proto.CreateAutomateDelegateRoleRequest
	(*CreateAutomateDelegateRoleResponse)(nil), // 1: proto.CreateAutomateDelegateRoleResponse
	(*Policy)(nil),                        // 2: proto.Policy
	(*SwitchDelegateRequest)(nil),         // 3: proto.SwitchDelegateRequest
	(*SwitchDelegateResponse)(nil),        // 4: proto.SwitchDelegateResponse
	(*CheckDelegateExistRequest)(nil),     // 5: proto.CheckDelegateExistRequest
	(*CheckDelegateExistResponse)(nil),    // 6: proto.CheckDelegateExistResponse
	(*QueryDelegateListRequest)(nil),      // 7: proto.QueryDelegateListRequest
	(*QueryDelegateListResponse)(nil),     // 8: proto.QueryDelegateListResponse
	(*AssumeRole)(nil),                    // 9: proto.AssumeRole
	(*SetEpGroupRequest)(nil),             // 10: proto.SetEpGroupRequest
	(*SetEpGroupResponse)(nil),            // 11: proto.SetEpGroupResponse
	(*ProjectPrivilegeMessageBoList)(nil), // 12: proto.projectPrivilegeMessageBoList
}
var file_delegate_proto_depIdxs = []int32{
	2,  // 0: proto.CreateAutomateDelegateRoleResponse.policyList:type_name -> proto.Policy
	9,  // 1: proto.QueryDelegateListResponse.Result:type_name -> proto.AssumeRole
	12, // 2: proto.SetEpGroupResponse.projectPrivilegeMessageBoList:type_name -> proto.projectPrivilegeMessageBoList
	0,  // 3: proto.Delegate.CreateAutomateDelegateRole:input_type -> proto.CreateAutomateDelegateRoleRequest
	3,  // 4: proto.Delegate.SwitchDelegate:input_type -> proto.SwitchDelegateRequest
	5,  // 5: proto.Delegate.CheckDelegateExist:input_type -> proto.CheckDelegateExistRequest
	7,  // 6: proto.Delegate.QueryDelegateList:input_type -> proto.QueryDelegateListRequest
	10, // 7: proto.Delegate.SetEpGroup:input_type -> proto.SetEpGroupRequest
	1,  // 8: proto.Delegate.CreateAutomateDelegateRole:output_type -> proto.CreateAutomateDelegateRoleResponse
	4,  // 9: proto.Delegate.SwitchDelegate:output_type -> proto.SwitchDelegateResponse
	6,  // 10: proto.Delegate.CheckDelegateExist:output_type -> proto.CheckDelegateExistResponse
	8,  // 11: proto.Delegate.QueryDelegateList:output_type -> proto.QueryDelegateListResponse
	11, // 12: proto.Delegate.SetEpGroup:output_type -> proto.SetEpGroupResponse
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_delegate_proto_init() }
func file_delegate_proto_init() {
	if File_delegate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_delegate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAutomateDelegateRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delegate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAutomateDelegateRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delegate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Policy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delegate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchDelegateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delegate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchDelegateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delegate_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckDelegateExistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delegate_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckDelegateExistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delegate_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDelegateListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delegate_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDelegateListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delegate_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssumeRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delegate_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetEpGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delegate_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetEpGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delegate_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectPrivilegeMessageBoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_delegate_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_delegate_proto_goTypes,
		DependencyIndexes: file_delegate_proto_depIdxs,
		MessageInfos:      file_delegate_proto_msgTypes,
	}.Build()
	File_delegate_proto = out.File
	file_delegate_proto_rawDesc = nil
	file_delegate_proto_goTypes = nil
	file_delegate_proto_depIdxs = nil
}
