// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v4.25.1
// source: instance.proto

package instance

import (
	_ "github.com/telecom-cloud/client-go/pkg/openapi/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubscribeEnterpriseInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId             string `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	InstanceName         string `protobuf:"bytes,2,opt,name=instanceName,proto3" form:"instanceName" json:"instanceName,omitempty"`
	InstanceType         string `protobuf:"bytes,3,opt,name=instanceType,proto3" form:"instanceType" json:"instanceType,omitempty"`
	CrUserName           string `protobuf:"bytes,4,opt,name=crUserName,proto3" form:"crUserName" json:"crUserName,omitempty"`
	CrUserPassword       string `protobuf:"bytes,5,opt,name=crUserPassword,proto3" form:"crUserPassword" json:"crUserPassword,omitempty"`
	OssBucket            string `protobuf:"bytes,7,opt,name=ossBucket,proto3" form:"ossBucket" json:"ossBucket,omitempty"`
	BillMode             string `protobuf:"bytes,8,opt,name=billMode,proto3" form:"billMode" json:"billMode,omitempty"`
	CycleType            string `protobuf:"bytes,9,opt,name=cycleType,proto3" form:"cycleType" json:"cycleType,omitempty"`
	CycleCnt             int32  `protobuf:"varint,10,opt,name=cycleCnt,proto3" form:"cycleCnt" json:"cycleCnt,omitempty"`
	RepositoryExtraQuota int32  `protobuf:"varint,11,opt,name=repositoryExtraQuota,proto3" form:"repositoryExtraQuota" json:"repositoryExtraQuota,omitempty"`
	NamespaceExtraQuota  int32  `protobuf:"varint,12,opt,name=namespaceExtraQuota,proto3" form:"namespaceExtraQuota" json:"namespaceExtraQuota,omitempty"`
	AutoRenewStatus      bool   `protobuf:"varint,13,opt,name=autoRenewStatus,proto3" form:"autoRenewStatus" json:"autoRenewStatus,omitempty"`
	AutoRenewCycleType   string `protobuf:"bytes,14,opt,name=autoRenewCycleType,proto3" form:"autoRenewCycleType" json:"autoRenewCycleType,omitempty"`
	AutoRenewCycleCount  int32  `protobuf:"varint,15,opt,name=autoRenewCycleCount,proto3" form:"autoRenewCycleCount" json:"autoRenewCycleCount,omitempty"`
	ReqType              string `protobuf:"bytes,16,opt,name=reqType,proto3" form:"reqType" json:"reqType,omitempty"`
	AutoPay              bool   `protobuf:"varint,17,opt,name=autoPay,proto3" form:"autoPay" json:"autoPay,omitempty"`
}

func (x *SubscribeEnterpriseInstanceRequest) Reset() {
	*x = SubscribeEnterpriseInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeEnterpriseInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeEnterpriseInstanceRequest) ProtoMessage() {}

func (x *SubscribeEnterpriseInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeEnterpriseInstanceRequest.ProtoReflect.Descriptor instead.
func (*SubscribeEnterpriseInstanceRequest) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeEnterpriseInstanceRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *SubscribeEnterpriseInstanceRequest) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *SubscribeEnterpriseInstanceRequest) GetInstanceType() string {
	if x != nil {
		return x.InstanceType
	}
	return ""
}

func (x *SubscribeEnterpriseInstanceRequest) GetCrUserName() string {
	if x != nil {
		return x.CrUserName
	}
	return ""
}

func (x *SubscribeEnterpriseInstanceRequest) GetCrUserPassword() string {
	if x != nil {
		return x.CrUserPassword
	}
	return ""
}

func (x *SubscribeEnterpriseInstanceRequest) GetOssBucket() string {
	if x != nil {
		return x.OssBucket
	}
	return ""
}

func (x *SubscribeEnterpriseInstanceRequest) GetBillMode() string {
	if x != nil {
		return x.BillMode
	}
	return ""
}

func (x *SubscribeEnterpriseInstanceRequest) GetCycleType() string {
	if x != nil {
		return x.CycleType
	}
	return ""
}

func (x *SubscribeEnterpriseInstanceRequest) GetCycleCnt() int32 {
	if x != nil {
		return x.CycleCnt
	}
	return 0
}

func (x *SubscribeEnterpriseInstanceRequest) GetRepositoryExtraQuota() int32 {
	if x != nil {
		return x.RepositoryExtraQuota
	}
	return 0
}

func (x *SubscribeEnterpriseInstanceRequest) GetNamespaceExtraQuota() int32 {
	if x != nil {
		return x.NamespaceExtraQuota
	}
	return 0
}

func (x *SubscribeEnterpriseInstanceRequest) GetAutoRenewStatus() bool {
	if x != nil {
		return x.AutoRenewStatus
	}
	return false
}

func (x *SubscribeEnterpriseInstanceRequest) GetAutoRenewCycleType() string {
	if x != nil {
		return x.AutoRenewCycleType
	}
	return ""
}

func (x *SubscribeEnterpriseInstanceRequest) GetAutoRenewCycleCount() int32 {
	if x != nil {
		return x.AutoRenewCycleCount
	}
	return 0
}

func (x *SubscribeEnterpriseInstanceRequest) GetReqType() string {
	if x != nil {
		return x.ReqType
	}
	return ""
}

func (x *SubscribeEnterpriseInstanceRequest) GetAutoPay() bool {
	if x != nil {
		return x.AutoPay
	}
	return false
}

type SubscribeEnterpriseInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" form:"data" json:"data,omitempty" query:"data"`
}

func (x *SubscribeEnterpriseInstanceResponse) Reset() {
	*x = SubscribeEnterpriseInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeEnterpriseInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeEnterpriseInstanceResponse) ProtoMessage() {}

func (x *SubscribeEnterpriseInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeEnterpriseInstanceResponse.ProtoReflect.Descriptor instead.
func (*SubscribeEnterpriseInstanceResponse) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeEnterpriseInstanceResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type ListEnterpriseInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId     string `protobuf:"bytes,1,opt,name=regionId,proto3" form:"regionId" json:"regionId,omitempty" query:"regionId"`
	PageNum      int32  `protobuf:"varint,2,opt,name=pageNum,proto3" json:"pageNum,omitempty" query:"pageNum"`
	PageSize     int32  `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty" query:"pageSize"`
	InstanceName string `protobuf:"bytes,4,opt,name=instanceName,proto3" json:"instanceName,omitempty" query:"instanceName"`
}

func (x *ListEnterpriseInstanceRequest) Reset() {
	*x = ListEnterpriseInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEnterpriseInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnterpriseInstanceRequest) ProtoMessage() {}

func (x *ListEnterpriseInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnterpriseInstanceRequest.ProtoReflect.Descriptor instead.
func (*ListEnterpriseInstanceRequest) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{2}
}

func (x *ListEnterpriseInstanceRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *ListEnterpriseInstanceRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListEnterpriseInstanceRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListEnterpriseInstanceRequest) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

type ListEnterpriseInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total   int32                            `protobuf:"varint,1,opt,name=total,proto3" form:"total" json:"total,omitempty" query:"total"`
	Size    int32                            `protobuf:"varint,2,opt,name=size,proto3" form:"size" json:"size,omitempty" query:"size"`
	Current int32                            `protobuf:"varint,3,opt,name=current,proto3" form:"current" json:"current,omitempty" query:"current"`
	Pages   int32                            `protobuf:"varint,4,opt,name=pages,proto3" form:"pages" json:"pages,omitempty" query:"pages"`
	Records []*GetEnterpriseInstanceResponse `protobuf:"bytes,5,rep,name=records,proto3" form:"records" json:"records,omitempty" query:"records"`
}

func (x *ListEnterpriseInstanceResponse) Reset() {
	*x = ListEnterpriseInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEnterpriseInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnterpriseInstanceResponse) ProtoMessage() {}

func (x *ListEnterpriseInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnterpriseInstanceResponse.ProtoReflect.Descriptor instead.
func (*ListEnterpriseInstanceResponse) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{3}
}

func (x *ListEnterpriseInstanceResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListEnterpriseInstanceResponse) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListEnterpriseInstanceResponse) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListEnterpriseInstanceResponse) GetPages() int32 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *ListEnterpriseInstanceResponse) GetRecords() []*GetEnterpriseInstanceResponse {
	if x != nil {
		return x.Records
	}
	return nil
}

type GetEnterpriseInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId      int64  `protobuf:"varint,1,opt,name=instanceId,proto3" form:"instanceId" json:"instanceId,omitempty" query:"instanceId"`
	InstanceName    string `protobuf:"bytes,2,opt,name=instanceName,proto3" form:"instanceName" json:"instanceName,omitempty" query:"instanceName"`
	InstanceType    string `protobuf:"bytes,3,opt,name=instanceType,proto3" form:"instanceType" json:"instanceType,omitempty" query:"instanceType"`
	UserName        string `protobuf:"bytes,4,opt,name=userName,proto3" form:"userName" json:"userName,omitempty" query:"userName"`
	Region          string `protobuf:"bytes,5,opt,name=region,proto3" form:"region" json:"region,omitempty" query:"region"`
	RegionName      string `protobuf:"bytes,6,opt,name=regionName,proto3" form:"regionName" json:"regionName,omitempty" query:"regionName"`
	PublicAddress   string `protobuf:"bytes,7,opt,name=publicAddress,proto3" form:"publicAddress" json:"publicAddress,omitempty" query:"publicAddress"`
	InternalAddress string `protobuf:"bytes,8,opt,name=internalAddress,proto3" form:"internalAddress" json:"internalAddress,omitempty" query:"internalAddress"`
	State           string `protobuf:"bytes,9,opt,name=state,proto3" form:"state" json:"state,omitempty" query:"state"`
	ExpirationTime  string `protobuf:"bytes,10,opt,name=expirationTime,proto3" form:"expirationTime" json:"expirationTime,omitempty" query:"expirationTime"`
	CreatedTime     string `protobuf:"bytes,11,opt,name=createdTime,proto3" form:"createdTime" json:"createdTime,omitempty" query:"createdTime"`
}

func (x *GetEnterpriseInstanceResponse) Reset() {
	*x = GetEnterpriseInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEnterpriseInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnterpriseInstanceResponse) ProtoMessage() {}

func (x *GetEnterpriseInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnterpriseInstanceResponse.ProtoReflect.Descriptor instead.
func (*GetEnterpriseInstanceResponse) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{4}
}

func (x *GetEnterpriseInstanceResponse) GetInstanceId() int64 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *GetEnterpriseInstanceResponse) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *GetEnterpriseInstanceResponse) GetInstanceType() string {
	if x != nil {
		return x.InstanceType
	}
	return ""
}

func (x *GetEnterpriseInstanceResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetEnterpriseInstanceResponse) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *GetEnterpriseInstanceResponse) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

func (x *GetEnterpriseInstanceResponse) GetPublicAddress() string {
	if x != nil {
		return x.PublicAddress
	}
	return ""
}

func (x *GetEnterpriseInstanceResponse) GetInternalAddress() string {
	if x != nil {
		return x.InternalAddress
	}
	return ""
}

func (x *GetEnterpriseInstanceResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GetEnterpriseInstanceResponse) GetExpirationTime() string {
	if x != nil {
		return x.ExpirationTime
	}
	return ""
}

func (x *GetEnterpriseInstanceResponse) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

type GetEnterpriseInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId   string `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	InstanceId int64  `protobuf:"varint,2,opt,name=instanceId,proto3" json:"instanceId,omitempty" query:"instanceId"`
}

func (x *GetEnterpriseInstanceRequest) Reset() {
	*x = GetEnterpriseInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEnterpriseInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnterpriseInstanceRequest) ProtoMessage() {}

func (x *GetEnterpriseInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnterpriseInstanceRequest.ProtoReflect.Descriptor instead.
func (*GetEnterpriseInstanceRequest) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{5}
}

func (x *GetEnterpriseInstanceRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *GetEnterpriseInstanceRequest) GetInstanceId() int64 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

type GetDelegateUsernameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId string `protobuf:"bytes,1,opt,name=regionId,proto3" form:"regionId" json:"regionId,omitempty" query:"regionId"`
}

func (x *GetDelegateUsernameRequest) Reset() {
	*x = GetDelegateUsernameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDelegateUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegateUsernameRequest) ProtoMessage() {}

func (x *GetDelegateUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDelegateUsernameRequest.ProtoReflect.Descriptor instead.
func (*GetDelegateUsernameRequest) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{6}
}

func (x *GetDelegateUsernameRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

type ResetDelegateUserPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId string `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" form:"password" json:"password,omitempty"`
}

func (x *ResetDelegateUserPasswordRequest) Reset() {
	*x = ResetDelegateUserPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetDelegateUserPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetDelegateUserPasswordRequest) ProtoMessage() {}

func (x *ResetDelegateUserPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetDelegateUserPasswordRequest.ProtoReflect.Descriptor instead.
func (*ResetDelegateUserPasswordRequest) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{7}
}

func (x *ResetDelegateUserPasswordRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *ResetDelegateUserPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type GetDelegateUsernameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" form:"data" json:"data,omitempty" query:"data"`
}

func (x *GetDelegateUsernameResponse) Reset() {
	*x = GetDelegateUsernameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDelegateUsernameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegateUsernameResponse) ProtoMessage() {}

func (x *GetDelegateUsernameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDelegateUsernameResponse.ProtoReflect.Descriptor instead.
func (*GetDelegateUsernameResponse) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{8}
}

func (x *GetDelegateUsernameResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type ResetDelegateUserPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data bool `protobuf:"varint,1,opt,name=data,proto3" form:"data" json:"data,omitempty" query:"data"`
}

func (x *ResetDelegateUserPasswordResponse) Reset() {
	*x = ResetDelegateUserPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetDelegateUserPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetDelegateUserPasswordResponse) ProtoMessage() {}

func (x *ResetDelegateUserPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetDelegateUserPasswordResponse.ProtoReflect.Descriptor instead.
func (*ResetDelegateUserPasswordResponse) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{9}
}

func (x *ResetDelegateUserPasswordResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type GetAuthorizationTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId       string `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	Auth           string `protobuf:"bytes,2,opt,name=auth,proto3" form:"auth" json:"auth,omitempty"`
	InstanceId     int64  `protobuf:"varint,3,opt,name=instanceId,proto3" form:"instanceId" json:"instanceId,omitempty"`
	NamespaceId    int64  `protobuf:"varint,4,opt,name=namespaceId,proto3" form:"namespaceId" json:"namespaceId,omitempty"`
	RepositoryId   int64  `protobuf:"varint,5,opt,name=repositoryId,proto3" form:"repositoryId" json:"repositoryId,omitempty"`
	ExpirationTime string `protobuf:"bytes,6,opt,name=expirationTime,proto3" form:"expirationTime" json:"expirationTime,omitempty"`
}

func (x *GetAuthorizationTokenRequest) Reset() {
	*x = GetAuthorizationTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthorizationTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthorizationTokenRequest) ProtoMessage() {}

func (x *GetAuthorizationTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthorizationTokenRequest.ProtoReflect.Descriptor instead.
func (*GetAuthorizationTokenRequest) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{10}
}

func (x *GetAuthorizationTokenRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *GetAuthorizationTokenRequest) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

func (x *GetAuthorizationTokenRequest) GetInstanceId() int64 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *GetAuthorizationTokenRequest) GetNamespaceId() int64 {
	if x != nil {
		return x.NamespaceId
	}
	return 0
}

func (x *GetAuthorizationTokenRequest) GetRepositoryId() int64 {
	if x != nil {
		return x.RepositoryId
	}
	return 0
}

func (x *GetAuthorizationTokenRequest) GetExpirationTime() string {
	if x != nil {
		return x.ExpirationTime
	}
	return ""
}

type GetAuthorizationTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" form:"username" json:"username,omitempty" query:"username"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" form:"password" json:"password,omitempty" query:"password"`
}

func (x *GetAuthorizationTokenResponse) Reset() {
	*x = GetAuthorizationTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthorizationTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthorizationTokenResponse) ProtoMessage() {}

func (x *GetAuthorizationTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthorizationTokenResponse.ProtoReflect.Descriptor instead.
func (*GetAuthorizationTokenResponse) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{11}
}

func (x *GetAuthorizationTokenResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetAuthorizationTokenResponse) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ValidateInstanceNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId     string `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	InstanceType string `protobuf:"bytes,2,opt,name=instanceType,proto3" form:"instanceType" json:"instanceType,omitempty"`
	InstanceName string `protobuf:"bytes,3,opt,name=instanceName,proto3" form:"instanceName" json:"instanceName,omitempty"`
}

func (x *ValidateInstanceNameRequest) Reset() {
	*x = ValidateInstanceNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateInstanceNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateInstanceNameRequest) ProtoMessage() {}

func (x *ValidateInstanceNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateInstanceNameRequest.ProtoReflect.Descriptor instead.
func (*ValidateInstanceNameRequest) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{12}
}

func (x *ValidateInstanceNameRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *ValidateInstanceNameRequest) GetInstanceType() string {
	if x != nil {
		return x.InstanceType
	}
	return ""
}

func (x *ValidateInstanceNameRequest) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

type ValidateInstanceNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data bool `protobuf:"varint,1,opt,name=data,proto3" form:"data" json:"data,omitempty" query:"data"`
}

func (x *ValidateInstanceNameResponse) Reset() {
	*x = ValidateInstanceNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateInstanceNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateInstanceNameResponse) ProtoMessage() {}

func (x *ValidateInstanceNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateInstanceNameResponse.ProtoReflect.Descriptor instead.
func (*ValidateInstanceNameResponse) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{13}
}

func (x *ValidateInstanceNameResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type ValidateUserNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId string `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	Cl       string `protobuf:"bytes,2,opt,name=cl,proto3" form:"userName" json:"userName,omitempty"`
}

func (x *ValidateUserNameRequest) Reset() {
	*x = ValidateUserNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateUserNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateUserNameRequest) ProtoMessage() {}

func (x *ValidateUserNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateUserNameRequest.ProtoReflect.Descriptor instead.
func (*ValidateUserNameRequest) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{14}
}

func (x *ValidateUserNameRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *ValidateUserNameRequest) GetCl() string {
	if x != nil {
		return x.Cl
	}
	return ""
}

type ValidateUserNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data bool `protobuf:"varint,1,opt,name=data,proto3" form:"data" json:"data,omitempty" query:"data"`
}

func (x *ValidateUserNameResponse) Reset() {
	*x = ValidateUserNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateUserNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateUserNameResponse) ProtoMessage() {}

func (x *ValidateUserNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateUserNameResponse.ProtoReflect.Descriptor instead.
func (*ValidateUserNameResponse) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{15}
}

func (x *ValidateUserNameResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type CreateInstanceEndpointAclPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId     string `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	InstanceId   int64  `protobuf:"varint,2,opt,name=instanceId,proto3" form:"instanceId" json:"instanceId,omitempty"`
	AddressRange string `protobuf:"bytes,3,opt,name=addressRange,proto3" form:"addressRange" json:"addressRange,omitempty"`
	Remark       string `protobuf:"bytes,4,opt,name=remark,proto3" form:"remark" json:"remark,omitempty"`
}

func (x *CreateInstanceEndpointAclPolicyRequest) Reset() {
	*x = CreateInstanceEndpointAclPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInstanceEndpointAclPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInstanceEndpointAclPolicyRequest) ProtoMessage() {}

func (x *CreateInstanceEndpointAclPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInstanceEndpointAclPolicyRequest.ProtoReflect.Descriptor instead.
func (*CreateInstanceEndpointAclPolicyRequest) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{16}
}

func (x *CreateInstanceEndpointAclPolicyRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *CreateInstanceEndpointAclPolicyRequest) GetInstanceId() int64 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *CreateInstanceEndpointAclPolicyRequest) GetAddressRange() string {
	if x != nil {
		return x.AddressRange
	}
	return ""
}

func (x *CreateInstanceEndpointAclPolicyRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type CreateInstanceEndpointAclPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data int64 `protobuf:"varint,1,opt,name=data,proto3" form:"data" json:"data,omitempty" query:"data"`
}

func (x *CreateInstanceEndpointAclPolicyResponse) Reset() {
	*x = CreateInstanceEndpointAclPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInstanceEndpointAclPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInstanceEndpointAclPolicyResponse) ProtoMessage() {}

func (x *CreateInstanceEndpointAclPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInstanceEndpointAclPolicyResponse.ProtoReflect.Descriptor instead.
func (*CreateInstanceEndpointAclPolicyResponse) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{17}
}

func (x *CreateInstanceEndpointAclPolicyResponse) GetData() int64 {
	if x != nil {
		return x.Data
	}
	return 0
}

type ListInstanceEndpointAclPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId   string `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	InstanceId int64  `protobuf:"varint,2,opt,name=instanceId,proto3" json:"instanceId,omitempty" query:"instanceId"`
	PageNum    int64  `protobuf:"varint,3,opt,name=pageNum,proto3" json:"pageNum,omitempty" query:"pageNum"`
	PageSize   int64  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty" query:"pageSize"`
}

func (x *ListInstanceEndpointAclPolicyRequest) Reset() {
	*x = ListInstanceEndpointAclPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInstanceEndpointAclPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstanceEndpointAclPolicyRequest) ProtoMessage() {}

func (x *ListInstanceEndpointAclPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstanceEndpointAclPolicyRequest.ProtoReflect.Descriptor instead.
func (*ListInstanceEndpointAclPolicyRequest) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{18}
}

func (x *ListInstanceEndpointAclPolicyRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *ListInstanceEndpointAclPolicyRequest) GetInstanceId() int64 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *ListInstanceEndpointAclPolicyRequest) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListInstanceEndpointAclPolicyRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListInstanceEndpointAclPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total   int64                                  `protobuf:"varint,1,opt,name=total,proto3" form:"total" json:"total,omitempty" query:"total"`
	Size    int64                                  `protobuf:"varint,2,opt,name=size,proto3" form:"size" json:"size,omitempty" query:"size"`
	Current int64                                  `protobuf:"varint,3,opt,name=current,proto3" form:"current" json:"current,omitempty" query:"current"`
	Pages   int64                                  `protobuf:"varint,4,opt,name=pages,proto3" form:"pages" json:"pages,omitempty" query:"pages"`
	Records []*ListInstanceEndpointAclPolicyRecord `protobuf:"bytes,5,rep,name=records,proto3" form:"records" json:"records,omitempty" query:"records"`
}

func (x *ListInstanceEndpointAclPolicyResponse) Reset() {
	*x = ListInstanceEndpointAclPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInstanceEndpointAclPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstanceEndpointAclPolicyResponse) ProtoMessage() {}

func (x *ListInstanceEndpointAclPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstanceEndpointAclPolicyResponse.ProtoReflect.Descriptor instead.
func (*ListInstanceEndpointAclPolicyResponse) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{19}
}

func (x *ListInstanceEndpointAclPolicyResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListInstanceEndpointAclPolicyResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListInstanceEndpointAclPolicyResponse) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListInstanceEndpointAclPolicyResponse) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *ListInstanceEndpointAclPolicyResponse) GetRecords() []*ListInstanceEndpointAclPolicyRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

type ListInstanceEndpointAclPolicyRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`
	InstanceId   int64  `protobuf:"varint,2,opt,name=instanceId,proto3" form:"instanceId" json:"instanceId,omitempty" query:"instanceId"`
	AddressRange string `protobuf:"bytes,3,opt,name=addressRange,proto3" form:"addressRange" json:"addressRange,omitempty" query:"addressRange"`
	Remark       string `protobuf:"bytes,4,opt,name=remark,proto3" form:"remark" json:"remark,omitempty" query:"remark"`
}

func (x *ListInstanceEndpointAclPolicyRecord) Reset() {
	*x = ListInstanceEndpointAclPolicyRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInstanceEndpointAclPolicyRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstanceEndpointAclPolicyRecord) ProtoMessage() {}

func (x *ListInstanceEndpointAclPolicyRecord) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstanceEndpointAclPolicyRecord.ProtoReflect.Descriptor instead.
func (*ListInstanceEndpointAclPolicyRecord) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{20}
}

func (x *ListInstanceEndpointAclPolicyRecord) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListInstanceEndpointAclPolicyRecord) GetInstanceId() int64 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *ListInstanceEndpointAclPolicyRecord) GetAddressRange() string {
	if x != nil {
		return x.AddressRange
	}
	return ""
}

func (x *ListInstanceEndpointAclPolicyRecord) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type DeleteInstanceEndpointAclPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId   string `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	InstanceId int64  `protobuf:"varint,2,opt,name=instanceId,proto3" form:"instanceId" json:"instanceId,omitempty"`
	Id         string `protobuf:"bytes,3,opt,name=id,proto3" form:"id" json:"id,omitempty"`
	Entity     string `protobuf:"bytes,4,opt,name=entity,proto3" form:"entity" json:"entity,omitempty"`
}

func (x *DeleteInstanceEndpointAclPolicyRequest) Reset() {
	*x = DeleteInstanceEndpointAclPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInstanceEndpointAclPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstanceEndpointAclPolicyRequest) ProtoMessage() {}

func (x *DeleteInstanceEndpointAclPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInstanceEndpointAclPolicyRequest.ProtoReflect.Descriptor instead.
func (*DeleteInstanceEndpointAclPolicyRequest) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteInstanceEndpointAclPolicyRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *DeleteInstanceEndpointAclPolicyRequest) GetInstanceId() int64 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *DeleteInstanceEndpointAclPolicyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteInstanceEndpointAclPolicyRequest) GetEntity() string {
	if x != nil {
		return x.Entity
	}
	return ""
}

type DeleteInstanceEndpointAclPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data bool `protobuf:"varint,1,opt,name=data,proto3" form:"data" json:"data,omitempty" query:"data"`
}

func (x *DeleteInstanceEndpointAclPolicyResponse) Reset() {
	*x = DeleteInstanceEndpointAclPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInstanceEndpointAclPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstanceEndpointAclPolicyResponse) ProtoMessage() {}

func (x *DeleteInstanceEndpointAclPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInstanceEndpointAclPolicyResponse.ProtoReflect.Descriptor instead.
func (*DeleteInstanceEndpointAclPolicyResponse) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteInstanceEndpointAclPolicyResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type CreateInstanceVpceLinkedVpcsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId string                               `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	VpcList  []*CreateInstanceVpceLinkedVpcRecord `protobuf:"bytes,2,rep,name=vpcList,proto3" form:"vpcList" json:"vpcList,omitempty"`
}

func (x *CreateInstanceVpceLinkedVpcsRequest) Reset() {
	*x = CreateInstanceVpceLinkedVpcsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInstanceVpceLinkedVpcsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInstanceVpceLinkedVpcsRequest) ProtoMessage() {}

func (x *CreateInstanceVpceLinkedVpcsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInstanceVpceLinkedVpcsRequest.ProtoReflect.Descriptor instead.
func (*CreateInstanceVpceLinkedVpcsRequest) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{23}
}

func (x *CreateInstanceVpceLinkedVpcsRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *CreateInstanceVpceLinkedVpcsRequest) GetVpcList() []*CreateInstanceVpceLinkedVpcRecord {
	if x != nil {
		return x.VpcList
	}
	return nil
}

type CreateInstanceVpceLinkedVpcRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VpcId    string `protobuf:"bytes,1,opt,name=vpcId,proto3" form:"vpcId" json:"vpcId,omitempty" query:"vpcId"`
	SubnetId string `protobuf:"bytes,2,opt,name=subnetId,proto3" form:"subnetId" json:"subnetId,omitempty" query:"subnetId"`
}

func (x *CreateInstanceVpceLinkedVpcRecord) Reset() {
	*x = CreateInstanceVpceLinkedVpcRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInstanceVpceLinkedVpcRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInstanceVpceLinkedVpcRecord) ProtoMessage() {}

func (x *CreateInstanceVpceLinkedVpcRecord) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInstanceVpceLinkedVpcRecord.ProtoReflect.Descriptor instead.
func (*CreateInstanceVpceLinkedVpcRecord) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{24}
}

func (x *CreateInstanceVpceLinkedVpcRecord) GetVpcId() string {
	if x != nil {
		return x.VpcId
	}
	return ""
}

func (x *CreateInstanceVpceLinkedVpcRecord) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

type CreateInstanceVpceLinkedVpcsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VpcLinkResult []*VpcLinkResult `protobuf:"bytes,1,rep,name=vpcLinkResult,proto3" form:"vpcLinkResult" json:"vpcLinkResult,omitempty" query:"vpcLinkResult"`
}

func (x *CreateInstanceVpceLinkedVpcsResponse) Reset() {
	*x = CreateInstanceVpceLinkedVpcsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInstanceVpceLinkedVpcsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInstanceVpceLinkedVpcsResponse) ProtoMessage() {}

func (x *CreateInstanceVpceLinkedVpcsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInstanceVpceLinkedVpcsResponse.ProtoReflect.Descriptor instead.
func (*CreateInstanceVpceLinkedVpcsResponse) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{25}
}

func (x *CreateInstanceVpceLinkedVpcsResponse) GetVpcLinkResult() []*VpcLinkResult {
	if x != nil {
		return x.VpcLinkResult
	}
	return nil
}

type VpcLinkResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vpc       string `protobuf:"bytes,1,opt,name=vpc,proto3" form:"vpc" json:"vpc,omitempty" query:"vpc"`
	State     string `protobuf:"bytes,2,opt,name=state,proto3" form:"state" json:"state,omitempty" query:"state"`
	VpceState string `protobuf:"bytes,3,opt,name=vpceState,proto3" form:"vpceState" json:"vpceState,omitempty" query:"vpceState"`
	DnsState  string `protobuf:"bytes,4,opt,name=dnsState,proto3" form:"dnsState" json:"dnsState,omitempty" query:"dnsState"`
	Msg       string `protobuf:"bytes,5,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
}

func (x *VpcLinkResult) Reset() {
	*x = VpcLinkResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VpcLinkResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VpcLinkResult) ProtoMessage() {}

func (x *VpcLinkResult) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VpcLinkResult.ProtoReflect.Descriptor instead.
func (*VpcLinkResult) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{26}
}

func (x *VpcLinkResult) GetVpc() string {
	if x != nil {
		return x.Vpc
	}
	return ""
}

func (x *VpcLinkResult) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *VpcLinkResult) GetVpceState() string {
	if x != nil {
		return x.VpceState
	}
	return ""
}

func (x *VpcLinkResult) GetDnsState() string {
	if x != nil {
		return x.DnsState
	}
	return ""
}

func (x *VpcLinkResult) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetInstanceVpceLinkedVpcsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId  string `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	VpcIdList string `protobuf:"bytes,2,opt,name=vpcIdList,proto3" json:"vpcIdList,omitempty" query:"vpcIdList"`
}

func (x *GetInstanceVpceLinkedVpcsRequest) Reset() {
	*x = GetInstanceVpceLinkedVpcsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstanceVpceLinkedVpcsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceVpceLinkedVpcsRequest) ProtoMessage() {}

func (x *GetInstanceVpceLinkedVpcsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstanceVpceLinkedVpcsRequest.ProtoReflect.Descriptor instead.
func (*GetInstanceVpceLinkedVpcsRequest) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{27}
}

func (x *GetInstanceVpceLinkedVpcsRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *GetInstanceVpceLinkedVpcsRequest) GetVpcIdList() string {
	if x != nil {
		return x.VpcIdList
	}
	return ""
}

type GetInstanceVpceLinkedVpcsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VpcLinkResult []*VpcLinkResult `protobuf:"bytes,1,rep,name=vpcLinkResult,proto3" form:"vpcLinkResult" json:"vpcLinkResult,omitempty" query:"vpcLinkResult"`
}

func (x *GetInstanceVpceLinkedVpcsResponse) Reset() {
	*x = GetInstanceVpceLinkedVpcsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstanceVpceLinkedVpcsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceVpceLinkedVpcsResponse) ProtoMessage() {}

func (x *GetInstanceVpceLinkedVpcsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instance_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstanceVpceLinkedVpcsResponse.ProtoReflect.Descriptor instead.
func (*GetInstanceVpceLinkedVpcsResponse) Descriptor() ([]byte, []int) {
	return file_instance_proto_rawDescGZIP(), []int{28}
}

func (x *GetInstanceVpceLinkedVpcsResponse) GetVpcLinkResult() []*VpcLinkResult {
	if x != nil {
		return x.VpcLinkResult
	}
	return nil
}

var File_instance_proto protoreflect.FileDescriptor

var file_instance_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69,
	0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x8d, 0x07, 0x0a, 0x22, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb, 0x18,
	0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xca, 0xbb, 0x18, 0x0c, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x0c, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x10, 0xca, 0xbb, 0x18, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2e, 0x0a, 0x0a, 0x63, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0e, 0xca, 0xbb, 0x18, 0x0a, 0x63, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x0a, 0x63, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x3a, 0x0a, 0x0e, 0x63, 0x72, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xca, 0xbb, 0x18, 0x0e, 0x63, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x0e, 0x63, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x6f,
	0x73, 0x73, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d,
	0xca, 0xbb, 0x18, 0x09, 0x6f, 0x73, 0x73, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x09, 0x6f,
	0x73, 0x73, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x62, 0x69, 0x6c, 0x6c,
	0x4d, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08,
	0x62, 0x69, 0x6c, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x62, 0x69, 0x6c, 0x6c, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x28, 0x0a, 0x08, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x43, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x43, 0x6e, 0x74, 0x52,
	0x08, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x43, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x14, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x78, 0x74, 0x72, 0x61, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x42, 0x18, 0xca, 0xbb, 0x18, 0x14, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x78, 0x74, 0x72, 0x61, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x52, 0x14, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x13, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x17, 0xca, 0xbb, 0x18, 0x13, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x13, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x12, 0x3d, 0x0a, 0x0f, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x42, 0x13, 0xca, 0xbb, 0x18,
	0x0f, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x0f, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x46, 0x0a, 0x12, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x43, 0x79,
	0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xca,
	0xbb, 0x18, 0x12, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x43, 0x79, 0x63, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x12, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77,
	0x43, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x49, 0x0a, 0x13, 0x61, 0x75, 0x74,
	0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x42, 0x17, 0xca, 0xbb, 0x18, 0x13, 0x61, 0x75, 0x74, 0x6f,
	0x52, 0x65, 0x6e, 0x65, 0x77, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x13, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x72, 0x65, 0x71, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x07, 0x72, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x61,
	0x75, 0x74, 0x6f, 0x50, 0x61, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x42, 0x0b, 0xca, 0xbb,
	0x18, 0x07, 0x61, 0x75, 0x74, 0x6f, 0x50, 0x61, 0x79, 0x52, 0x07, 0x61, 0x75, 0x74, 0x6f, 0x50,
	0x61, 0x79, 0x22, 0x39, 0x0a, 0x23, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd0, 0x01,
	0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x28, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0c, 0xba, 0xbd, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52,
	0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xb2, 0xbb, 0x18, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x12, 0x28, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x0c, 0xb2, 0xbb, 0x18, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x34, 0x0a, 0x0c, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x10, 0xb2, 0xbb, 0x18, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0xba, 0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x3e, 0x0a,
	0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x8b, 0x03,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x78, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba,
	0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0e, 0xb2, 0xbb, 0x18, 0x0a, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xbd, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x76, 0x0a,
	0x20, 0x52, 0x65, 0x73, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca,
	0xbb, 0x18, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x31, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x37, 0x0a, 0x21, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xbb, 0x02, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0e,
	0xca, 0xbb, 0x18, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x0b, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a,
	0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x10, 0xca, 0xbb, 0x18, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xca, 0xbb, 0x18,
	0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x57, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x1b, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb, 0x18, 0x08,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x34, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xca, 0xbb, 0x18, 0x0c, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10,
	0xca, 0xbb, 0x18, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x32,
	0x0a, 0x1c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x61, 0x0a, 0x17, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0c, 0xba, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x02, 0x63, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x02, 0x63, 0x6c, 0x22, 0x2e, 0x0a, 0x18, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdc, 0x01, 0x0a, 0x26, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x41, 0x63, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0e,
	0xca, 0xbb, 0x18, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0c, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x10, 0xca, 0xbb, 0x18, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x22, 0x3d, 0x0a, 0x27, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63,
	0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xd1, 0x01, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63, 0x6c, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c,
	0xba, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0e, 0xb2, 0xbb, 0x18, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0b, 0xb2, 0xbb, 0x18, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x28, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x0c, 0xb2, 0xbb, 0x18, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x25, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x41, 0x63, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x07, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63, 0x6c, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x22, 0x91, 0x01, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63, 0x6c, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xbe, 0x01, 0x0a, 0x26, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x41, 0x63, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0e,
	0xca, 0xbb, 0x18, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xca, 0xbb, 0x18, 0x02, 0x69, 0x64, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x22, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x3d, 0x0a, 0x27, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x41, 0x63, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa0, 0x01, 0x0a, 0x23, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x56, 0x70, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x65, 0x64, 0x56, 0x70, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0c, 0xba, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x07, 0x76, 0x70, 0x63, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x56,
	0x70, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x56, 0x70, 0x63, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x76, 0x70, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x07, 0x76, 0x70, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x55, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x56, 0x70, 0x63, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x65, 0x64, 0x56, 0x70, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x70, 0x63, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x70,
	0x63, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x22,
	0x62, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x56, 0x70, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x56, 0x70, 0x63, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x76, 0x70, 0x63, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x70, 0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x76, 0x70, 0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x0d, 0x56, 0x70, 0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x70, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x76, 0x70, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x76, 0x70, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x76, 0x70, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x6e, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x6e, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x79, 0x0a, 0x20, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x56, 0x70, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x65, 0x64, 0x56, 0x70, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0c, 0xba, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x76, 0x70, 0x63, 0x49, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xb2, 0xbb, 0x18, 0x09,
	0x76, 0x70, 0x63, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x76, 0x70, 0x63, 0x49, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x5f, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x56, 0x70, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x56, 0x70, 0x63,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x76, 0x70, 0x63,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x70, 0x63, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x76, 0x70, 0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xf9, 0x0e, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x99, 0x01, 0x0a, 0x1b, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74, 0x65, 0x72,
	0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x23, 0xd2, 0xc1, 0x18, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x7b, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0xca, 0xc1,
	0x18, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x77, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0xca, 0xc1, 0x18, 0x0f, 0x2f, 0x76, 0x31, 0x2f,
	0x67, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x7a, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0xca, 0xc1, 0x18, 0x18, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0xd2, 0xc1, 0x18, 0x1a, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x81, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0xd2,
	0xc1, 0x18, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x7d, 0x0a, 0x14,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0xd2,
	0xc1, 0x18, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x6d, 0x0a, 0x10, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x18, 0xd2, 0xc1, 0x18, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0xa9, 0x01, 0x0a, 0x1f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x2d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63, 0x6c,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63, 0x6c, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0xd2,
	0xc1, 0x18, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63, 0x6c,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0xa1, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41,
	0x63, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x41, 0x63, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x25, 0xca, 0xc1, 0x18, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x41, 0x63, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0xa9, 0x01, 0x0a, 0x1f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x2d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63, 0x6c,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63, 0x6c, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0xd2,
	0xc1, 0x18, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63, 0x6c,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x9d, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x56, 0x70, 0x63, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x65, 0x64, 0x56, 0x70, 0x63, 0x73, 0x12, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x56, 0x70,
	0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x56, 0x70, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x56, 0x70, 0x63, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x65, 0x64, 0x56, 0x70, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x24, 0xd2, 0xc1, 0x18, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x56, 0x70, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x65, 0x64, 0x56, 0x70, 0x63, 0x73, 0x12, 0x91, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x56, 0x70, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64,
	0x56, 0x70, 0x63, 0x73, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x56, 0x70, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x65, 0x64, 0x56, 0x70, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x56, 0x70, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x56, 0x70, 0x63, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0xca, 0xc1, 0x18, 0x1d, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x56, 0x70, 0x63, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x56, 0x70, 0x63, 0x73, 0x1a, 0x25, 0x92, 0xce, 0x18, 0x21,
	0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x63, 0x72, 0x73, 0x2d, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x2e, 0x63, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x74, 0x79, 0x75, 0x6e, 0x2e, 0x63,
	0x6e, 0x42, 0x49, 0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x74, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x74, 0x65,
	0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67,
	0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x63, 0x72, 0x73, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_instance_proto_rawDescOnce sync.Once
	file_instance_proto_rawDescData = file_instance_proto_rawDesc
)

func file_instance_proto_rawDescGZIP() []byte {
	file_instance_proto_rawDescOnce.Do(func() {
		file_instance_proto_rawDescData = protoimpl.X.CompressGZIP(file_instance_proto_rawDescData)
	})
	return file_instance_proto_rawDescData
}

var file_instance_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_instance_proto_goTypes = []interface{}{
	(*SubscribeEnterpriseInstanceRequest)(nil),      // 0: proto.SubscribeEnterpriseInstanceRequest
	(*SubscribeEnterpriseInstanceResponse)(nil),     // 1: proto.SubscribeEnterpriseInstanceResponse
	(*ListEnterpriseInstanceRequest)(nil),           // 2: proto.ListEnterpriseInstanceRequest
	(*ListEnterpriseInstanceResponse)(nil),          // 3: proto.ListEnterpriseInstanceResponse
	(*GetEnterpriseInstanceResponse)(nil),           // 4: proto.GetEnterpriseInstanceResponse
	(*GetEnterpriseInstanceRequest)(nil),            // 5: proto.GetEnterpriseInstanceRequest
	(*GetDelegateUsernameRequest)(nil),              // 6: proto.GetDelegateUsernameRequest
	(*ResetDelegateUserPasswordRequest)(nil),        // 7: proto.ResetDelegateUserPasswordRequest
	(*GetDelegateUsernameResponse)(nil),             // 8: proto.GetDelegateUsernameResponse
	(*ResetDelegateUserPasswordResponse)(nil),       // 9: proto.ResetDelegateUserPasswordResponse
	(*GetAuthorizationTokenRequest)(nil),            // 10: proto.GetAuthorizationTokenRequest
	(*GetAuthorizationTokenResponse)(nil),           // 11: proto.GetAuthorizationTokenResponse
	(*ValidateInstanceNameRequest)(nil),             // 12: proto.ValidateInstanceNameRequest
	(*ValidateInstanceNameResponse)(nil),            // 13: proto.ValidateInstanceNameResponse
	(*ValidateUserNameRequest)(nil),                 // 14: proto.ValidateUserNameRequest
	(*ValidateUserNameResponse)(nil),                // 15: proto.ValidateUserNameResponse
	(*CreateInstanceEndpointAclPolicyRequest)(nil),  // 16: proto.CreateInstanceEndpointAclPolicyRequest
	(*CreateInstanceEndpointAclPolicyResponse)(nil), // 17: proto.CreateInstanceEndpointAclPolicyResponse
	(*ListInstanceEndpointAclPolicyRequest)(nil),    // 18: proto.ListInstanceEndpointAclPolicyRequest
	(*ListInstanceEndpointAclPolicyResponse)(nil),   // 19: proto.ListInstanceEndpointAclPolicyResponse
	(*ListInstanceEndpointAclPolicyRecord)(nil),     // 20: proto.ListInstanceEndpointAclPolicyRecord
	(*DeleteInstanceEndpointAclPolicyRequest)(nil),  // 21: proto.DeleteInstanceEndpointAclPolicyRequest
	(*DeleteInstanceEndpointAclPolicyResponse)(nil), // 22: proto.DeleteInstanceEndpointAclPolicyResponse
	(*CreateInstanceVpceLinkedVpcsRequest)(nil),     // 23: proto.CreateInstanceVpceLinkedVpcsRequest
	(*CreateInstanceVpceLinkedVpcRecord)(nil),       // 24: proto.CreateInstanceVpceLinkedVpcRecord
	(*CreateInstanceVpceLinkedVpcsResponse)(nil),    // 25: proto.CreateInstanceVpceLinkedVpcsResponse
	(*VpcLinkResult)(nil),                           // 26: proto.VpcLinkResult
	(*GetInstanceVpceLinkedVpcsRequest)(nil),        // 27: proto.GetInstanceVpceLinkedVpcsRequest
	(*GetInstanceVpceLinkedVpcsResponse)(nil),       // 28: proto.GetInstanceVpceLinkedVpcsResponse
}
var file_instance_proto_depIdxs = []int32{
	4,  // 0: proto.ListEnterpriseInstanceResponse.records:type_name -> proto.GetEnterpriseInstanceResponse
	20, // 1: proto.ListInstanceEndpointAclPolicyResponse.records:type_name -> proto.ListInstanceEndpointAclPolicyRecord
	24, // 2: proto.CreateInstanceVpceLinkedVpcsRequest.vpcList:type_name -> proto.CreateInstanceVpceLinkedVpcRecord
	26, // 3: proto.CreateInstanceVpceLinkedVpcsResponse.vpcLinkResult:type_name -> proto.VpcLinkResult
	26, // 4: proto.GetInstanceVpceLinkedVpcsResponse.vpcLinkResult:type_name -> proto.VpcLinkResult
	0,  // 5: proto.InstanceService.SubscribeEnterpriseInstance:input_type -> proto.SubscribeEnterpriseInstanceRequest
	2,  // 6: proto.InstanceService.ListEnterpriseInstance:input_type -> proto.ListEnterpriseInstanceRequest
	5,  // 7: proto.InstanceService.GetEnterpriseInstance:input_type -> proto.GetEnterpriseInstanceRequest
	6,  // 8: proto.InstanceService.GetDelegateUsername:input_type -> proto.GetDelegateUsernameRequest
	7,  // 9: proto.InstanceService.ResetDelegateUserPassword:input_type -> proto.ResetDelegateUserPasswordRequest
	10, // 10: proto.InstanceService.GetAuthorizationToken:input_type -> proto.GetAuthorizationTokenRequest
	12, // 11: proto.InstanceService.ValidateInstanceName:input_type -> proto.ValidateInstanceNameRequest
	14, // 12: proto.InstanceService.ValidateUserName:input_type -> proto.ValidateUserNameRequest
	16, // 13: proto.InstanceService.CreateInstanceEndpointAclPolicy:input_type -> proto.CreateInstanceEndpointAclPolicyRequest
	18, // 14: proto.InstanceService.ListInstanceEndpointAclPolicy:input_type -> proto.ListInstanceEndpointAclPolicyRequest
	21, // 15: proto.InstanceService.DeleteInstanceEndpointAclPolicy:input_type -> proto.DeleteInstanceEndpointAclPolicyRequest
	23, // 16: proto.InstanceService.CreateInstanceVpceLinkedVpcs:input_type -> proto.CreateInstanceVpceLinkedVpcsRequest
	27, // 17: proto.InstanceService.GetInstanceVpceLinkedVpcs:input_type -> proto.GetInstanceVpceLinkedVpcsRequest
	1,  // 18: proto.InstanceService.SubscribeEnterpriseInstance:output_type -> proto.SubscribeEnterpriseInstanceResponse
	3,  // 19: proto.InstanceService.ListEnterpriseInstance:output_type -> proto.ListEnterpriseInstanceResponse
	4,  // 20: proto.InstanceService.GetEnterpriseInstance:output_type -> proto.GetEnterpriseInstanceResponse
	8,  // 21: proto.InstanceService.GetDelegateUsername:output_type -> proto.GetDelegateUsernameResponse
	9,  // 22: proto.InstanceService.ResetDelegateUserPassword:output_type -> proto.ResetDelegateUserPasswordResponse
	11, // 23: proto.InstanceService.GetAuthorizationToken:output_type -> proto.GetAuthorizationTokenResponse
	13, // 24: proto.InstanceService.ValidateInstanceName:output_type -> proto.ValidateInstanceNameResponse
	15, // 25: proto.InstanceService.ValidateUserName:output_type -> proto.ValidateUserNameResponse
	17, // 26: proto.InstanceService.CreateInstanceEndpointAclPolicy:output_type -> proto.CreateInstanceEndpointAclPolicyResponse
	19, // 27: proto.InstanceService.ListInstanceEndpointAclPolicy:output_type -> proto.ListInstanceEndpointAclPolicyResponse
	22, // 28: proto.InstanceService.DeleteInstanceEndpointAclPolicy:output_type -> proto.DeleteInstanceEndpointAclPolicyResponse
	25, // 29: proto.InstanceService.CreateInstanceVpceLinkedVpcs:output_type -> proto.CreateInstanceVpceLinkedVpcsResponse
	28, // 30: proto.InstanceService.GetInstanceVpceLinkedVpcs:output_type -> proto.GetInstanceVpceLinkedVpcsResponse
	18, // [18:31] is the sub-list for method output_type
	5,  // [5:18] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_instance_proto_init() }
func file_instance_proto_init() {
	if File_instance_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_instance_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeEnterpriseInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeEnterpriseInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEnterpriseInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEnterpriseInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEnterpriseInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEnterpriseInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDelegateUsernameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetDelegateUserPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDelegateUsernameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetDelegateUserPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthorizationTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthorizationTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateInstanceNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateInstanceNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateUserNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateUserNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInstanceEndpointAclPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInstanceEndpointAclPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInstanceEndpointAclPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInstanceEndpointAclPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInstanceEndpointAclPolicyRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInstanceEndpointAclPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInstanceEndpointAclPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInstanceVpceLinkedVpcsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInstanceVpceLinkedVpcRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInstanceVpceLinkedVpcsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VpcLinkResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstanceVpceLinkedVpcsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstanceVpceLinkedVpcsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_instance_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_instance_proto_goTypes,
		DependencyIndexes: file_instance_proto_depIdxs,
		MessageInfos:      file_instance_proto_msgTypes,
	}.Build()
	File_instance_proto = out.File
	file_instance_proto_rawDesc = nil
	file_instance_proto_goTypes = nil
	file_instance_proto_depIdxs = nil
}
