// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v4.25.1
// source: repositorysync.proto

package repositorysync

import (
	_ "github.com/telecom-cloud/client-go/pkg/openapi/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateRepositorySyncTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId        string `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	SrcInstanceId   string `protobuf:"bytes,2,opt,name=srcInstanceId,proto3" form:"srcInstanceId" json:"srcInstanceId,omitempty"`
	SrcNamespaceId  string `protobuf:"bytes,3,opt,name=srcNamespaceId,proto3" form:"srcNamespaceId" json:"srcNamespaceId,omitempty"`
	SrcRepositoryId string `protobuf:"bytes,4,opt,name=srcRepositoryId,proto3" form:"srcRepositoryId" json:"srcRepositoryId,omitempty"`
	SrcTag          string `protobuf:"bytes,5,opt,name=srcTag,proto3" form:"srcTag" json:"srcTag,omitempty"`
	DstInstanceId   string `protobuf:"bytes,6,opt,name=dstInstanceId,proto3" form:"dstInstanceId" json:"dstInstanceId,omitempty"`
	DstNamespaceId  string `protobuf:"bytes,7,opt,name=dstNamespaceId,proto3" form:"dstNamespaceId" json:"dstNamespaceId,omitempty"`
	IsOverride      bool   `protobuf:"varint,8,opt,name=isOverride,proto3" form:"isOverride" json:"isOverride,omitempty"`
}

func (x *CreateRepositorySyncTaskRequest) Reset() {
	*x = CreateRepositorySyncTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repositorysync_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRepositorySyncTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRepositorySyncTaskRequest) ProtoMessage() {}

func (x *CreateRepositorySyncTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repositorysync_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRepositorySyncTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateRepositorySyncTaskRequest) Descriptor() ([]byte, []int) {
	return file_repositorysync_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRepositorySyncTaskRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *CreateRepositorySyncTaskRequest) GetSrcInstanceId() string {
	if x != nil {
		return x.SrcInstanceId
	}
	return ""
}

func (x *CreateRepositorySyncTaskRequest) GetSrcNamespaceId() string {
	if x != nil {
		return x.SrcNamespaceId
	}
	return ""
}

func (x *CreateRepositorySyncTaskRequest) GetSrcRepositoryId() string {
	if x != nil {
		return x.SrcRepositoryId
	}
	return ""
}

func (x *CreateRepositorySyncTaskRequest) GetSrcTag() string {
	if x != nil {
		return x.SrcTag
	}
	return ""
}

func (x *CreateRepositorySyncTaskRequest) GetDstInstanceId() string {
	if x != nil {
		return x.DstInstanceId
	}
	return ""
}

func (x *CreateRepositorySyncTaskRequest) GetDstNamespaceId() string {
	if x != nil {
		return x.DstNamespaceId
	}
	return ""
}

func (x *CreateRepositorySyncTaskRequest) GetIsOverride() bool {
	if x != nil {
		return x.IsOverride
	}
	return false
}

type CreateRepositorySyncTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data int64 `protobuf:"varint,1,opt,name=data,proto3" form:"data" json:"data,omitempty" query:"data"`
}

func (x *CreateRepositorySyncTaskResponse) Reset() {
	*x = CreateRepositorySyncTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repositorysync_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRepositorySyncTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRepositorySyncTaskResponse) ProtoMessage() {}

func (x *CreateRepositorySyncTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repositorysync_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRepositorySyncTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateRepositorySyncTaskResponse) Descriptor() ([]byte, []int) {
	return file_repositorysync_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRepositorySyncTaskResponse) GetData() int64 {
	if x != nil {
		return x.Data
	}
	return 0
}

type GetRepositorySyncTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId string `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	TaskId   string `protobuf:"bytes,2,opt,name=taskId,proto3" json:"taskId,omitempty" query:"taskId"`
}

func (x *GetRepositorySyncTaskRequest) Reset() {
	*x = GetRepositorySyncTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repositorysync_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRepositorySyncTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepositorySyncTaskRequest) ProtoMessage() {}

func (x *GetRepositorySyncTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repositorysync_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepositorySyncTaskRequest.ProtoReflect.Descriptor instead.
func (*GetRepositorySyncTaskRequest) Descriptor() ([]byte, []int) {
	return file_repositorysync_proto_rawDescGZIP(), []int{2}
}

func (x *GetRepositorySyncTaskRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *GetRepositorySyncTaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type GetRepositorySyncTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReposyncTaskId int64  `protobuf:"varint,1,opt,name=reposyncTaskId,proto3" form:"reposyncTaskId" json:"reposyncTaskId,omitempty" query:"reposyncTaskId"`
	RelRuleId      int64  `protobuf:"varint,2,opt,name=relRuleId,proto3" form:"relRuleId" json:"relRuleId,omitempty" query:"relRuleId"`
	SrcInstanceId  string `protobuf:"bytes,3,opt,name=srcInstanceId,proto3" form:"srcInstanceId" json:"srcInstanceId,omitempty" query:"srcInstanceId"`
	SrcInstance    string `protobuf:"bytes,4,opt,name=srcInstance,proto3" form:"srcInstance" json:"srcInstance,omitempty" query:"srcInstance"`
	SrcNamespace   string `protobuf:"bytes,5,opt,name=srcNamespace,proto3" form:"srcNamespace" json:"srcNamespace,omitempty" query:"srcNamespace"`
	DstInstance    string `protobuf:"bytes,6,opt,name=dstInstance,proto3" form:"dstInstance" json:"dstInstance,omitempty" query:"dstInstance"`
	DstNamespace   string `protobuf:"bytes,7,opt,name=dstNamespace,proto3" form:"dstNamespace" json:"dstNamespace,omitempty" query:"dstNamespace"`
	CreatedBy      int32  `protobuf:"varint,8,opt,name=createdBy,proto3" form:"createdBy" json:"createdBy,omitempty" query:"createdBy"`
	State          string `protobuf:"bytes,9,opt,name=state,proto3" form:"state" json:"state,omitempty" query:"state"`
	SyncCount      int32  `protobuf:"varint,10,opt,name=syncCount,proto3" form:"syncCount" json:"syncCount,omitempty" query:"syncCount"`
	StartTime      string `protobuf:"bytes,11,opt,name=startTime,proto3" form:"startTime" json:"startTime,omitempty" query:"startTime"`
	EndTime        string `protobuf:"bytes,12,opt,name=endTime,proto3" form:"endTime" json:"endTime,omitempty" query:"endTime"`
}

func (x *GetRepositorySyncTaskResponse) Reset() {
	*x = GetRepositorySyncTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repositorysync_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRepositorySyncTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepositorySyncTaskResponse) ProtoMessage() {}

func (x *GetRepositorySyncTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repositorysync_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepositorySyncTaskResponse.ProtoReflect.Descriptor instead.
func (*GetRepositorySyncTaskResponse) Descriptor() ([]byte, []int) {
	return file_repositorysync_proto_rawDescGZIP(), []int{3}
}

func (x *GetRepositorySyncTaskResponse) GetReposyncTaskId() int64 {
	if x != nil {
		return x.ReposyncTaskId
	}
	return 0
}

func (x *GetRepositorySyncTaskResponse) GetRelRuleId() int64 {
	if x != nil {
		return x.RelRuleId
	}
	return 0
}

func (x *GetRepositorySyncTaskResponse) GetSrcInstanceId() string {
	if x != nil {
		return x.SrcInstanceId
	}
	return ""
}

func (x *GetRepositorySyncTaskResponse) GetSrcInstance() string {
	if x != nil {
		return x.SrcInstance
	}
	return ""
}

func (x *GetRepositorySyncTaskResponse) GetSrcNamespace() string {
	if x != nil {
		return x.SrcNamespace
	}
	return ""
}

func (x *GetRepositorySyncTaskResponse) GetDstInstance() string {
	if x != nil {
		return x.DstInstance
	}
	return ""
}

func (x *GetRepositorySyncTaskResponse) GetDstNamespace() string {
	if x != nil {
		return x.DstNamespace
	}
	return ""
}

func (x *GetRepositorySyncTaskResponse) GetCreatedBy() int32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *GetRepositorySyncTaskResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GetRepositorySyncTaskResponse) GetSyncCount() int32 {
	if x != nil {
		return x.SyncCount
	}
	return 0
}

func (x *GetRepositorySyncTaskResponse) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetRepositorySyncTaskResponse) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

var File_repositorysync_proto protoreflect.FileDescriptor

var file_repositorysync_proto_rawDesc = []byte{
	0x0a, 0x14, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x73, 0x79, 0x6e, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc8, 0x03, 0x0a, 0x1f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x79, 0x6e,
	0x63, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c,
	0xba, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0d, 0x73, 0x72, 0x63, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xca,
	0xbb, 0x18, 0x0d, 0x73, 0x72, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x52, 0x0d, 0x73, 0x72, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x3a, 0x0a, 0x0e, 0x73, 0x72, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xca, 0xbb, 0x18, 0x0e, 0x73, 0x72, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0e, 0x73, 0x72, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0f, 0x73,
	0x72, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xca, 0xbb, 0x18, 0x0f, 0x73, 0x72, 0x63, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x52, 0x0f, 0x73, 0x72, 0x63, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x72,
	0x63, 0x54, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06,
	0x73, 0x72, 0x63, 0x54, 0x61, 0x67, 0x52, 0x06, 0x73, 0x72, 0x63, 0x54, 0x61, 0x67, 0x12, 0x37,
	0x0a, 0x0d, 0x64, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xca, 0xbb, 0x18, 0x0d, 0x64, 0x73, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0d, 0x64, 0x73, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0e, 0x64, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x12, 0xca, 0xbb, 0x18, 0x0e, 0x64, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x52, 0x0e, 0x64, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x69, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x42, 0x0e, 0xca, 0xbb, 0x18, 0x0a, 0x69, 0x73, 0x4f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x0a, 0x69, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x72,
	0x69, 0x64, 0x65, 0x22, 0x36, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6c, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x63,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba,
	0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xb2, 0xbb, 0x18, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0xa1, 0x03, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x72,
	0x65, 0x70, 0x6f, 0x73, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x72, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x72, 0x63, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x72, 0x63, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x72,
	0x63, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x72, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x72, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x79, 0x6e, 0x63, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x79, 0x6e, 0x63,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x32, 0xc9, 0x02,
	0x0a, 0x19, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x63,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x18,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0xd2, 0xc1, 0x18, 0x16, 0x2f,
	0x76, 0x32, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x53, 0x79, 0x6e,
	0x63, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x7b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x23,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0xca, 0xc1, 0x18, 0x13, 0x2f,
	0x76, 0x32, 0x2f, 0x67, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61,
	0x73, 0x6b, 0x1a, 0x25, 0x92, 0xce, 0x18, 0x21, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f,
	0x63, 0x72, 0x73, 0x2d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x63, 0x74, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x74, 0x79, 0x75, 0x6e, 0x2e, 0x63, 0x6e, 0x42, 0x4f, 0x5a, 0x4d, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x2d,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x63, 0x72, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x73, 0x79, 0x6e, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_repositorysync_proto_rawDescOnce sync.Once
	file_repositorysync_proto_rawDescData = file_repositorysync_proto_rawDesc
)

func file_repositorysync_proto_rawDescGZIP() []byte {
	file_repositorysync_proto_rawDescOnce.Do(func() {
		file_repositorysync_proto_rawDescData = protoimpl.X.CompressGZIP(file_repositorysync_proto_rawDescData)
	})
	return file_repositorysync_proto_rawDescData
}

var file_repositorysync_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_repositorysync_proto_goTypes = []interface{}{
	(*CreateRepositorySyncTaskRequest)(nil),  // 0: proto.CreateRepositorySyncTaskRequest
	(*CreateRepositorySyncTaskResponse)(nil), // 1: proto.CreateRepositorySyncTaskResponse
	(*GetRepositorySyncTaskRequest)(nil),     // 2: proto.GetRepositorySyncTaskRequest
	(*GetRepositorySyncTaskResponse)(nil),    // 3: proto.GetRepositorySyncTaskResponse
}
var file_repositorysync_proto_depIdxs = []int32{
	0, // 0: proto.RepositorySyncTaskService.CreateRepositorySyncTask:input_type -> proto.CreateRepositorySyncTaskRequest
	2, // 1: proto.RepositorySyncTaskService.GetRepositorySyncTask:input_type -> proto.GetRepositorySyncTaskRequest
	1, // 2: proto.RepositorySyncTaskService.CreateRepositorySyncTask:output_type -> proto.CreateRepositorySyncTaskResponse
	3, // 3: proto.RepositorySyncTaskService.GetRepositorySyncTask:output_type -> proto.GetRepositorySyncTaskResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_repositorysync_proto_init() }
func file_repositorysync_proto_init() {
	if File_repositorysync_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_repositorysync_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRepositorySyncTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repositorysync_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRepositorySyncTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repositorysync_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRepositorySyncTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repositorysync_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRepositorySyncTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_repositorysync_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_repositorysync_proto_goTypes,
		DependencyIndexes: file_repositorysync_proto_depIdxs,
		MessageInfos:      file_repositorysync_proto_msgTypes,
	}.Build()
	File_repositorysync_proto = out.File
	file_repositorysync_proto_rawDesc = nil
	file_repositorysync_proto_goTypes = nil
	file_repositorysync_proto_depIdxs = nil
}
