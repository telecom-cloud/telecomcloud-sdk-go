// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v4.25.1
// source: hostgroup.proto

package hostgroup

import (
	_ "github.com/telecom-cloud/client-go/pkg/openapi/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateHostGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId         string   `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	HostGroupName    string   `protobuf:"bytes,2,opt,name=hostGroupName,proto3" form:"hostGroupName" json:"hostGroupName,omitempty"`
	Description      string   `protobuf:"bytes,3,opt,name=description,proto3" form:"description" json:"description,omitempty"`
	HostIdentityType string   `protobuf:"bytes,4,opt,name=hostIdentityType,proto3" form:"hostIdentityType" json:"hostIdentityType,omitempty"`
	HostList         []string `protobuf:"bytes,5,rep,name=hostList,proto3" form:"hostList" json:"hostList,omitempty"`
	Type             int32    `protobuf:"varint,6,opt,name=type,proto3" form:"type" json:"type,omitempty"`
	SignList         []string `protobuf:"bytes,7,rep,name=signList,proto3" form:"signList" json:"signList,omitempty"`
}

func (x *CreateHostGroupRequest) Reset() {
	*x = CreateHostGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostgroup_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHostGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHostGroupRequest) ProtoMessage() {}

func (x *CreateHostGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hostgroup_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHostGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateHostGroupRequest) Descriptor() ([]byte, []int) {
	return file_hostgroup_proto_rawDescGZIP(), []int{0}
}

func (x *CreateHostGroupRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *CreateHostGroupRequest) GetHostGroupName() string {
	if x != nil {
		return x.HostGroupName
	}
	return ""
}

func (x *CreateHostGroupRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateHostGroupRequest) GetHostIdentityType() string {
	if x != nil {
		return x.HostIdentityType
	}
	return ""
}

func (x *CreateHostGroupRequest) GetHostList() []string {
	if x != nil {
		return x.HostList
	}
	return nil
}

func (x *CreateHostGroupRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CreateHostGroupRequest) GetSignList() []string {
	if x != nil {
		return x.SignList
	}
	return nil
}

type CreateHostGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostGroupCode string `protobuf:"bytes,1,opt,name=hostGroupCode,proto3" form:"hostGroupCode" json:"hostGroupCode,omitempty"`
}

func (x *CreateHostGroupResponse) Reset() {
	*x = CreateHostGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostgroup_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHostGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHostGroupResponse) ProtoMessage() {}

func (x *CreateHostGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hostgroup_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHostGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateHostGroupResponse) Descriptor() ([]byte, []int) {
	return file_hostgroup_proto_rawDescGZIP(), []int{1}
}

func (x *CreateHostGroupResponse) GetHostGroupCode() string {
	if x != nil {
		return x.HostGroupCode
	}
	return ""
}

type DeleteHostGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId      string `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	HostGroupCode string `protobuf:"bytes,2,opt,name=hostGroupCode,proto3" form:"hostGroupCode" json:"hostGroupCode,omitempty"`
	HostGroupName string `protobuf:"bytes,3,opt,name=hostGroupName,proto3" form:"hostGroupName" json:"hostGroupName,omitempty"`
}

func (x *DeleteHostGroupRequest) Reset() {
	*x = DeleteHostGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostgroup_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHostGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHostGroupRequest) ProtoMessage() {}

func (x *DeleteHostGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hostgroup_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHostGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteHostGroupRequest) Descriptor() ([]byte, []int) {
	return file_hostgroup_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteHostGroupRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *DeleteHostGroupRequest) GetHostGroupCode() string {
	if x != nil {
		return x.HostGroupCode
	}
	return ""
}

func (x *DeleteHostGroupRequest) GetHostGroupName() string {
	if x != nil {
		return x.HostGroupName
	}
	return ""
}

type DeleteHostGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteHostGroupResponse) Reset() {
	*x = DeleteHostGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostgroup_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHostGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHostGroupResponse) ProtoMessage() {}

func (x *DeleteHostGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hostgroup_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHostGroupResponse.ProtoReflect.Descriptor instead.
func (*DeleteHostGroupResponse) Descriptor() ([]byte, []int) {
	return file_hostgroup_proto_rawDescGZIP(), []int{3}
}

type GetHostGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId      string `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	HostGroupCode string `protobuf:"bytes,2,opt,name=hostGroupCode,proto3" json:"hostGroupCode,omitempty" query:"hostGroupCode"`
	HostGroupName string `protobuf:"bytes,3,opt,name=hostGroupName,proto3" json:"hostGroupName,omitempty" query:"hostGroupName"`
}

func (x *GetHostGroupRequest) Reset() {
	*x = GetHostGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostgroup_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHostGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHostGroupRequest) ProtoMessage() {}

func (x *GetHostGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hostgroup_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHostGroupRequest.ProtoReflect.Descriptor instead.
func (*GetHostGroupRequest) Descriptor() ([]byte, []int) {
	return file_hostgroup_proto_rawDescGZIP(), []int{4}
}

func (x *GetHostGroupRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *GetHostGroupRequest) GetHostGroupCode() string {
	if x != nil {
		return x.HostGroupCode
	}
	return ""
}

func (x *GetHostGroupRequest) GetHostGroupName() string {
	if x != nil {
		return x.HostGroupName
	}
	return ""
}

type GetHostGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostGroupCode    string      `protobuf:"bytes,1,opt,name=hostGroupCode,proto3" form:"hostGroupCode" json:"hostGroupCode,omitempty"`
	HostGroupName    string      `protobuf:"bytes,2,opt,name=hostGroupName,proto3" form:"hostGroupName" json:"hostGroupName,omitempty"`
	Description      string      `protobuf:"bytes,3,opt,name=description,proto3" form:"description" json:"description,omitempty"`
	HostIdentityType string      `protobuf:"bytes,4,opt,name=hostIdentityType,proto3" form:"hostIdentityType" json:"hostIdentityType,omitempty"`
	HostList         []*HostList `protobuf:"bytes,5,rep,name=hostList,proto3" form:"hostList" json:"hostList,omitempty"`
	SignList         []string    `protobuf:"bytes,6,rep,name=signList,proto3" form:"signList" json:"signList,omitempty"`
}

func (x *GetHostGroupResponse) Reset() {
	*x = GetHostGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostgroup_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHostGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHostGroupResponse) ProtoMessage() {}

func (x *GetHostGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hostgroup_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHostGroupResponse.ProtoReflect.Descriptor instead.
func (*GetHostGroupResponse) Descriptor() ([]byte, []int) {
	return file_hostgroup_proto_rawDescGZIP(), []int{5}
}

func (x *GetHostGroupResponse) GetHostGroupCode() string {
	if x != nil {
		return x.HostGroupCode
	}
	return ""
}

func (x *GetHostGroupResponse) GetHostGroupName() string {
	if x != nil {
		return x.HostGroupName
	}
	return ""
}

func (x *GetHostGroupResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetHostGroupResponse) GetHostIdentityType() string {
	if x != nil {
		return x.HostIdentityType
	}
	return ""
}

func (x *GetHostGroupResponse) GetHostList() []*HostList {
	if x != nil {
		return x.HostList
	}
	return nil
}

func (x *GetHostGroupResponse) GetSignList() []string {
	if x != nil {
		return x.SignList
	}
	return nil
}

type HostList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostCode     string `protobuf:"bytes,1,opt,name=hostCode,proto3" form:"hostCode" json:"hostCode,omitempty"`
	HostName     string `protobuf:"bytes,2,opt,name=hostName,proto3" form:"hostName" json:"hostName,omitempty"`
	HostUuid     string `protobuf:"bytes,3,opt,name=hostUuid,proto3" form:"hostUuid" json:"hostUuid,omitempty"`
	HostIp       string `protobuf:"bytes,4,opt,name=hostIp,proto3" form:"hostIp" json:"hostIp,omitempty"`
	VpcName      string `protobuf:"bytes,5,opt,name=vpcName,proto3" form:"vpcName" json:"vpcName,omitempty"`
	LinkedStatus int32  `protobuf:"varint,6,opt,name=linkedStatus,proto3" form:"linkedStatus" json:"linkedStatus,omitempty"`
}

func (x *HostList) Reset() {
	*x = HostList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostgroup_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostList) ProtoMessage() {}

func (x *HostList) ProtoReflect() protoreflect.Message {
	mi := &file_hostgroup_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostList.ProtoReflect.Descriptor instead.
func (*HostList) Descriptor() ([]byte, []int) {
	return file_hostgroup_proto_rawDescGZIP(), []int{6}
}

func (x *HostList) GetHostCode() string {
	if x != nil {
		return x.HostCode
	}
	return ""
}

func (x *HostList) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *HostList) GetHostUuid() string {
	if x != nil {
		return x.HostUuid
	}
	return ""
}

func (x *HostList) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *HostList) GetVpcName() string {
	if x != nil {
		return x.VpcName
	}
	return ""
}

func (x *HostList) GetLinkedStatus() int32 {
	if x != nil {
		return x.LinkedStatus
	}
	return 0
}

var File_hostgroup_proto protoreflect.FileDescriptor

var file_hostgroup_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x68, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70,
	0x69, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xe2, 0x02, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28,
	0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0c, 0xba, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0d, 0x68, 0x6f, 0x73, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x11, 0xca, 0xbb, 0x18, 0x0d, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x0d, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x31, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x10, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14,
	0xca, 0xbb, 0x18, 0x10, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08,
	0xca, 0xbb, 0x18, 0x04, 0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x28,
	0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08,
	0x73, 0x69, 0x67, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x52, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xca, 0xbb, 0x18, 0x0d,
	0x68, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0d, 0x68,
	0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xb4, 0x01, 0x0a,
	0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb, 0x18, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x37, 0x0a, 0x0d, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xca, 0xbb, 0x18, 0x0d, 0x68, 0x6f,
	0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0d, 0x68, 0x6f, 0x73,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x68, 0x6f,
	0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x11, 0xca, 0xbb, 0x18, 0x0d, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0d, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x73,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb1,
	0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb, 0x18, 0x08, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x37, 0x0a, 0x0d, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xb2, 0xbb, 0x18, 0x0d, 0x68, 0x6f, 0x73,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0d, 0x68, 0x6f, 0x73, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x68, 0x6f, 0x73,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x11, 0xb2, 0xbb, 0x18, 0x0d, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x0d, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0xe2, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x68,
	0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x11, 0xca, 0xbb, 0x18, 0x0d, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0d, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xca, 0xbb, 0x18,
	0x0d, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0d,
	0x68, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x40, 0x0a, 0x10, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xca, 0xbb, 0x18, 0x10,
	0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x10, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x73,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x08, 0x73, 0x69, 0x67, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x42,
	0x0c, 0xca, 0xbb, 0x18, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x73,
	0x69, 0x67, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x89, 0x02, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x68, 0x6f, 0x73, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28,
	0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x55, 0x75, 0x69, 0x64, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x22, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x52, 0x06,
	0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x12, 0x25, 0x0a, 0x07, 0x76, 0x70, 0x63, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x76, 0x70, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x07, 0x76, 0x70, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a,
	0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x10, 0xca, 0xbb, 0x18, 0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x32, 0xf3, 0x02, 0x0a, 0x10, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0xd2, 0xc1, 0x18, 0x14,
	0x2f, 0x76, 0x31, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x6a, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f,
	0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0xd2, 0xc1, 0x18, 0x14, 0x2f, 0x76, 0x31, 0x2f,
	0x68, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x5e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0xca, 0xc1, 0x18, 0x11, 0x2f,
	0x76, 0x31, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x67, 0x65, 0x74,
	0x1a, 0x27, 0x92, 0xce, 0x18, 0x23, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x63, 0x74,
	0x6c, 0x74, 0x73, 0x2d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x63, 0x74, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x74, 0x79, 0x75, 0x6e, 0x2e, 0x63, 0x6e, 0x42, 0x4a, 0x5a, 0x48, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x2d,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x61, 0x6c, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x68, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hostgroup_proto_rawDescOnce sync.Once
	file_hostgroup_proto_rawDescData = file_hostgroup_proto_rawDesc
)

func file_hostgroup_proto_rawDescGZIP() []byte {
	file_hostgroup_proto_rawDescOnce.Do(func() {
		file_hostgroup_proto_rawDescData = protoimpl.X.CompressGZIP(file_hostgroup_proto_rawDescData)
	})
	return file_hostgroup_proto_rawDescData
}

var file_hostgroup_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_hostgroup_proto_goTypes = []interface{}{
	(*CreateHostGroupRequest)(nil),  // 0: proto.CreateHostGroupRequest
	(*CreateHostGroupResponse)(nil), // 1: proto.CreateHostGroupResponse
	(*DeleteHostGroupRequest)(nil),  // 2: proto.DeleteHostGroupRequest
	(*DeleteHostGroupResponse)(nil), // 3: proto.DeleteHostGroupResponse
	(*GetHostGroupRequest)(nil),     // 4: proto.GetHostGroupRequest
	(*GetHostGroupResponse)(nil),    // 5: proto.GetHostGroupResponse
	(*HostList)(nil),                // 6: proto.HostList
}
var file_hostgroup_proto_depIdxs = []int32{
	6, // 0: proto.GetHostGroupResponse.hostList:type_name -> proto.HostList
	0, // 1: proto.HostGroupService.CreateHostGroup:input_type -> proto.CreateHostGroupRequest
	2, // 2: proto.HostGroupService.DeleteHostGroup:input_type -> proto.DeleteHostGroupRequest
	4, // 3: proto.HostGroupService.GetHostGroup:input_type -> proto.GetHostGroupRequest
	1, // 4: proto.HostGroupService.CreateHostGroup:output_type -> proto.CreateHostGroupResponse
	3, // 5: proto.HostGroupService.DeleteHostGroup:output_type -> proto.DeleteHostGroupResponse
	5, // 6: proto.HostGroupService.GetHostGroup:output_type -> proto.GetHostGroupResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_hostgroup_proto_init() }
func file_hostgroup_proto_init() {
	if File_hostgroup_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hostgroup_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHostGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostgroup_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHostGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostgroup_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHostGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostgroup_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHostGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostgroup_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHostGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostgroup_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHostGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostgroup_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hostgroup_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hostgroup_proto_goTypes,
		DependencyIndexes: file_hostgroup_proto_depIdxs,
		MessageInfos:      file_hostgroup_proto_msgTypes,
	}.Build()
	File_hostgroup_proto = out.File
	file_hostgroup_proto_rawDesc = nil
	file_hostgroup_proto_goTypes = nil
	file_hostgroup_proto_depIdxs = nil
}
