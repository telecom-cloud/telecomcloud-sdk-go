// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v4.25.1
// source: vpce.proto

package vpce

import (
	_ "github.com/telecom-cloud/client-go/pkg/openapi/api"
	common "github.com/telecom-cloud/telecomcloud-sdk-go/service/vpce/types/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateEndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientToken string `protobuf:"bytes,1,opt,name=clientToken,proto3" form:"clientToken" json:"clientToken,omitempty"`
	RegionId    string `protobuf:"bytes,2,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	// 收费类型：只能填写 on_demand
	CycleType string `protobuf:"bytes,3,opt,name=cycleType,proto3" form:"cycleType" json:"cycleType,omitempty"`
	// 终端节点关联的终端节点服务
	EndpointServiceID string `protobuf:"bytes,4,opt,name=endpointServiceID,proto3" form:"endpointServiceID" json:"endpointServiceID,omitempty"`
	// 终端节点名称，只能由数字，字母，-组成不能以数字和-开头，最大长度28
	EndpointName  string   `protobuf:"bytes,5,opt,name=endpointName,proto3" form:"endpointName" json:"endpointName,omitempty"`
	SubnetID      string   `protobuf:"bytes,6,opt,name=subnetID,proto3" form:"subnetID" json:"subnetID,omitempty"`
	VpcID         string   `protobuf:"bytes,7,opt,name=vpcID,proto3" form:"vpcID" json:"vpcID,omitempty"`
	Ip            string   `protobuf:"bytes,8,opt,name=ip,proto3" form:"ip" json:"ip,omitempty"`
	WhiteListFlag string   `protobuf:"bytes,9,opt,name=whiteListFlag,proto3" form:"whiteListFlag" json:"whiteListFlag,omitempty"`
	Whitelist     []string `protobuf:"bytes,10,rep,name=whitelist,proto3" form:"whitelist" json:"whitelist,omitempty"`
	// 支持拉丁字母、中文、数字, 特殊字符：~!@#$%^&*()_-+= <>?:{},./;'[ ]·~！@#￥%……&*（） —— -+={},
	Description string              `protobuf:"bytes,11,opt,name=description,proto3" form:"description" json:"description,omitempty"`
	EnableDns   bool                `protobuf:"varint,12,opt,name=enableDns,proto3" form:"enableDns" json:"enableDns,omitempty"`
	CustomInfo  *common.CustomInfo  `protobuf:"bytes,13,opt,name=customInfo,proto3" form:"customInfo" json:"customInfo,omitempty"`
	ChannelInfo *common.ChannelInfo `protobuf:"bytes,14,opt,name=channelInfo,proto3" form:"channelInfo" json:"channelInfo,omitempty"`
}

func (x *CreateEndpointRequest) Reset() {
	*x = CreateEndpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpce_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEndpointRequest) ProtoMessage() {}

func (x *CreateEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vpce_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEndpointRequest.ProtoReflect.Descriptor instead.
func (*CreateEndpointRequest) Descriptor() ([]byte, []int) {
	return file_vpce_proto_rawDescGZIP(), []int{0}
}

func (x *CreateEndpointRequest) GetClientToken() string {
	if x != nil {
		return x.ClientToken
	}
	return ""
}

func (x *CreateEndpointRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *CreateEndpointRequest) GetCycleType() string {
	if x != nil {
		return x.CycleType
	}
	return ""
}

func (x *CreateEndpointRequest) GetEndpointServiceID() string {
	if x != nil {
		return x.EndpointServiceID
	}
	return ""
}

func (x *CreateEndpointRequest) GetEndpointName() string {
	if x != nil {
		return x.EndpointName
	}
	return ""
}

func (x *CreateEndpointRequest) GetSubnetID() string {
	if x != nil {
		return x.SubnetID
	}
	return ""
}

func (x *CreateEndpointRequest) GetVpcID() string {
	if x != nil {
		return x.VpcID
	}
	return ""
}

func (x *CreateEndpointRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *CreateEndpointRequest) GetWhiteListFlag() string {
	if x != nil {
		return x.WhiteListFlag
	}
	return ""
}

func (x *CreateEndpointRequest) GetWhitelist() []string {
	if x != nil {
		return x.Whitelist
	}
	return nil
}

func (x *CreateEndpointRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateEndpointRequest) GetEnableDns() bool {
	if x != nil {
		return x.EnableDns
	}
	return false
}

func (x *CreateEndpointRequest) GetCustomInfo() *common.CustomInfo {
	if x != nil {
		return x.CustomInfo
	}
	return nil
}

func (x *CreateEndpointRequest) GetChannelInfo() *common.ChannelInfo {
	if x != nil {
		return x.ChannelInfo
	}
	return nil
}

type CreateEndpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterOrderID    string `protobuf:"bytes,1,opt,name=masterOrderID,proto3" form:"masterOrderID" json:"masterOrderID,omitempty" query:"masterOrderID"`
	MasterOrderNO    string `protobuf:"bytes,2,opt,name=masterOrderNO,proto3" form:"masterOrderNO" json:"masterOrderNO,omitempty" query:"masterOrderNO"`
	MasterResourceID string `protobuf:"bytes,3,opt,name=masterResourceID,proto3" form:"masterResourceID" json:"masterResourceID,omitempty" query:"masterResourceID"`
	// 终端节点ID, 当 masterResourceStatus 不为 started 时，该取值可为 null
	EndpointID string `protobuf:"bytes,4,opt,name=endpointID,proto3" form:"endpointID" json:"endpointID,omitempty" query:"endpointID"`
	RegionID   string `protobuf:"bytes,5,opt,name=regionID,proto3" form:"regionID" json:"regionID,omitempty" query:"regionID"`
	// 资源状态:
	// started（启用）
	// renewed（续订）
	// refunded（退订）
	// destroyed（销毁）
	// failed（失败）
	// starting（正在启用）
	// changed（变配）
	// expired（过期）
	// unknown（未知）
	MasterResourceStatus string `protobuf:"bytes,6,opt,name=masterResourceStatus,proto3" form:"masterResourceStatus" json:"masterResourceStatus,omitempty" query:"masterResourceStatus"`
}

func (x *CreateEndpointResponse) Reset() {
	*x = CreateEndpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpce_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEndpointResponse) ProtoMessage() {}

func (x *CreateEndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vpce_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEndpointResponse.ProtoReflect.Descriptor instead.
func (*CreateEndpointResponse) Descriptor() ([]byte, []int) {
	return file_vpce_proto_rawDescGZIP(), []int{1}
}

func (x *CreateEndpointResponse) GetMasterOrderID() string {
	if x != nil {
		return x.MasterOrderID
	}
	return ""
}

func (x *CreateEndpointResponse) GetMasterOrderNO() string {
	if x != nil {
		return x.MasterOrderNO
	}
	return ""
}

func (x *CreateEndpointResponse) GetMasterResourceID() string {
	if x != nil {
		return x.MasterResourceID
	}
	return ""
}

func (x *CreateEndpointResponse) GetEndpointID() string {
	if x != nil {
		return x.EndpointID
	}
	return ""
}

func (x *CreateEndpointResponse) GetRegionID() string {
	if x != nil {
		return x.RegionID
	}
	return ""
}

func (x *CreateEndpointResponse) GetMasterResourceStatus() string {
	if x != nil {
		return x.MasterResourceStatus
	}
	return ""
}

type DeleteEndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientToken string              `protobuf:"bytes,1,opt,name=clientToken,proto3" form:"clientToken" json:"clientToken,omitempty"`
	EndpointID  string              `protobuf:"bytes,2,opt,name=endpointID,proto3" form:"endpointID" json:"endpointID,omitempty"`
	RegionID    string              `protobuf:"bytes,3,opt,name=regionID,proto3" form:"regionID" json:"regionID,omitempty"`
	CustomInfo  *common.CustomInfo  `protobuf:"bytes,4,opt,name=customInfo,proto3" form:"customInfo" json:"customInfo,omitempty"`
	ChannelInfo *common.ChannelInfo `protobuf:"bytes,5,opt,name=channelInfo,proto3" form:"channelInfo" json:"channelInfo,omitempty"`
}

func (x *DeleteEndpointRequest) Reset() {
	*x = DeleteEndpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpce_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEndpointRequest) ProtoMessage() {}

func (x *DeleteEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vpce_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEndpointRequest.ProtoReflect.Descriptor instead.
func (*DeleteEndpointRequest) Descriptor() ([]byte, []int) {
	return file_vpce_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteEndpointRequest) GetClientToken() string {
	if x != nil {
		return x.ClientToken
	}
	return ""
}

func (x *DeleteEndpointRequest) GetEndpointID() string {
	if x != nil {
		return x.EndpointID
	}
	return ""
}

func (x *DeleteEndpointRequest) GetRegionID() string {
	if x != nil {
		return x.RegionID
	}
	return ""
}

func (x *DeleteEndpointRequest) GetCustomInfo() *common.CustomInfo {
	if x != nil {
		return x.CustomInfo
	}
	return nil
}

func (x *DeleteEndpointRequest) GetChannelInfo() *common.ChannelInfo {
	if x != nil {
		return x.ChannelInfo
	}
	return nil
}

type DeleteEndpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteEndpointResponse) Reset() {
	*x = DeleteEndpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpce_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEndpointResponse) ProtoMessage() {}

func (x *DeleteEndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vpce_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEndpointResponse.ProtoReflect.Descriptor instead.
func (*DeleteEndpointResponse) Descriptor() ([]byte, []int) {
	return file_vpce_proto_rawDescGZIP(), []int{3}
}

type GetEndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndpointID string             `protobuf:"bytes,1,opt,name=endpointID,proto3" json:"endpointID,omitempty" query:"endpointID"`
	RegionID   string             `protobuf:"bytes,2,opt,name=regionID,proto3" header:"regionID" json:"regionID,omitempty" query:"regionID"`
	CustomInfo *common.CustomInfo `protobuf:"bytes,4,opt,name=customInfo,proto3" header:"customInfo" json:"customInfo,omitempty"`
}

func (x *GetEndpointRequest) Reset() {
	*x = GetEndpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpce_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEndpointRequest) ProtoMessage() {}

func (x *GetEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vpce_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEndpointRequest.ProtoReflect.Descriptor instead.
func (*GetEndpointRequest) Descriptor() ([]byte, []int) {
	return file_vpce_proto_rawDescGZIP(), []int{4}
}

func (x *GetEndpointRequest) GetEndpointID() string {
	if x != nil {
		return x.EndpointID
	}
	return ""
}

func (x *GetEndpointRequest) GetRegionID() string {
	if x != nil {
		return x.RegionID
	}
	return ""
}

func (x *GetEndpointRequest) GetCustomInfo() *common.CustomInfo {
	if x != nil {
		return x.CustomInfo
	}
	return nil
}

type GetEndpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint *Endpoint `protobuf:"bytes,1,opt,name=endpoint,proto3" form:"endpoint" json:"endpoint,omitempty" query:"endpoint"`
}

func (x *GetEndpointResponse) Reset() {
	*x = GetEndpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpce_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEndpointResponse) ProtoMessage() {}

func (x *GetEndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vpce_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEndpointResponse.ProtoReflect.Descriptor instead.
func (*GetEndpointResponse) Descriptor() ([]byte, []int) {
	return file_vpce_proto_rawDescGZIP(), []int{5}
}

func (x *GetEndpointResponse) GetEndpoint() *Endpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

type ListEndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionID     string             `protobuf:"bytes,1,opt,name=regionID,proto3" header:"regionID" json:"regionID,omitempty" query:"regionID"`
	EndpointName string             `protobuf:"bytes,2,opt,name=endpointName,proto3" json:"endpointName,omitempty" query:"endpointName"`
	QueryContent string             `protobuf:"bytes,3,opt,name=queryContent,proto3" json:"queryContent,omitempty" query:"queryContent"`
	CustomInfo   *common.CustomInfo `protobuf:"bytes,4,opt,name=customInfo,proto3" header:"customInfo" json:"customInfo,omitempty"`
}

func (x *ListEndpointRequest) Reset() {
	*x = ListEndpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpce_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEndpointRequest) ProtoMessage() {}

func (x *ListEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vpce_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEndpointRequest.ProtoReflect.Descriptor instead.
func (*ListEndpointRequest) Descriptor() ([]byte, []int) {
	return file_vpce_proto_rawDescGZIP(), []int{6}
}

func (x *ListEndpointRequest) GetRegionID() string {
	if x != nil {
		return x.RegionID
	}
	return ""
}

func (x *ListEndpointRequest) GetEndpointName() string {
	if x != nil {
		return x.EndpointName
	}
	return ""
}

func (x *ListEndpointRequest) GetQueryContent() string {
	if x != nil {
		return x.QueryContent
	}
	return ""
}

func (x *ListEndpointRequest) GetCustomInfo() *common.CustomInfo {
	if x != nil {
		return x.CustomInfo
	}
	return nil
}

type ListEndpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoints  []*Endpoint `protobuf:"bytes,1,rep,name=endpoints,proto3" form:"endpoints" json:"endpoints,omitempty" query:"endpoints"`
	TotalCount int64       `protobuf:"varint,2,opt,name=totalCount,proto3" form:"totalCount" json:"totalCount,omitempty" query:"totalCount"`
}

func (x *ListEndpointResponse) Reset() {
	*x = ListEndpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpce_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEndpointResponse) ProtoMessage() {}

func (x *ListEndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vpce_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEndpointResponse.ProtoReflect.Descriptor instead.
func (*ListEndpointResponse) Descriptor() ([]byte, []int) {
	return file_vpce_proto_rawDescGZIP(), []int{7}
}

func (x *ListEndpointResponse) GetEndpoints() []*Endpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *ListEndpointResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type Endpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string `protobuf:"bytes,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`
	EndpointServiceID string `protobuf:"bytes,2,opt,name=endpointServiceID,proto3" form:"endpointServiceID" json:"endpointServiceID,omitempty" query:"endpointServiceID"`
	Type              string `protobuf:"bytes,3,opt,name=type,proto3" form:"type" json:"type,omitempty" query:"type"`
	Name              string `protobuf:"bytes,4,opt,name=name,proto3" form:"name" json:"name,omitempty" query:"name"`
	VpcID             string `protobuf:"bytes,5,opt,name=vpcID,proto3" form:"vpcID" json:"vpcID,omitempty" query:"vpcID"`
	VpcAddress        string `protobuf:"bytes,6,opt,name=vpcAddress,proto3" form:"vpcAddress" json:"vpcAddress,omitempty" query:"vpcAddress"`
	Whitelist         string `protobuf:"bytes,7,opt,name=whitelist,proto3" form:"whitelist" json:"whitelist,omitempty" query:"whitelist"`
	// endpoint状态, 1 表示已链接，2 表示未链接
	Status      int32        `protobuf:"varint,8,opt,name=status,proto3" form:"status" json:"status,omitempty" query:"status"`
	Description string       `protobuf:"bytes,9,opt,name=description,proto3" form:"description" json:"description,omitempty" query:"description"`
	EndpointObj *EndpointObj `protobuf:"bytes,10,opt,name=endpointObj,proto3" form:"endpointObj" json:"endpointObj,omitempty" query:"endpointObj"`
	CreatedTime string       `protobuf:"bytes,11,opt,name=createdTime,proto3" form:"createdTime" json:"createdTime,omitempty" query:"createdTime"`
	UpdatedTime string       `protobuf:"bytes,12,opt,name=updatedTime,proto3" form:"updatedTime" json:"updatedTime,omitempty" query:"updatedTime"`
}

func (x *Endpoint) Reset() {
	*x = Endpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpce_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Endpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoint) ProtoMessage() {}

func (x *Endpoint) ProtoReflect() protoreflect.Message {
	mi := &file_vpce_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoint.ProtoReflect.Descriptor instead.
func (*Endpoint) Descriptor() ([]byte, []int) {
	return file_vpce_proto_rawDescGZIP(), []int{8}
}

func (x *Endpoint) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Endpoint) GetEndpointServiceID() string {
	if x != nil {
		return x.EndpointServiceID
	}
	return ""
}

func (x *Endpoint) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Endpoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Endpoint) GetVpcID() string {
	if x != nil {
		return x.VpcID
	}
	return ""
}

func (x *Endpoint) GetVpcAddress() string {
	if x != nil {
		return x.VpcAddress
	}
	return ""
}

func (x *Endpoint) GetWhitelist() string {
	if x != nil {
		return x.Whitelist
	}
	return ""
}

func (x *Endpoint) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Endpoint) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Endpoint) GetEndpointObj() *EndpointObj {
	if x != nil {
		return x.EndpointObj
	}
	return nil
}

func (x *Endpoint) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

func (x *Endpoint) GetUpdatedTime() string {
	if x != nil {
		return x.UpdatedTime
	}
	return ""
}

type EndpointObj struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubnetID  string   `protobuf:"bytes,1,opt,name=subnetID,proto3" form:"subnetID" json:"subnetID,omitempty" query:"subnetID"`
	PortID    string   `protobuf:"bytes,2,opt,name=portID,proto3" form:"portID" json:"portID,omitempty" query:"portID"`
	Ip        string   `protobuf:"bytes,3,opt,name=ip,proto3" form:"ip" json:"ip,omitempty" query:"ip"`
	EnableDns int32    `protobuf:"varint,4,opt,name=enableDns,proto3" form:"enableDns" json:"enableDns,omitempty" query:"enableDns"`
	DnsNames  []string `protobuf:"bytes,5,rep,name=dnsNames,proto3" form:"dnsNames" json:"dnsNames,omitempty" query:"dnsNames"`
}

func (x *EndpointObj) Reset() {
	*x = EndpointObj{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpce_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointObj) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointObj) ProtoMessage() {}

func (x *EndpointObj) ProtoReflect() protoreflect.Message {
	mi := &file_vpce_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointObj.ProtoReflect.Descriptor instead.
func (*EndpointObj) Descriptor() ([]byte, []int) {
	return file_vpce_proto_rawDescGZIP(), []int{9}
}

func (x *EndpointObj) GetSubnetID() string {
	if x != nil {
		return x.SubnetID
	}
	return ""
}

func (x *EndpointObj) GetPortID() string {
	if x != nil {
		return x.PortID
	}
	return ""
}

func (x *EndpointObj) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *EndpointObj) GetEnableDns() int32 {
	if x != nil {
		return x.EnableDns
	}
	return 0
}

func (x *EndpointObj) GetDnsNames() []string {
	if x != nil {
		return x.DnsNames
	}
	return nil
}

// whitelist
type CreateEndpointWhitelistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientToken       string             `protobuf:"bytes,1,opt,name=clientToken,proto3" form:"clientToken" json:"clientToken,omitempty"`
	RegionID          string             `protobuf:"bytes,2,opt,name=regionID,proto3" form:"regionID" json:"regionID,omitempty"`
	EndpointServiceID string             `protobuf:"bytes,3,opt,name=endpointServiceID,proto3" form:"endpointServiceID" json:"endpointServiceID,omitempty"`
	BssAccountID      string             `protobuf:"bytes,4,opt,name=bssAccountID,proto3" form:"bssAccountID" json:"bssAccountID,omitempty"`
	CustomInfo        *common.CustomInfo `protobuf:"bytes,5,opt,name=customInfo,proto3" form:"customInfo" json:"customInfo,omitempty"`
}

func (x *CreateEndpointWhitelistRequest) Reset() {
	*x = CreateEndpointWhitelistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpce_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEndpointWhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEndpointWhitelistRequest) ProtoMessage() {}

func (x *CreateEndpointWhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vpce_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEndpointWhitelistRequest.ProtoReflect.Descriptor instead.
func (*CreateEndpointWhitelistRequest) Descriptor() ([]byte, []int) {
	return file_vpce_proto_rawDescGZIP(), []int{10}
}

func (x *CreateEndpointWhitelistRequest) GetClientToken() string {
	if x != nil {
		return x.ClientToken
	}
	return ""
}

func (x *CreateEndpointWhitelistRequest) GetRegionID() string {
	if x != nil {
		return x.RegionID
	}
	return ""
}

func (x *CreateEndpointWhitelistRequest) GetEndpointServiceID() string {
	if x != nil {
		return x.EndpointServiceID
	}
	return ""
}

func (x *CreateEndpointWhitelistRequest) GetBssAccountID() string {
	if x != nil {
		return x.BssAccountID
	}
	return ""
}

func (x *CreateEndpointWhitelistRequest) GetCustomInfo() *common.CustomInfo {
	if x != nil {
		return x.CustomInfo
	}
	return nil
}

type CreateEndpointWhitelistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateEndpointWhitelistResponse) Reset() {
	*x = CreateEndpointWhitelistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpce_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEndpointWhitelistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEndpointWhitelistResponse) ProtoMessage() {}

func (x *CreateEndpointWhitelistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vpce_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEndpointWhitelistResponse.ProtoReflect.Descriptor instead.
func (*CreateEndpointWhitelistResponse) Descriptor() ([]byte, []int) {
	return file_vpce_proto_rawDescGZIP(), []int{11}
}

type DeleteEndpointWhitelistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientToken       string             `protobuf:"bytes,1,opt,name=clientToken,proto3" form:"clientToken" json:"clientToken,omitempty"`
	RegionID          string             `protobuf:"bytes,2,opt,name=regionID,proto3" form:"regionID" json:"regionID,omitempty"`
	EndpointServiceID string             `protobuf:"bytes,3,opt,name=endpointServiceID,proto3" form:"endpointServiceID" json:"endpointServiceID,omitempty"`
	BssAccountID      string             `protobuf:"bytes,4,opt,name=bssAccountID,proto3" form:"bssAccountID" json:"bssAccountID,omitempty"`
	CustomInfo        *common.CustomInfo `protobuf:"bytes,5,opt,name=customInfo,proto3" form:"customInfo" json:"customInfo,omitempty"`
}

func (x *DeleteEndpointWhitelistRequest) Reset() {
	*x = DeleteEndpointWhitelistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpce_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEndpointWhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEndpointWhitelistRequest) ProtoMessage() {}

func (x *DeleteEndpointWhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vpce_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEndpointWhitelistRequest.ProtoReflect.Descriptor instead.
func (*DeleteEndpointWhitelistRequest) Descriptor() ([]byte, []int) {
	return file_vpce_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteEndpointWhitelistRequest) GetClientToken() string {
	if x != nil {
		return x.ClientToken
	}
	return ""
}

func (x *DeleteEndpointWhitelistRequest) GetRegionID() string {
	if x != nil {
		return x.RegionID
	}
	return ""
}

func (x *DeleteEndpointWhitelistRequest) GetEndpointServiceID() string {
	if x != nil {
		return x.EndpointServiceID
	}
	return ""
}

func (x *DeleteEndpointWhitelistRequest) GetBssAccountID() string {
	if x != nil {
		return x.BssAccountID
	}
	return ""
}

func (x *DeleteEndpointWhitelistRequest) GetCustomInfo() *common.CustomInfo {
	if x != nil {
		return x.CustomInfo
	}
	return nil
}

type DeleteEndpointWhitelistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteEndpointWhitelistResponse) Reset() {
	*x = DeleteEndpointWhitelistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpce_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEndpointWhitelistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEndpointWhitelistResponse) ProtoMessage() {}

func (x *DeleteEndpointWhitelistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vpce_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEndpointWhitelistResponse.ProtoReflect.Descriptor instead.
func (*DeleteEndpointWhitelistResponse) Descriptor() ([]byte, []int) {
	return file_vpce_proto_rawDescGZIP(), []int{13}
}

type ListEndpointWhitelistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionID          string `protobuf:"bytes,1,opt,name=regionID,proto3" json:"regionID,omitempty" query:"regionID"`
	EndpointServiceID string `protobuf:"bytes,2,opt,name=endpointServiceID,proto3" json:"endpointServiceID,omitempty" query:"endpointServiceID"`
	PageNo            int64  `protobuf:"varint,3,opt,name=pageNo,proto3" json:"pageNo,omitempty" query:"pageNo"`
	PageSize          int64  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty" query:"pageSize"`
}

func (x *ListEndpointWhitelistRequest) Reset() {
	*x = ListEndpointWhitelistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpce_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEndpointWhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEndpointWhitelistRequest) ProtoMessage() {}

func (x *ListEndpointWhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vpce_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEndpointWhitelistRequest.ProtoReflect.Descriptor instead.
func (*ListEndpointWhitelistRequest) Descriptor() ([]byte, []int) {
	return file_vpce_proto_rawDescGZIP(), []int{14}
}

func (x *ListEndpointWhitelistRequest) GetRegionID() string {
	if x != nil {
		return x.RegionID
	}
	return ""
}

func (x *ListEndpointWhitelistRequest) GetEndpointServiceID() string {
	if x != nil {
		return x.EndpointServiceID
	}
	return ""
}

func (x *ListEndpointWhitelistRequest) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *ListEndpointWhitelistRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListEndpointWhitelistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*EndpointWhitelist `protobuf:"bytes,1,rep,name=data,proto3" form:"data" json:"data,omitempty" query:"data"`
}

func (x *ListEndpointWhitelistResponse) Reset() {
	*x = ListEndpointWhitelistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpce_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEndpointWhitelistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEndpointWhitelistResponse) ProtoMessage() {}

func (x *ListEndpointWhitelistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vpce_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEndpointWhitelistResponse.ProtoReflect.Descriptor instead.
func (*ListEndpointWhitelistResponse) Descriptor() ([]byte, []int) {
	return file_vpce_proto_rawDescGZIP(), []int{15}
}

func (x *ListEndpointWhitelistResponse) GetData() []*EndpointWhitelist {
	if x != nil {
		return x.Data
	}
	return nil
}

type EndpointWhitelist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndpointServiceID string `protobuf:"bytes,1,opt,name=endpointServiceID,proto3" form:"endpointServiceID" json:"endpointServiceID,omitempty" query:"endpointServiceID"`
	BssAccountID      string `protobuf:"bytes,2,opt,name=bssAccountID,proto3" form:"bssAccountID" json:"bssAccountID,omitempty" query:"bssAccountID"`
	CreatedAt         string `protobuf:"bytes,3,opt,name=createdAt,proto3" form:"createdAt" json:"createdAt,omitempty" query:"createdAt"`
	UpdatedAt         string `protobuf:"bytes,4,opt,name=updatedAt,proto3" form:"updatedAt" json:"updatedAt,omitempty" query:"updatedAt"`
}

func (x *EndpointWhitelist) Reset() {
	*x = EndpointWhitelist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpce_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointWhitelist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointWhitelist) ProtoMessage() {}

func (x *EndpointWhitelist) ProtoReflect() protoreflect.Message {
	mi := &file_vpce_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointWhitelist.ProtoReflect.Descriptor instead.
func (*EndpointWhitelist) Descriptor() ([]byte, []int) {
	return file_vpce_proto_rawDescGZIP(), []int{16}
}

func (x *EndpointWhitelist) GetEndpointServiceID() string {
	if x != nil {
		return x.EndpointServiceID
	}
	return ""
}

func (x *EndpointWhitelist) GetBssAccountID() string {
	if x != nil {
		return x.BssAccountID
	}
	return ""
}

func (x *EndpointWhitelist) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *EndpointWhitelist) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

var File_vpce_proto protoreflect.FileDescriptor

var file_vpce_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x76, 0x70, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcf, 0x05, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2b,
	0x0a, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x11, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xca, 0xbb, 0x18, 0x11, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x52, 0x11, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44,
	0x12, 0x34, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xca, 0xbb, 0x18, 0x0c, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74,
	0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x73, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x44,
	0x12, 0x1f, 0x0a, 0x05, 0x76, 0x70, 0x63, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xca, 0xbb, 0x18, 0x05, 0x76, 0x70, 0x63, 0x49, 0x44, 0x52, 0x05, 0x76, 0x70, 0x63, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xca,
	0xbb, 0x18, 0x02, 0x69, 0x70, 0x52, 0x02, 0x69, 0x70, 0x12, 0x37, 0x0a, 0x0d, 0x77, 0x68, 0x69,
	0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x11, 0xca, 0xbb, 0x18, 0x0d, 0x77, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x6c, 0x61, 0x67, 0x52, 0x0d, 0x77, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c,
	0x61, 0x67, 0x12, 0x2b, 0x0a, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x31, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x6e, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x44, 0x6e, 0x73, 0x52, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x6e, 0x73, 0x12,
	0x41, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0e, 0xca, 0xbb, 0x18, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x45, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0f, 0xca, 0xbb, 0x18,
	0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x80, 0x02, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x4f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x4f,
	0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x14, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xae, 0x02, 0x0a,
	0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xca, 0xbb, 0x18,
	0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0b, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x0a, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xca,
	0xbb, 0x18, 0x0a, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x0a, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18,
	0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0e, 0xca, 0xbb, 0x18, 0x0a,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x18, 0x0a,
	0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0e, 0xb2, 0xbb, 0x18, 0x0a, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x49, 0x44, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x34,
	0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x18, 0xb2, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0xba, 0xbb,
	0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0e, 0xba, 0xbb, 0x18,
	0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x42, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0xfa, 0x01, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xb2, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0xba, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52,
	0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x0c, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x10, 0xb2, 0xbb, 0x18, 0x0c, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x34, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xb2, 0xbb, 0x18, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0e, 0xba, 0xbb,
	0x18, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x65, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2d, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xf8, 0x02, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x11,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x70, 0x63, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x70, 0x63, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x70, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x70,
	0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x68, 0x69,
	0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x34, 0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x0b, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0xbb, 0x02, 0x0a, 0x1e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0b, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x28,
	0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x08,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x43, 0x0a, 0x11, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x15, 0xca, 0xbb, 0x18, 0x11, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x52, 0x11, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x34, 0x0a,
	0x0c, 0x62, 0x73, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x10, 0xca, 0xbb, 0x18, 0x0c, 0x62, 0x73, 0x73, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x0c, 0x62, 0x73, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0e, 0xca, 0xbb, 0x18, 0x0a,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x21, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbb, 0x02, 0x0a, 0x1e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0b,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x28, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52,
	0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x43, 0x0a, 0x11, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xca, 0xbb, 0x18, 0x11, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x52, 0x11, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x34,
	0x0a, 0x0c, 0x62, 0x73, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xca, 0xbb, 0x18, 0x0c, 0x62, 0x73, 0x73, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x0c, 0x62, 0x73, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0e, 0xca, 0xbb, 0x18,
	0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x21, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xdb, 0x01, 0x0a, 0x1c, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xb2,
	0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x08, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x43, 0x0a, 0x11, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x15, 0xb2, 0xbb, 0x18, 0x11, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x52, 0x11, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x06, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xb2, 0xbb, 0x18, 0x06,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x28,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x0c, 0xb2, 0xbb, 0x18, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4d, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa1, 0x01, 0x0a, 0x11, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a,
	0x11, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x62,
	0x73, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x62, 0x73, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x32, 0xb2, 0x07, 0x0a, 0x12,
	0x56, 0x70, 0x63, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x70, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x21, 0xd2, 0xc1, 0x18, 0x1d, 0x2f, 0x76, 0x34, 0x2f, 0x70, 0x61, 0x61, 0x73, 0x2f,
	0x76, 0x70, 0x63, 0x65, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2d, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x70, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x21, 0xe2, 0xc1, 0x18, 0x1d, 0x2f, 0x76, 0x34, 0x2f, 0x70, 0x61, 0x61,
	0x73, 0x2f, 0x76, 0x70, 0x63, 0x65, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2d, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x60, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0xca, 0xc1,
	0x18, 0x16, 0x2f, 0x76, 0x34, 0x2f, 0x76, 0x70, 0x63, 0x65, 0x2f, 0x73, 0x68, 0x6f, 0x77, 0x2d,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x67, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1e, 0xca, 0xc1, 0x18, 0x1a, 0x2f, 0x76, 0x34, 0x2f, 0x76, 0x70, 0x63, 0x65, 0x2f,
	0x6e, 0x65, 0x77, 0x2d, 0x6c, 0x69, 0x73, 0x74, 0x2d, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x98, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0xd2, 0xc1,
	0x18, 0x2a, 0x2f, 0x76, 0x34, 0x2f, 0x76, 0x70, 0x63, 0x65, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x2d, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2d, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x98, 0x01, 0x0a,
	0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0xd2, 0xc1, 0x18, 0x2a, 0x2f, 0x76, 0x34,
	0x2f, 0x76, 0x70, 0x63, 0x65, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2d, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x77, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x90, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0xd2, 0xc1,
	0x18, 0x28, 0x2f, 0x76, 0x34, 0x2f, 0x76, 0x70, 0x63, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2d,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2d, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x24, 0x92, 0xce, 0x18, 0x20,
	0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x63, 0x74, 0x2d, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x2e, 0x63, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x74, 0x79, 0x75, 0x6e, 0x2e, 0x63, 0x6e,
	0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74,
	0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x74, 0x65, 0x6c,
	0x65, 0x63, 0x6f, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x70, 0x63, 0x65, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2f, 0x76, 0x70, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vpce_proto_rawDescOnce sync.Once
	file_vpce_proto_rawDescData = file_vpce_proto_rawDesc
)

func file_vpce_proto_rawDescGZIP() []byte {
	file_vpce_proto_rawDescOnce.Do(func() {
		file_vpce_proto_rawDescData = protoimpl.X.CompressGZIP(file_vpce_proto_rawDescData)
	})
	return file_vpce_proto_rawDescData
}

var file_vpce_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_vpce_proto_goTypes = []interface{}{
	(*CreateEndpointRequest)(nil),           // 0: proto.CreateEndpointRequest
	(*CreateEndpointResponse)(nil),          // 1: proto.CreateEndpointResponse
	(*DeleteEndpointRequest)(nil),           // 2: proto.DeleteEndpointRequest
	(*DeleteEndpointResponse)(nil),          // 3: proto.DeleteEndpointResponse
	(*GetEndpointRequest)(nil),              // 4: proto.GetEndpointRequest
	(*GetEndpointResponse)(nil),             // 5: proto.GetEndpointResponse
	(*ListEndpointRequest)(nil),             // 6: proto.ListEndpointRequest
	(*ListEndpointResponse)(nil),            // 7: proto.ListEndpointResponse
	(*Endpoint)(nil),                        // 8: proto.Endpoint
	(*EndpointObj)(nil),                     // 9: proto.EndpointObj
	(*CreateEndpointWhitelistRequest)(nil),  // 10: proto.CreateEndpointWhitelistRequest
	(*CreateEndpointWhitelistResponse)(nil), // 11: proto.CreateEndpointWhitelistResponse
	(*DeleteEndpointWhitelistRequest)(nil),  // 12: proto.DeleteEndpointWhitelistRequest
	(*DeleteEndpointWhitelistResponse)(nil), // 13: proto.DeleteEndpointWhitelistResponse
	(*ListEndpointWhitelistRequest)(nil),    // 14: proto.ListEndpointWhitelistRequest
	(*ListEndpointWhitelistResponse)(nil),   // 15: proto.ListEndpointWhitelistResponse
	(*EndpointWhitelist)(nil),               // 16: proto.EndpointWhitelist
	(*common.CustomInfo)(nil),               // 17: proto.CustomInfo
	(*common.ChannelInfo)(nil),              // 18: proto.ChannelInfo
}
var file_vpce_proto_depIdxs = []int32{
	17, // 0: proto.CreateEndpointRequest.customInfo:type_name -> proto.CustomInfo
	18, // 1: proto.CreateEndpointRequest.channelInfo:type_name -> proto.ChannelInfo
	17, // 2: proto.DeleteEndpointRequest.customInfo:type_name -> proto.CustomInfo
	18, // 3: proto.DeleteEndpointRequest.channelInfo:type_name -> proto.ChannelInfo
	17, // 4: proto.GetEndpointRequest.customInfo:type_name -> proto.CustomInfo
	8,  // 5: proto.GetEndpointResponse.endpoint:type_name -> proto.Endpoint
	17, // 6: proto.ListEndpointRequest.customInfo:type_name -> proto.CustomInfo
	8,  // 7: proto.ListEndpointResponse.endpoints:type_name -> proto.Endpoint
	9,  // 8: proto.Endpoint.endpointObj:type_name -> proto.EndpointObj
	17, // 9: proto.CreateEndpointWhitelistRequest.customInfo:type_name -> proto.CustomInfo
	17, // 10: proto.DeleteEndpointWhitelistRequest.customInfo:type_name -> proto.CustomInfo
	16, // 11: proto.ListEndpointWhitelistResponse.data:type_name -> proto.EndpointWhitelist
	0,  // 12: proto.VpcEndpointService.CreateEndpoint:input_type -> proto.CreateEndpointRequest
	2,  // 13: proto.VpcEndpointService.DeleteEndpoint:input_type -> proto.DeleteEndpointRequest
	4,  // 14: proto.VpcEndpointService.GetEndpoint:input_type -> proto.GetEndpointRequest
	6,  // 15: proto.VpcEndpointService.ListEndpoint:input_type -> proto.ListEndpointRequest
	10, // 16: proto.VpcEndpointService.CreateEndpointWhitelist:input_type -> proto.CreateEndpointWhitelistRequest
	12, // 17: proto.VpcEndpointService.DeleteEndpointWhitelist:input_type -> proto.DeleteEndpointWhitelistRequest
	14, // 18: proto.VpcEndpointService.ListEndpointWhitelist:input_type -> proto.ListEndpointWhitelistRequest
	1,  // 19: proto.VpcEndpointService.CreateEndpoint:output_type -> proto.CreateEndpointResponse
	3,  // 20: proto.VpcEndpointService.DeleteEndpoint:output_type -> proto.DeleteEndpointResponse
	5,  // 21: proto.VpcEndpointService.GetEndpoint:output_type -> proto.GetEndpointResponse
	7,  // 22: proto.VpcEndpointService.ListEndpoint:output_type -> proto.ListEndpointResponse
	11, // 23: proto.VpcEndpointService.CreateEndpointWhitelist:output_type -> proto.CreateEndpointWhitelistResponse
	13, // 24: proto.VpcEndpointService.DeleteEndpointWhitelist:output_type -> proto.DeleteEndpointWhitelistResponse
	15, // 25: proto.VpcEndpointService.ListEndpointWhitelist:output_type -> proto.ListEndpointWhitelistResponse
	19, // [19:26] is the sub-list for method output_type
	12, // [12:19] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_vpce_proto_init() }
func file_vpce_proto_init() {
	if File_vpce_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vpce_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEndpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpce_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEndpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpce_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEndpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpce_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEndpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpce_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEndpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpce_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEndpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpce_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEndpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpce_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEndpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpce_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Endpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpce_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointObj); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpce_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEndpointWhitelistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpce_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEndpointWhitelistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpce_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEndpointWhitelistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpce_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEndpointWhitelistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpce_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEndpointWhitelistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpce_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEndpointWhitelistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpce_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointWhitelist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vpce_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vpce_proto_goTypes,
		DependencyIndexes: file_vpce_proto_depIdxs,
		MessageInfos:      file_vpce_proto_msgTypes,
	}.Build()
	File_vpce_proto = out.File
	file_vpce_proto_rawDesc = nil
	file_vpce_proto_goTypes = nil
	file_vpce_proto_depIdxs = nil
}
