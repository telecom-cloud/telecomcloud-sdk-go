// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v4.25.1
// source: api/common/isuite.proto

package common

import (
	_ "github.com/telecom-cloud/client-go/pkg/openapi/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VolumeType int32

const (
	// 0: EmptyDir 临时目录
	VolumeType_EmptyDir VolumeType = 0
	// 1: HostPath 宿主机目录
	VolumeType_HostPath VolumeType = 1
	// 2: PVC 持久化存储
	VolumeType_PVC VolumeType = 2
	// 3: ConfigMap 配置文件
	VolumeType_ConfigMap VolumeType = 3
	// 4: Secret 密钥
	VolumeType_Secret VolumeType = 4
)

// Enum value maps for VolumeType.
var (
	VolumeType_name = map[int32]string{
		0: "EmptyDir",
		1: "HostPath",
		2: "PVC",
		3: "ConfigMap",
		4: "Secret",
	}
	VolumeType_value = map[string]int32{
		"EmptyDir":  0,
		"HostPath":  1,
		"PVC":       2,
		"ConfigMap": 3,
		"Secret":    4,
	}
)

func (x VolumeType) Enum() *VolumeType {
	p := new(VolumeType)
	*p = x
	return p
}

func (x VolumeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VolumeType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_common_isuite_proto_enumTypes[0].Descriptor()
}

func (VolumeType) Type() protoreflect.EnumType {
	return &file_api_common_isuite_proto_enumTypes[0]
}

func (x VolumeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VolumeType.Descriptor instead.
func (VolumeType) EnumDescriptor() ([]byte, []int) {
	return file_api_common_isuite_proto_rawDescGZIP(), []int{0}
}

type JobMode int32

const (
	JobMode_Single      JobMode = 0
	JobMode_Distributed JobMode = 1
)

// Enum value maps for JobMode.
var (
	JobMode_name = map[int32]string{
		0: "Single",
		1: "Distributed",
	}
	JobMode_value = map[string]int32{
		"Single":      0,
		"Distributed": 1,
	}
)

func (x JobMode) Enum() *JobMode {
	p := new(JobMode)
	*p = x
	return p
}

func (x JobMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobMode) Descriptor() protoreflect.EnumDescriptor {
	return file_api_common_isuite_proto_enumTypes[1].Descriptor()
}

func (JobMode) Type() protoreflect.EnumType {
	return &file_api_common_isuite_proto_enumTypes[1]
}

func (x JobMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobMode.Descriptor instead.
func (JobMode) EnumDescriptor() ([]byte, []int) {
	return file_api_common_isuite_proto_rawDescGZIP(), []int{1}
}

type Effect int32

const (
	Effect_NoSchedule       Effect = 0
	Effect_PreferNoSchedule Effect = 1
	Effect_NoExecute        Effect = 2
)

// Enum value maps for Effect.
var (
	Effect_name = map[int32]string{
		0: "NoSchedule",
		1: "PreferNoSchedule",
		2: "NoExecute",
	}
	Effect_value = map[string]int32{
		"NoSchedule":       0,
		"PreferNoSchedule": 1,
		"NoExecute":        2,
	}
)

func (x Effect) Enum() *Effect {
	p := new(Effect)
	*p = x
	return p
}

func (x Effect) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Effect) Descriptor() protoreflect.EnumDescriptor {
	return file_api_common_isuite_proto_enumTypes[2].Descriptor()
}

func (Effect) Type() protoreflect.EnumType {
	return &file_api_common_isuite_proto_enumTypes[2]
}

func (x Effect) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Effect.Descriptor instead.
func (Effect) EnumDescriptor() ([]byte, []int) {
	return file_api_common_isuite_proto_rawDescGZIP(), []int{2}
}

type Order int32

const (
	Order_asc  Order = 0
	Order_desc Order = 1
)

// Enum value maps for Order.
var (
	Order_name = map[int32]string{
		0: "asc",
		1: "desc",
	}
	Order_value = map[string]int32{
		"asc":  0,
		"desc": 1,
	}
)

func (x Order) Enum() *Order {
	p := new(Order)
	*p = x
	return p
}

func (x Order) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Order) Descriptor() protoreflect.EnumDescriptor {
	return file_api_common_isuite_proto_enumTypes[3].Descriptor()
}

func (Order) Type() protoreflect.EnumType {
	return &file_api_common_isuite_proto_enumTypes[3]
}

func (x Order) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Order.Descriptor instead.
func (Order) EnumDescriptor() ([]byte, []int) {
	return file_api_common_isuite_proto_rawDescGZIP(), []int{3}
}

type Label struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" form:"key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" form:"value" json:"value,omitempty"`
}

func (x *Label) Reset() {
	*x = Label{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_isuite_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Label) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Label) ProtoMessage() {}

func (x *Label) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_isuite_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Label.ProtoReflect.Descriptor instead.
func (*Label) Descriptor() ([]byte, []int) {
	return file_api_common_isuite_proto_rawDescGZIP(), []int{0}
}

func (x *Label) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Label) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Annotation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" form:"key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" form:"value" json:"value,omitempty"`
}

func (x *Annotation) Reset() {
	*x = Annotation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_isuite_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Annotation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Annotation) ProtoMessage() {}

func (x *Annotation) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_isuite_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Annotation.ProtoReflect.Descriptor instead.
func (*Annotation) Descriptor() ([]byte, []int) {
	return file_api_common_isuite_proto_rawDescGZIP(), []int{1}
}

func (x *Annotation) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Annotation) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Env struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" form:"key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" form:"value" json:"value,omitempty"`
}

func (x *Env) Reset() {
	*x = Env{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_isuite_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Env) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Env) ProtoMessage() {}

func (x *Env) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_isuite_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Env.ProtoReflect.Descriptor instead.
func (*Env) Descriptor() ([]byte, []int) {
	return file_api_common_isuite_proto_rawDescGZIP(), []int{2}
}

func (x *Env) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Env) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Framework struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" form:"id" json:"id,omitempty"`
	Type   string `protobuf:"bytes,2,opt,name=type,proto3" form:"type" json:"type,omitempty"`
	Image  string `protobuf:"bytes,3,opt,name=image,proto3" form:"image" json:"image,omitempty"`
	Shared bool   `protobuf:"varint,4,opt,name=shared,proto3" form:"shared" json:"shared,omitempty"`
}

func (x *Framework) Reset() {
	*x = Framework{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_isuite_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Framework) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Framework) ProtoMessage() {}

func (x *Framework) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_isuite_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Framework.ProtoReflect.Descriptor instead.
func (*Framework) Descriptor() ([]byte, []int) {
	return file_api_common_isuite_proto_rawDescGZIP(), []int{3}
}

func (x *Framework) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Framework) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Framework) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Framework) GetShared() bool {
	if x != nil {
		return x.Shared
	}
	return false
}

type DatasetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" form:"id" json:"id,omitempty"`
	Version   string `protobuf:"bytes,2,opt,name=version,proto3" form:"version" json:"version,omitempty"`
	MountPath string `protobuf:"bytes,3,opt,name=mountPath,proto3" form:"mountPath" json:"mountPath,omitempty"`
}

func (x *DatasetInfo) Reset() {
	*x = DatasetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_isuite_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetInfo) ProtoMessage() {}

func (x *DatasetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_isuite_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetInfo.ProtoReflect.Descriptor instead.
func (*DatasetInfo) Descriptor() ([]byte, []int) {
	return file_api_common_isuite_proto_rawDescGZIP(), []int{4}
}

func (x *DatasetInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DatasetInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DatasetInfo) GetMountPath() string {
	if x != nil {
		return x.MountPath
	}
	return ""
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role      string     `protobuf:"bytes,1,opt,name=role,proto3" form:"role" json:"role,omitempty"`
	Replicas  int32      `protobuf:"varint,2,opt,name=replicas,proto3" form:"replicas" json:"replicas,omitempty"`
	PodConfig *PodConfig `protobuf:"bytes,3,opt,name=podConfig,proto3" form:"podConfig" json:"podConfig,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_isuite_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_isuite_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_api_common_isuite_proto_rawDescGZIP(), []int{5}
}

func (x *Metadata) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Metadata) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *Metadata) GetPodConfig() *PodConfig {
	if x != nil {
		return x.PodConfig
	}
	return nil
}

type PodConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command []string      `protobuf:"bytes,1,rep,name=command,proto3" form:"command" json:"command,omitempty"`
	Args    []string      `protobuf:"bytes,2,rep,name=args,proto3" form:"args" json:"args,omitempty"`
	Envs    []*Env        `protobuf:"bytes,3,rep,name=envs,proto3" form:"envs" json:"envs,omitempty"`
	Cpu     string        `protobuf:"bytes,4,opt,name=cpu,proto3" form:"cpu" json:"cpu,omitempty"`
	Memory  string        `protobuf:"bytes,5,opt,name=memory,proto3" form:"memory" json:"memory,omitempty"`
	Devices []*DeviceInfo `protobuf:"bytes,6,rep,name=devices,proto3" form:"devices" json:"devices,omitempty"`
	Volumes []*Volume     `protobuf:"bytes,7,rep,name=volumes,proto3" form:"volumes" json:"volumes,omitempty"`
}

func (x *PodConfig) Reset() {
	*x = PodConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_isuite_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodConfig) ProtoMessage() {}

func (x *PodConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_isuite_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodConfig.ProtoReflect.Descriptor instead.
func (*PodConfig) Descriptor() ([]byte, []int) {
	return file_api_common_isuite_proto_rawDescGZIP(), []int{6}
}

func (x *PodConfig) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *PodConfig) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *PodConfig) GetEnvs() []*Env {
	if x != nil {
		return x.Envs
	}
	return nil
}

func (x *PodConfig) GetCpu() string {
	if x != nil {
		return x.Cpu
	}
	return ""
}

func (x *PodConfig) GetMemory() string {
	if x != nil {
		return x.Memory
	}
	return ""
}

func (x *PodConfig) GetDevices() []*DeviceInfo {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *PodConfig) GetVolumes() []*Volume {
	if x != nil {
		return x.Volumes
	}
	return nil
}

type DeviceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceName string `protobuf:"bytes,1,opt,name=resourceName,proto3" form:"resourceName" json:"resourceName,omitempty"`
	Quantity     string `protobuf:"bytes,2,opt,name=quantity,proto3" form:"quantity" json:"quantity,omitempty"`
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_isuite_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_isuite_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_api_common_isuite_proto_rawDescGZIP(), []int{7}
}

func (x *DeviceInfo) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *DeviceInfo) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

type Volume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string     `protobuf:"bytes,1,opt,name=name,proto3" form:"name" json:"name,omitempty"`
	MountPath     string     `protobuf:"bytes,2,opt,name=mountPath,proto3" form:"mountPath" json:"mountPath,omitempty"`
	Type          VolumeType `protobuf:"varint,3,opt,name=type,proto3,enum=proto.VolumeType" form:"type" json:"type,omitempty"`
	SizeLimit     string     `protobuf:"bytes,4,opt,name=sizeLimit,proto3" form:"sizeLimit" json:"sizeLimit,omitempty"`
	Medium        string     `protobuf:"bytes,5,opt,name=medium,proto3" form:"medium" json:"medium,omitempty"`
	ClaimName     string     `protobuf:"bytes,6,opt,name=claimName,proto3" form:"claimName" json:"claimName,omitempty"`
	ConfigMapName string     `protobuf:"bytes,7,opt,name=configMapName,proto3" form:"configMapName" json:"configMapName,omitempty"`
	SecretName    string     `protobuf:"bytes,8,opt,name=secretName,proto3" form:"secretName" json:"secretName,omitempty"`
}

func (x *Volume) Reset() {
	*x = Volume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_isuite_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Volume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volume) ProtoMessage() {}

func (x *Volume) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_isuite_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volume.ProtoReflect.Descriptor instead.
func (*Volume) Descriptor() ([]byte, []int) {
	return file_api_common_isuite_proto_rawDescGZIP(), []int{8}
}

func (x *Volume) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Volume) GetMountPath() string {
	if x != nil {
		return x.MountPath
	}
	return ""
}

func (x *Volume) GetType() VolumeType {
	if x != nil {
		return x.Type
	}
	return VolumeType_EmptyDir
}

func (x *Volume) GetSizeLimit() string {
	if x != nil {
		return x.SizeLimit
	}
	return ""
}

func (x *Volume) GetMedium() string {
	if x != nil {
		return x.Medium
	}
	return ""
}

func (x *Volume) GetClaimName() string {
	if x != nil {
		return x.ClaimName
	}
	return ""
}

func (x *Volume) GetConfigMapName() string {
	if x != nil {
		return x.ConfigMapName
	}
	return ""
}

func (x *Volume) GetSecretName() string {
	if x != nil {
		return x.SecretName
	}
	return ""
}

type Taint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" form:"key" json:"key,omitempty"`
	Value  string `protobuf:"bytes,2,opt,name=value,proto3" form:"value" json:"value,omitempty"`
	Effect Effect `protobuf:"varint,3,opt,name=effect,proto3,enum=proto.Effect" form:"effect" json:"effect,omitempty"`
}

func (x *Taint) Reset() {
	*x = Taint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_isuite_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Taint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Taint) ProtoMessage() {}

func (x *Taint) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_isuite_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Taint.ProtoReflect.Descriptor instead.
func (*Taint) Descriptor() ([]byte, []int) {
	return file_api_common_isuite_proto_rawDescGZIP(), []int{9}
}

func (x *Taint) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Taint) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Taint) GetEffect() Effect {
	if x != nil {
		return x.Effect
	}
	return Effect_NoSchedule
}

type Toleration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key               string `protobuf:"bytes,1,opt,name=key,proto3" form:"key" json:"key,omitempty"`
	Operator          string `protobuf:"bytes,2,opt,name=operator,proto3" form:"operator" json:"operator,omitempty"`
	Value             string `protobuf:"bytes,3,opt,name=value,proto3" form:"value" json:"value,omitempty"`
	Effect            string `protobuf:"bytes,4,opt,name=effect,proto3" form:"effect" json:"effect,omitempty"`
	TolerationSeconds int32  `protobuf:"varint,5,opt,name=tolerationSeconds,proto3" form:"tolerationSeconds" json:"tolerationSeconds,omitempty"`
}

func (x *Toleration) Reset() {
	*x = Toleration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_isuite_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Toleration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Toleration) ProtoMessage() {}

func (x *Toleration) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_isuite_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Toleration.ProtoReflect.Descriptor instead.
func (*Toleration) Descriptor() ([]byte, []int) {
	return file_api_common_isuite_proto_rawDescGZIP(), []int{10}
}

func (x *Toleration) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Toleration) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *Toleration) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Toleration) GetEffect() string {
	if x != nil {
		return x.Effect
	}
	return ""
}

func (x *Toleration) GetTolerationSeconds() int32 {
	if x != nil {
		return x.TolerationSeconds
	}
	return 0
}

type JobPod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role   string `protobuf:"bytes,1,opt,name=role,proto3" form:"role" json:"role,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" form:"name" json:"name,omitempty"`
	Uid    string `protobuf:"bytes,3,opt,name=uid,proto3" form:"uid" json:"uid,omitempty"`
	Status string `protobuf:"bytes,4,opt,name=status,proto3" form:"status" json:"status,omitempty"`
	Ip     string `protobuf:"bytes,5,opt,name=ip,proto3" form:"ip" json:"ip,omitempty"`
}

func (x *JobPod) Reset() {
	*x = JobPod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_isuite_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobPod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobPod) ProtoMessage() {}

func (x *JobPod) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_isuite_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobPod.ProtoReflect.Descriptor instead.
func (*JobPod) Descriptor() ([]byte, []int) {
	return file_api_common_isuite_proto_rawDescGZIP(), []int{11}
}

func (x *JobPod) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *JobPod) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobPod) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *JobPod) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *JobPod) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count     int32  `protobuf:"varint,1,opt,name=Count,proto3" form:"Count" json:"Count,omitempty" query:"Count"`
	Type      string `protobuf:"bytes,2,opt,name=Type,proto3" form:"Type" json:"Type,omitempty" query:"Type"`
	Kind      string `protobuf:"bytes,3,opt,name=Kind,proto3" form:"Kind" json:"Kind,omitempty" query:"Kind"`
	Name      string `protobuf:"bytes,4,opt,name=Name,proto3" form:"Name" json:"Name,omitempty" query:"Name"`
	Namespace string `protobuf:"bytes,5,opt,name=Namespace,proto3" form:"Namespace" json:"Namespace,omitempty" query:"Namespace"`
	Reason    string `protobuf:"bytes,6,opt,name=Reason,proto3" form:"Reason" json:"Reason,omitempty" query:"Reason"`
	Message   string `protobuf:"bytes,7,opt,name=Message,proto3" form:"Message" json:"Message,omitempty" query:"Message"`
	FirstTime string `protobuf:"bytes,8,opt,name=FirstTime,proto3" form:"FirstTime" json:"FirstTime,omitempty" query:"FirstTime"`
	LastTime  string `protobuf:"bytes,9,opt,name=LastTime,proto3" form:"LastTime" json:"LastTime,omitempty" query:"LastTime"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_isuite_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_isuite_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_api_common_isuite_proto_rawDescGZIP(), []int{12}
}

func (x *Event) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Event) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Event) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Event) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Event) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Event) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Event) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Event) GetFirstTime() string {
	if x != nil {
		return x.FirstTime
	}
	return ""
}

func (x *Event) GetLastTime() string {
	if x != nil {
		return x.LastTime
	}
	return ""
}

type JobSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogProject          string             `protobuf:"bytes,1,opt,name=logProject,proto3" form:"logProject" json:"logProject,omitempty"`
	LogUnit             string             `protobuf:"bytes,2,opt,name=logUnit,proto3" form:"logUnit" json:"logUnit,omitempty"`
	LogRule             string             `protobuf:"bytes,3,opt,name=logRule,proto3" form:"logRule" json:"logRule,omitempty"`
	LogPath             string             `protobuf:"bytes,4,opt,name=logPath,proto3" form:"logPath" json:"logPath,omitempty"`
	MetricsNamespace    string             `protobuf:"bytes,5,opt,name=metricsNamespace,proto3" form:"metricsNamespace" json:"metricsNamespace,omitempty"`
	MetricsPodLabels    map[string]string  `protobuf:"bytes,6,rep,name=metricsPodLabels,proto3" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" form:"metricsPodLabels" json:"metricsPodLabels,omitempty"`
	MetricsPodEndpoints []*MetricsEndpoint `protobuf:"bytes,7,rep,name=metricsPodEndpoints,proto3" form:"metricsPodEndpoints" json:"metricsPodEndpoints,omitempty"`
}

func (x *JobSettings) Reset() {
	*x = JobSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_isuite_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSettings) ProtoMessage() {}

func (x *JobSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_isuite_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSettings.ProtoReflect.Descriptor instead.
func (*JobSettings) Descriptor() ([]byte, []int) {
	return file_api_common_isuite_proto_rawDescGZIP(), []int{13}
}

func (x *JobSettings) GetLogProject() string {
	if x != nil {
		return x.LogProject
	}
	return ""
}

func (x *JobSettings) GetLogUnit() string {
	if x != nil {
		return x.LogUnit
	}
	return ""
}

func (x *JobSettings) GetLogRule() string {
	if x != nil {
		return x.LogRule
	}
	return ""
}

func (x *JobSettings) GetLogPath() string {
	if x != nil {
		return x.LogPath
	}
	return ""
}

func (x *JobSettings) GetMetricsNamespace() string {
	if x != nil {
		return x.MetricsNamespace
	}
	return ""
}

func (x *JobSettings) GetMetricsPodLabels() map[string]string {
	if x != nil {
		return x.MetricsPodLabels
	}
	return nil
}

func (x *JobSettings) GetMetricsPodEndpoints() []*MetricsEndpoint {
	if x != nil {
		return x.MetricsPodEndpoints
	}
	return nil
}

type MetricsEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interval string `protobuf:"bytes,1,opt,name=interval,proto3" form:"interval" json:"interval,omitempty"`
	Path     string `protobuf:"bytes,2,opt,name=path,proto3" form:"path" json:"path,omitempty"`
	Port     int32  `protobuf:"varint,3,opt,name=port,proto3" form:"port" json:"port,omitempty"`
}

func (x *MetricsEndpoint) Reset() {
	*x = MetricsEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_isuite_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricsEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsEndpoint) ProtoMessage() {}

func (x *MetricsEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_isuite_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsEndpoint.ProtoReflect.Descriptor instead.
func (*MetricsEndpoint) Descriptor() ([]byte, []int) {
	return file_api_common_isuite_proto_rawDescGZIP(), []int{14}
}

func (x *MetricsEndpoint) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *MetricsEndpoint) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MetricsEndpoint) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type Dashboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" form:"name" json:"name,omitempty" query:"name"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" form:"title" json:"title,omitempty" query:"title"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" form:"description" json:"description,omitempty" query:"description"`
	Url         string `protobuf:"bytes,4,opt,name=url,proto3" form:"url" json:"url,omitempty" query:"url"`
	Uid         string `protobuf:"bytes,5,opt,name=uid,proto3" form:"uid" json:"uid,omitempty" query:"uid"`
	Version     string `protobuf:"bytes,6,opt,name=version,proto3" form:"version" json:"version,omitempty" query:"version"`
}

func (x *Dashboard) Reset() {
	*x = Dashboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_isuite_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dashboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dashboard) ProtoMessage() {}

func (x *Dashboard) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_isuite_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dashboard.ProtoReflect.Descriptor instead.
func (*Dashboard) Descriptor() ([]byte, []int) {
	return file_api_common_isuite_proto_rawDescGZIP(), []int{15}
}

func (x *Dashboard) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Dashboard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Dashboard) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Dashboard) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Dashboard) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Dashboard) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_api_common_isuite_proto protoreflect.FileDescriptor

var file_api_common_isuite_proto_rawDesc = []byte{
	0x0a, 0x17, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x69, 0x73, 0x75,
	0x69, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x43, 0x0a, 0x05, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x6b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xca, 0xbb, 0x18, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x48, 0x0a, 0x0a, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xca, 0xbb, 0x18,
	0x03, 0x6b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xbb, 0x18, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x41, 0x0a, 0x03, 0x45, 0x6e,
	0x76, 0x12, 0x19, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xca, 0xbb, 0x18, 0x03, 0x6b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xbb, 0x18,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x86, 0x01,
	0x0a, 0x09, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xca, 0xbb, 0x18, 0x02, 0x69, 0x64, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xca, 0xbb, 0x18, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x52, 0x06,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x22, 0x79, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x06, 0xca, 0xbb, 0x18, 0x02, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b,
	0xca, 0xbb, 0x18, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x09, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x09, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x22, 0x91, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xbb,
	0x18, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x08,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0c,
	0xca, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x52, 0x08, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x3d, 0x0a, 0x09, 0x70, 0x6f, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x0d, 0xca, 0xbb, 0x18,
	0x09, 0x70, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x70, 0x6f, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xa9, 0x02, 0x0a, 0x09, 0x50, 0x6f, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x25, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x61, 0x72,
	0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x61, 0x72,
	0x67, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x65, 0x6e, 0x76, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x6e, 0x76, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x65, 0x6e, 0x76, 0x73, 0x52, 0x04, 0x65, 0x6e,
	0x76, 0x73, 0x12, 0x19, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xca, 0xbb, 0x18, 0x03, 0x63, 0x70, 0x75, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x22, 0x0a,
	0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca,
	0xbb, 0x18, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x12, 0x38, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x42, 0x0b, 0xca, 0xbb, 0x18,
	0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x73, 0x22, 0x6c, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x34, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xca, 0xbb, 0x18, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22,
	0xeb, 0x02, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18,
	0x09, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x09, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x73,
	0x69, 0x7a, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x52,
	0x06, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xca, 0xbb, 0x18,
	0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0d,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a,
	0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0e, 0xca, 0xbb, 0x18, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x76, 0x0a,
	0x05, 0x54, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x6b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xca, 0xbb, 0x18, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x06, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x22, 0xdb, 0x01, 0x0a, 0x0a, 0x54, 0x6f, 0x6c, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x6b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x28, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xbb, 0x18, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x43,
	0x0a, 0x11, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x15, 0xca, 0xbb, 0x18, 0x11, 0x74,
	0x6f, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x52, 0x11, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x06, 0x4a, 0x6f, 0x62, 0x50, 0x6f, 0x64, 0x12, 0x1c,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xbb,
	0x18, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x75, 0x69, 0x64,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xca, 0xbb, 0x18, 0x02, 0x69, 0x70, 0x52, 0x02, 0x69,
	0x70, 0x22, 0xe3, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c,
	0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c,
	0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x88, 0x04, 0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2e, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xca, 0xbb, 0x18,
	0x0a, 0x6c, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0a, 0x6c, 0x6f, 0x67,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x55, 0x6e,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x6c, 0x6f,
	0x67, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x25,
	0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0b, 0xca, 0xbb, 0x18, 0x07, 0x6c, 0x6f, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x07, 0x6c, 0x6f,
	0x67, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x6c, 0x6f, 0x67, 0x50,
	0x61, 0x74, 0x68, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x50, 0x61, 0x74, 0x68, 0x12, 0x40, 0x0a, 0x10,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xca, 0xbb, 0x18, 0x10, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x10, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x6a,
	0x0a, 0x10, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x50, 0x6f, 0x64, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x50, 0x6f, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x42, 0x14, 0xca, 0xbb, 0x18, 0x10, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x50,
	0x6f, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x10, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x50, 0x6f, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x61, 0x0a, 0x13, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x50, 0x6f, 0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x42,
	0x17, 0xca, 0xbb, 0x18, 0x13, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x50, 0x6f, 0x64, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x13, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x50, 0x6f, 0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x1a, 0x43, 0x0a,
	0x15, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x50, 0x6f, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x77, 0x0a, 0x0f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12,
	0x1c, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca,
	0xbb, 0x18, 0x04, 0x70, 0x61, 0x74, 0x68, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xca, 0xbb, 0x18,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x95, 0x01, 0x0a, 0x09,
	0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x2a, 0x4c, 0x0a, 0x0a, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x69, 0x72, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x10, 0x01, 0x12, 0x07, 0x0a,
	0x03, 0x50, 0x56, 0x43, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4d, 0x61, 0x70, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x10,
	0x04, 0x2a, 0x26, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0a, 0x0a, 0x06,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x10, 0x01, 0x2a, 0x3d, 0x0a, 0x06, 0x45, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x6f, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x4e, 0x6f, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x6f, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x10, 0x02, 0x2a, 0x1a, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x07, 0x0a, 0x03, 0x61, 0x73, 0x63, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x10, 0x01, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x74, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x73, 0x64,
	0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x69, 0x73, 0x75,
	0x69, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_common_isuite_proto_rawDescOnce sync.Once
	file_api_common_isuite_proto_rawDescData = file_api_common_isuite_proto_rawDesc
)

func file_api_common_isuite_proto_rawDescGZIP() []byte {
	file_api_common_isuite_proto_rawDescOnce.Do(func() {
		file_api_common_isuite_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_common_isuite_proto_rawDescData)
	})
	return file_api_common_isuite_proto_rawDescData
}

var file_api_common_isuite_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_api_common_isuite_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_api_common_isuite_proto_goTypes = []interface{}{
	(VolumeType)(0),         // 0: proto.VolumeType
	(JobMode)(0),            // 1: proto.JobMode
	(Effect)(0),             // 2: proto.Effect
	(Order)(0),              // 3: proto.Order
	(*Label)(nil),           // 4: proto.Label
	(*Annotation)(nil),      // 5: proto.Annotation
	(*Env)(nil),             // 6: proto.Env
	(*Framework)(nil),       // 7: proto.Framework
	(*DatasetInfo)(nil),     // 8: proto.DatasetInfo
	(*Metadata)(nil),        // 9: proto.Metadata
	(*PodConfig)(nil),       // 10: proto.PodConfig
	(*DeviceInfo)(nil),      // 11: proto.DeviceInfo
	(*Volume)(nil),          // 12: proto.Volume
	(*Taint)(nil),           // 13: proto.Taint
	(*Toleration)(nil),      // 14: proto.Toleration
	(*JobPod)(nil),          // 15: proto.JobPod
	(*Event)(nil),           // 16: proto.Event
	(*JobSettings)(nil),     // 17: proto.JobSettings
	(*MetricsEndpoint)(nil), // 18: proto.metricsEndpoint
	(*Dashboard)(nil),       // 19: proto.Dashboard
	nil,                     // 20: proto.JobSettings.MetricsPodLabelsEntry
}
var file_api_common_isuite_proto_depIdxs = []int32{
	10, // 0: proto.Metadata.podConfig:type_name -> proto.PodConfig
	6,  // 1: proto.PodConfig.envs:type_name -> proto.Env
	11, // 2: proto.PodConfig.devices:type_name -> proto.DeviceInfo
	12, // 3: proto.PodConfig.volumes:type_name -> proto.Volume
	0,  // 4: proto.Volume.type:type_name -> proto.VolumeType
	2,  // 5: proto.Taint.effect:type_name -> proto.Effect
	20, // 6: proto.JobSettings.metricsPodLabels:type_name -> proto.JobSettings.MetricsPodLabelsEntry
	18, // 7: proto.JobSettings.metricsPodEndpoints:type_name -> proto.metricsEndpoint
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_common_isuite_proto_init() }
func file_api_common_isuite_proto_init() {
	if File_api_common_isuite_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_common_isuite_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Label); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_isuite_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Annotation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_isuite_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Env); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_isuite_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Framework); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_isuite_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_isuite_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_isuite_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_isuite_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_isuite_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Volume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_isuite_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Taint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_isuite_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Toleration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_isuite_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobPod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_isuite_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_isuite_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_isuite_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricsEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_isuite_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dashboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_common_isuite_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_common_isuite_proto_goTypes,
		DependencyIndexes: file_api_common_isuite_proto_depIdxs,
		EnumInfos:         file_api_common_isuite_proto_enumTypes,
		MessageInfos:      file_api_common_isuite_proto_msgTypes,
	}.Build()
	File_api_common_isuite_proto = out.File
	file_api_common_isuite_proto_rawDesc = nil
	file_api_common_isuite_proto_goTypes = nil
	file_api_common_isuite_proto_depIdxs = nil
}
