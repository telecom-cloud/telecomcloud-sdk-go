// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v4.25.1
// source: api/common/apm.proto

package apm

import (
	_ "github.com/telecom-cloud/client-go/pkg/openapi/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateDashboardTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddonType    string `protobuf:"bytes,1,opt,name=addonType,proto3" form:"addonType" json:"addonType,omitempty"`
	Version      string `protobuf:"bytes,2,opt,name=version,proto3" form:"version" json:"version,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=name,proto3" form:"name" json:"name,omitempty"`
	Title        string `protobuf:"bytes,4,opt,name=title,proto3" form:"title" json:"title,omitempty"`
	Description  string `protobuf:"bytes,5,opt,name=description,proto3" form:"description" json:"description,omitempty"`
	DataTemplate string `protobuf:"bytes,6,opt,name=dataTemplate,proto3" form:"dataTemplate" json:"dataTemplate,omitempty"`
}

func (x *CreateDashboardTemplateRequest) Reset() {
	*x = CreateDashboardTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDashboardTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDashboardTemplateRequest) ProtoMessage() {}

func (x *CreateDashboardTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDashboardTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateDashboardTemplateRequest) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{0}
}

func (x *CreateDashboardTemplateRequest) GetAddonType() string {
	if x != nil {
		return x.AddonType
	}
	return ""
}

func (x *CreateDashboardTemplateRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CreateDashboardTemplateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDashboardTemplateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateDashboardTemplateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateDashboardTemplateRequest) GetDataTemplate() string {
	if x != nil {
		return x.DataTemplate
	}
	return ""
}

type CreateDashboardTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateDashboardTemplateResponse) Reset() {
	*x = CreateDashboardTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDashboardTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDashboardTemplateResponse) ProtoMessage() {}

func (x *CreateDashboardTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDashboardTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreateDashboardTemplateResponse) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{1}
}

type ListDashboardTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddonType string `protobuf:"bytes,1,opt,name=addonType,proto3" json:"addonType,omitempty" query:"addonType"`
}

func (x *ListDashboardTemplateRequest) Reset() {
	*x = ListDashboardTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDashboardTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDashboardTemplateRequest) ProtoMessage() {}

func (x *ListDashboardTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDashboardTemplateRequest.ProtoReflect.Descriptor instead.
func (*ListDashboardTemplateRequest) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{2}
}

func (x *ListDashboardTemplateRequest) GetAddonType() string {
	if x != nil {
		return x.AddonType
	}
	return ""
}

type DashboardTemplateItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version     string `protobuf:"bytes,1,opt,name=version,proto3" form:"version" json:"version,omitempty" query:"version"`
	AddonType   string `protobuf:"bytes,2,opt,name=addonType,proto3" form:"addonType" json:"addonType,omitempty" query:"addonType"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" form:"name" json:"name,omitempty" query:"name"`
	Title       string `protobuf:"bytes,4,opt,name=title,proto3" form:"title" json:"title,omitempty" query:"title"`
	Description string `protobuf:"bytes,5,opt,name=description,proto3" form:"description" json:"description,omitempty" query:"description"`
	Status      int32  `protobuf:"varint,6,opt,name=status,proto3" form:"status" json:"status,omitempty" query:"status"`
	Id          int32  `protobuf:"varint,7,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`
}

func (x *DashboardTemplateItem) Reset() {
	*x = DashboardTemplateItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashboardTemplateItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardTemplateItem) ProtoMessage() {}

func (x *DashboardTemplateItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardTemplateItem.ProtoReflect.Descriptor instead.
func (*DashboardTemplateItem) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{3}
}

func (x *DashboardTemplateItem) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DashboardTemplateItem) GetAddonType() string {
	if x != nil {
		return x.AddonType
	}
	return ""
}

func (x *DashboardTemplateItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DashboardTemplateItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DashboardTemplateItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DashboardTemplateItem) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DashboardTemplateItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListDashboardTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*DashboardTemplateItem `protobuf:"bytes,1,rep,name=items,proto3" form:"items" json:"items,omitempty" query:"items"`
}

func (x *ListDashboardTemplateResponse) Reset() {
	*x = ListDashboardTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDashboardTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDashboardTemplateResponse) ProtoMessage() {}

func (x *ListDashboardTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDashboardTemplateResponse.ProtoReflect.Descriptor instead.
func (*ListDashboardTemplateResponse) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{4}
}

func (x *ListDashboardTemplateResponse) GetItems() []*DashboardTemplateItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetDashboardTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddonType string `protobuf:"bytes,1,opt,name=addonType,proto3" json:"addonType,omitempty" query:"addonType"`
	Version   string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty" query:"version"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" query:"name"`
	Id        int32  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty" query:"id"`
}

func (x *GetDashboardTemplateRequest) Reset() {
	*x = GetDashboardTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDashboardTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashboardTemplateRequest) ProtoMessage() {}

func (x *GetDashboardTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashboardTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetDashboardTemplateRequest) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{5}
}

func (x *GetDashboardTemplateRequest) GetAddonType() string {
	if x != nil {
		return x.AddonType
	}
	return ""
}

func (x *GetDashboardTemplateRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetDashboardTemplateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDashboardTemplateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetDashboardTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version      string `protobuf:"bytes,1,opt,name=version,proto3" form:"version" json:"version,omitempty" query:"version"`
	AddonType    string `protobuf:"bytes,2,opt,name=addonType,proto3" form:"addonType" json:"addonType,omitempty" query:"addonType"`
	Name         string `protobuf:"bytes,3,opt,name=name,proto3" form:"name" json:"name,omitempty" query:"name"`
	Title        string `protobuf:"bytes,4,opt,name=title,proto3" form:"title" json:"title,omitempty" query:"title"`
	Description  string `protobuf:"bytes,5,opt,name=description,proto3" form:"description" json:"description,omitempty" query:"description"`
	Status       int32  `protobuf:"varint,6,opt,name=status,proto3" form:"status" json:"status,omitempty" query:"status"`
	Id           int32  `protobuf:"varint,7,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`
	DataTemplate string `protobuf:"bytes,8,opt,name=dataTemplate,proto3" form:"dataTemplate" json:"dataTemplate,omitempty" query:"dataTemplate"`
}

func (x *GetDashboardTemplateResponse) Reset() {
	*x = GetDashboardTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDashboardTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashboardTemplateResponse) ProtoMessage() {}

func (x *GetDashboardTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashboardTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetDashboardTemplateResponse) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{6}
}

func (x *GetDashboardTemplateResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetDashboardTemplateResponse) GetAddonType() string {
	if x != nil {
		return x.AddonType
	}
	return ""
}

func (x *GetDashboardTemplateResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDashboardTemplateResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetDashboardTemplateResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetDashboardTemplateResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetDashboardTemplateResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetDashboardTemplateResponse) GetDataTemplate() string {
	if x != nil {
		return x.DataTemplate
	}
	return ""
}

type UpdateDashboardTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version      string `protobuf:"bytes,1,opt,name=version,proto3" form:"version" json:"version,omitempty"`
	AddonType    string `protobuf:"bytes,2,opt,name=addonType,proto3" form:"addonType" json:"addonType,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=name,proto3" form:"name" json:"name,omitempty"`
	Id           string `protobuf:"bytes,4,opt,name=id,proto3" form:"id" json:"id,omitempty"`
	Title        string `protobuf:"bytes,5,opt,name=title,proto3" form:"title" json:"title,omitempty"`
	Description  string `protobuf:"bytes,6,opt,name=description,proto3" form:"description" json:"description,omitempty"`
	DataTempalte string `protobuf:"bytes,7,opt,name=dataTempalte,proto3" form:"dataTempalte" json:"dataTempalte,omitempty"`
}

func (x *UpdateDashboardTemplateRequest) Reset() {
	*x = UpdateDashboardTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDashboardTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDashboardTemplateRequest) ProtoMessage() {}

func (x *UpdateDashboardTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDashboardTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdateDashboardTemplateRequest) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateDashboardTemplateRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UpdateDashboardTemplateRequest) GetAddonType() string {
	if x != nil {
		return x.AddonType
	}
	return ""
}

func (x *UpdateDashboardTemplateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateDashboardTemplateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDashboardTemplateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateDashboardTemplateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateDashboardTemplateRequest) GetDataTempalte() string {
	if x != nil {
		return x.DataTempalte
	}
	return ""
}

type UpdateDashboardTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateDashboardTemplateResponse) Reset() {
	*x = UpdateDashboardTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDashboardTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDashboardTemplateResponse) ProtoMessage() {}

func (x *UpdateDashboardTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDashboardTemplateResponse.ProtoReflect.Descriptor instead.
func (*UpdateDashboardTemplateResponse) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{8}
}

type CreateDashboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId   string `protobuf:"bytes,1,opt,name=instanceId,proto3" form:"instanceId" json:"instanceId,omitempty"`
	InstanceName string `protobuf:"bytes,2,opt,name=instanceName,proto3" form:"instanceName" json:"instanceName,omitempty"`
	RegionId     string `protobuf:"bytes,3,opt,name=regionId,proto3" form:"regionId" json:"regionId,omitempty"`
	Type         string `protobuf:"bytes,4,opt,name=type,proto3" form:"type" json:"type,omitempty"`
}

func (x *CreateDashboardRequest) Reset() {
	*x = CreateDashboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDashboardRequest) ProtoMessage() {}

func (x *CreateDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDashboardRequest.ProtoReflect.Descriptor instead.
func (*CreateDashboardRequest) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{9}
}

func (x *CreateDashboardRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *CreateDashboardRequest) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *CreateDashboardRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *CreateDashboardRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type DashboardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" form:"name" json:"name,omitempty" query:"name"`
	ClusterName string `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName,proto3" form:"cluster_name" json:"cluster_name,omitempty" query:"cluster_name"`
	Desc        string `protobuf:"bytes,3,opt,name=desc,proto3" form:"desc" json:"desc,omitempty" query:"desc"`
	Url         string `protobuf:"bytes,4,opt,name=url,proto3" form:"url" json:"url,omitempty" query:"url"`
	Uid         string `protobuf:"bytes,5,opt,name=uid,proto3" form:"uid" json:"uid,omitempty" query:"uid"`
}

func (x *DashboardItem) Reset() {
	*x = DashboardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashboardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardItem) ProtoMessage() {}

func (x *DashboardItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardItem.ProtoReflect.Descriptor instead.
func (*DashboardItem) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{10}
}

func (x *DashboardItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DashboardItem) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *DashboardItem) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *DashboardItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DashboardItem) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type CreateDashboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*DashboardItem `protobuf:"bytes,1,rep,name=items,proto3" form:"items" json:"items,omitempty" query:"items"`
}

func (x *CreateDashboardResponse) Reset() {
	*x = CreateDashboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDashboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDashboardResponse) ProtoMessage() {}

func (x *CreateDashboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDashboardResponse.ProtoReflect.Descriptor instead.
func (*CreateDashboardResponse) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{11}
}

func (x *CreateDashboardResponse) GetItems() []*DashboardItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type DeleteDashboardTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   string `protobuf:"bytes,1,opt,name=version,proto3" form:"version" json:"version,omitempty"`
	AddonType string `protobuf:"bytes,2,opt,name=addonType,proto3" form:"addonType" json:"addonType,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" form:"name" json:"name,omitempty"`
}

func (x *DeleteDashboardTemplateRequest) Reset() {
	*x = DeleteDashboardTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDashboardTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDashboardTemplateRequest) ProtoMessage() {}

func (x *DeleteDashboardTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDashboardTemplateRequest.ProtoReflect.Descriptor instead.
func (*DeleteDashboardTemplateRequest) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteDashboardTemplateRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DeleteDashboardTemplateRequest) GetAddonType() string {
	if x != nil {
		return x.AddonType
	}
	return ""
}

func (x *DeleteDashboardTemplateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteDashboardTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteDashboardTemplateResponse) Reset() {
	*x = DeleteDashboardTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDashboardTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDashboardTemplateResponse) ProtoMessage() {}

func (x *DeleteDashboardTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDashboardTemplateResponse.ProtoReflect.Descriptor instead.
func (*DeleteDashboardTemplateResponse) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{13}
}

type QueryArmsMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start      string `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty" query:"start"`
	End        string `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty" query:"end"`
	Step       string `protobuf:"bytes,3,opt,name=step,proto3" json:"step,omitempty" query:"step"`
	Query      string `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty" query:"query"`
	RegionCode string `protobuf:"bytes,5,opt,name=regionCode,proto3" json:"regionCode,omitempty" query:"regionCode"`
}

func (x *QueryArmsMetricsRequest) Reset() {
	*x = QueryArmsMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryArmsMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryArmsMetricsRequest) ProtoMessage() {}

func (x *QueryArmsMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryArmsMetricsRequest.ProtoReflect.Descriptor instead.
func (*QueryArmsMetricsRequest) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{14}
}

func (x *QueryArmsMetricsRequest) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *QueryArmsMetricsRequest) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *QueryArmsMetricsRequest) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *QueryArmsMetricsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *QueryArmsMetricsRequest) GetRegionCode() string {
	if x != nil {
		return x.RegionCode
	}
	return ""
}

type QueryArmsMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResultType string                        `protobuf:"bytes,1,opt,name=resultType,proto3" form:"resultType" json:"resultType,omitempty" query:"resultType"`
	Result     []*QueryArmsMetricsDataValues `protobuf:"bytes,2,rep,name=result,proto3" form:"result" json:"result,omitempty" query:"result"`
}

func (x *QueryArmsMetricsResponse) Reset() {
	*x = QueryArmsMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryArmsMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryArmsMetricsResponse) ProtoMessage() {}

func (x *QueryArmsMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryArmsMetricsResponse.ProtoReflect.Descriptor instead.
func (*QueryArmsMetricsResponse) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{15}
}

func (x *QueryArmsMetricsResponse) GetResultType() string {
	if x != nil {
		return x.ResultType
	}
	return ""
}

func (x *QueryArmsMetricsResponse) GetResult() []*QueryArmsMetricsDataValues {
	if x != nil {
		return x.Result
	}
	return nil
}

type QueryArmsMetricsDataValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metric map[string]string     `protobuf:"bytes,1,rep,name=metric,proto3" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" form:"metric" json:"metric,omitempty" query:"metric"`
	Values []*structpb.ListValue `protobuf:"bytes,2,rep,name=values,proto3" form:"values" json:"values,omitempty" query:"values"`
}

func (x *QueryArmsMetricsDataValues) Reset() {
	*x = QueryArmsMetricsDataValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryArmsMetricsDataValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryArmsMetricsDataValues) ProtoMessage() {}

func (x *QueryArmsMetricsDataValues) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryArmsMetricsDataValues.ProtoReflect.Descriptor instead.
func (*QueryArmsMetricsDataValues) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{16}
}

func (x *QueryArmsMetricsDataValues) GetMetric() map[string]string {
	if x != nil {
		return x.Metric
	}
	return nil
}

func (x *QueryArmsMetricsDataValues) GetValues() []*structpb.ListValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type GetPrometheusInstanceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvType    string `protobuf:"bytes,1,opt,name=envType,proto3" form:"envType" json:"envType,omitempty"`
	RegionCode string `protobuf:"bytes,2,opt,name=regionCode,proto3" json:"regionCode,omitempty" query:"regionCode"`
	TenantId   string `protobuf:"bytes,3,opt,name=tenantId,proto3" header:"tenantId" json:"tenantId,omitempty"`
}

func (x *GetPrometheusInstanceListRequest) Reset() {
	*x = GetPrometheusInstanceListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrometheusInstanceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrometheusInstanceListRequest) ProtoMessage() {}

func (x *GetPrometheusInstanceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrometheusInstanceListRequest.ProtoReflect.Descriptor instead.
func (*GetPrometheusInstanceListRequest) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{17}
}

func (x *GetPrometheusInstanceListRequest) GetEnvType() string {
	if x != nil {
		return x.EnvType
	}
	return ""
}

func (x *GetPrometheusInstanceListRequest) GetRegionCode() string {
	if x != nil {
		return x.RegionCode
	}
	return ""
}

func (x *GetPrometheusInstanceListRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type GetPrometheusInstanceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*PrometheusInstanceItem `protobuf:"bytes,1,rep,name=items,proto3" form:"items" json:"items,omitempty" query:"items"`
}

func (x *GetPrometheusInstanceListResponse) Reset() {
	*x = GetPrometheusInstanceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrometheusInstanceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrometheusInstanceListResponse) ProtoMessage() {}

func (x *GetPrometheusInstanceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrometheusInstanceListResponse.ProtoReflect.Descriptor instead.
func (*GetPrometheusInstanceListResponse) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{18}
}

func (x *GetPrometheusInstanceListResponse) GetItems() []*PrometheusInstanceItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type PrometheusInstanceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     int64  `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`
	EnvironmentCode        string `protobuf:"bytes,2,opt,name=environmentCode,proto3" form:"environmentCode" json:"environmentCode,omitempty" query:"environmentCode"`
	PrometheusInstanceCode string `protobuf:"bytes,3,opt,name=prometheusInstanceCode,proto3" form:"prometheusInstanceCode" json:"prometheusInstanceCode,omitempty" query:"prometheusInstanceCode"`
	Name                   string `protobuf:"bytes,4,opt,name=name,proto3" form:"name" json:"name,omitempty" query:"name"`
	Type                   string `protobuf:"bytes,5,opt,name=type,proto3" form:"type" json:"type,omitempty" query:"type"`
	GrafanaDatasourceName  string `protobuf:"bytes,6,opt,name=grafanaDatasourceName,proto3" form:"grafanaDatasourceName" json:"grafanaDatasourceName,omitempty" query:"grafanaDatasourceName"`
	BindResourceId         string `protobuf:"bytes,7,opt,name=bindResourceId,proto3" form:"bindResourceId" json:"bindResourceId,omitempty" query:"bindResourceId"`
}

func (x *PrometheusInstanceItem) Reset() {
	*x = PrometheusInstanceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusInstanceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusInstanceItem) ProtoMessage() {}

func (x *PrometheusInstanceItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusInstanceItem.ProtoReflect.Descriptor instead.
func (*PrometheusInstanceItem) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{19}
}

func (x *PrometheusInstanceItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PrometheusInstanceItem) GetEnvironmentCode() string {
	if x != nil {
		return x.EnvironmentCode
	}
	return ""
}

func (x *PrometheusInstanceItem) GetPrometheusInstanceCode() string {
	if x != nil {
		return x.PrometheusInstanceCode
	}
	return ""
}

func (x *PrometheusInstanceItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PrometheusInstanceItem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PrometheusInstanceItem) GetGrafanaDatasourceName() string {
	if x != nil {
		return x.GrafanaDatasourceName
	}
	return ""
}

func (x *PrometheusInstanceItem) GetBindResourceId() string {
	if x != nil {
		return x.BindResourceId
	}
	return ""
}

type SetMetricsCollectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvironmentCode string `protobuf:"bytes,1,opt,name=environmentCode,proto3" form:"environmentCode" json:"environmentCode,omitempty"`
	Operation       int64  `protobuf:"varint,2,opt,name=operation,proto3" form:"operation" json:"operation,omitempty"`
	Target          string `protobuf:"bytes,3,opt,name=target,proto3" form:"target" json:"target,omitempty"`
	RegionCode      string `protobuf:"bytes,4,opt,name=regionCode,proto3" form:"regionCode" json:"regionCode,omitempty"`
	TenantId        string `protobuf:"bytes,5,opt,name=tenantId,proto3" header:"tenantId" json:"tenantId,omitempty"`
}

func (x *SetMetricsCollectRequest) Reset() {
	*x = SetMetricsCollectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMetricsCollectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMetricsCollectRequest) ProtoMessage() {}

func (x *SetMetricsCollectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMetricsCollectRequest.ProtoReflect.Descriptor instead.
func (*SetMetricsCollectRequest) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{20}
}

func (x *SetMetricsCollectRequest) GetEnvironmentCode() string {
	if x != nil {
		return x.EnvironmentCode
	}
	return ""
}

func (x *SetMetricsCollectRequest) GetOperation() int64 {
	if x != nil {
		return x.Operation
	}
	return 0
}

func (x *SetMetricsCollectRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *SetMetricsCollectRequest) GetRegionCode() string {
	if x != nil {
		return x.RegionCode
	}
	return ""
}

func (x *SetMetricsCollectRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type SetMetricsCollectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`
}

func (x *SetMetricsCollectResponse) Reset() {
	*x = SetMetricsCollectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMetricsCollectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMetricsCollectResponse) ProtoMessage() {}

func (x *SetMetricsCollectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMetricsCollectResponse.ProtoReflect.Descriptor instead.
func (*SetMetricsCollectResponse) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{21}
}

func (x *SetMetricsCollectResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type GetPrometheusDashboardListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvironmentCode                      string `protobuf:"bytes,1,opt,name=environmentCode,proto3" form:"environmentCode" json:"environmentCode,omitempty"`
	PrometheusEnvironmentAddonTemplateId int32  `protobuf:"varint,2,opt,name=prometheusEnvironmentAddonTemplateId,proto3" form:"prometheusEnvironmentAddonTemplateId" json:"prometheusEnvironmentAddonTemplateId,omitempty"`
	RegionCode                           string `protobuf:"bytes,3,opt,name=regionCode,proto3" form:"regionCode" json:"regionCode,omitempty"`
	Name                                 string `protobuf:"bytes,4,opt,name=name,proto3" form:"name" json:"name,omitempty"`
}

func (x *GetPrometheusDashboardListRequest) Reset() {
	*x = GetPrometheusDashboardListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrometheusDashboardListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrometheusDashboardListRequest) ProtoMessage() {}

func (x *GetPrometheusDashboardListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrometheusDashboardListRequest.ProtoReflect.Descriptor instead.
func (*GetPrometheusDashboardListRequest) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{22}
}

func (x *GetPrometheusDashboardListRequest) GetEnvironmentCode() string {
	if x != nil {
		return x.EnvironmentCode
	}
	return ""
}

func (x *GetPrometheusDashboardListRequest) GetPrometheusEnvironmentAddonTemplateId() int32 {
	if x != nil {
		return x.PrometheusEnvironmentAddonTemplateId
	}
	return 0
}

func (x *GetPrometheusDashboardListRequest) GetRegionCode() string {
	if x != nil {
		return x.RegionCode
	}
	return ""
}

func (x *GetPrometheusDashboardListRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetPrometheusDashboardListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*PrometheusDashboardItem `protobuf:"bytes,1,rep,name=items,proto3" form:"items" json:"items,omitempty" query:"items"`
}

func (x *GetPrometheusDashboardListResponse) Reset() {
	*x = GetPrometheusDashboardListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrometheusDashboardListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrometheusDashboardListResponse) ProtoMessage() {}

func (x *GetPrometheusDashboardListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrometheusDashboardListResponse.ProtoReflect.Descriptor instead.
func (*GetPrometheusDashboardListResponse) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{23}
}

func (x *GetPrometheusDashboardListResponse) GetItems() []*PrometheusDashboardItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type PrometheusDashboardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" form:"name" json:"name,omitempty" query:"name"`
	Title         string `protobuf:"bytes,2,opt,name=title,proto3" form:"title" json:"title,omitempty" query:"title"`
	Type          string `protobuf:"bytes,3,opt,name=type,proto3" form:"type" json:"type,omitempty" query:"type"`
	DashboardType string `protobuf:"bytes,4,opt,name=dashboardType,proto3" form:"dashboardType" json:"dashboardType,omitempty" query:"dashboardType"`
	Description   string `protobuf:"bytes,5,opt,name=description,proto3" form:"description" json:"description,omitempty" query:"description"`
	Url           string `protobuf:"bytes,6,opt,name=url,proto3" form:"url" json:"url,omitempty" query:"url"`
	Uid           string `protobuf:"bytes,7,opt,name=uid,proto3" form:"uid" json:"uid,omitempty" query:"uid"`
	Tag           string `protobuf:"bytes,8,opt,name=tag,proto3" form:"tag" json:"tag,omitempty" query:"tag"`
	FolderUid     string `protobuf:"bytes,9,opt,name=folderUid,proto3" form:"folderUid" json:"folderUid,omitempty" query:"folderUid"`
	Version       string `protobuf:"bytes,10,opt,name=version,proto3" form:"version" json:"version,omitempty" query:"version"`
}

func (x *PrometheusDashboardItem) Reset() {
	*x = PrometheusDashboardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusDashboardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusDashboardItem) ProtoMessage() {}

func (x *PrometheusDashboardItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusDashboardItem.ProtoReflect.Descriptor instead.
func (*PrometheusDashboardItem) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{24}
}

func (x *PrometheusDashboardItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PrometheusDashboardItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PrometheusDashboardItem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PrometheusDashboardItem) GetDashboardType() string {
	if x != nil {
		return x.DashboardType
	}
	return ""
}

func (x *PrometheusDashboardItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PrometheusDashboardItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PrometheusDashboardItem) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PrometheusDashboardItem) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *PrometheusDashboardItem) GetFolderUid() string {
	if x != nil {
		return x.FolderUid
	}
	return ""
}

func (x *PrometheusDashboardItem) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetPrometheusMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionCode string `protobuf:"bytes,1,opt,name=regionCode,proto3" form:"regionCode" json:"regionCode,omitempty"`
	Query      string `protobuf:"bytes,2,opt,name=query,proto3" form:"query" json:"query,omitempty"`
	Start      int64  `protobuf:"varint,3,opt,name=start,proto3" form:"start" json:"start,omitempty"`
	End        int64  `protobuf:"varint,4,opt,name=end,proto3" form:"end" json:"end,omitempty"`
	Step       int64  `protobuf:"varint,5,opt,name=step,proto3" form:"step" json:"step,omitempty"`
}

func (x *GetPrometheusMetricsRequest) Reset() {
	*x = GetPrometheusMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrometheusMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrometheusMetricsRequest) ProtoMessage() {}

func (x *GetPrometheusMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrometheusMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetPrometheusMetricsRequest) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{25}
}

func (x *GetPrometheusMetricsRequest) GetRegionCode() string {
	if x != nil {
		return x.RegionCode
	}
	return ""
}

func (x *GetPrometheusMetricsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetPrometheusMetricsRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GetPrometheusMetricsRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *GetPrometheusMetricsRequest) GetStep() int64 {
	if x != nil {
		return x.Step
	}
	return 0
}

type GetPrometheusMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*PrometheusMetricItem `protobuf:"bytes,1,rep,name=items,proto3" form:"items" json:"items,omitempty" query:"items"`
}

func (x *GetPrometheusMetricsResponse) Reset() {
	*x = GetPrometheusMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrometheusMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrometheusMetricsResponse) ProtoMessage() {}

func (x *GetPrometheusMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrometheusMetricsResponse.ProtoReflect.Descriptor instead.
func (*GetPrometheusMetricsResponse) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{26}
}

func (x *GetPrometheusMetricsResponse) GetItems() []*PrometheusMetricItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type PrometheusMetricItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metric map[string]string     `protobuf:"bytes,1,rep,name=metric,proto3" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" form:"metric" json:"metric,omitempty" query:"metric"`
	Values []*structpb.ListValue `protobuf:"bytes,2,rep,name=values,proto3" form:"values" json:"values,omitempty" query:"values"`
}

func (x *PrometheusMetricItem) Reset() {
	*x = PrometheusMetricItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusMetricItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusMetricItem) ProtoMessage() {}

func (x *PrometheusMetricItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusMetricItem.ProtoReflect.Descriptor instead.
func (*PrometheusMetricItem) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{27}
}

func (x *PrometheusMetricItem) GetMetric() map[string]string {
	if x != nil {
		return x.Metric
	}
	return nil
}

func (x *PrometheusMetricItem) GetValues() []*structpb.ListValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type GetPrometheusMonitorStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvironmentCode string `protobuf:"bytes,1,opt,name=environmentCode,proto3" json:"environmentCode,omitempty" query:"environmentCode"`
	RegionCode      string `protobuf:"bytes,2,opt,name=regionCode,proto3" json:"regionCode,omitempty" query:"regionCode"`
	TenantId        string `protobuf:"bytes,3,opt,name=tenantId,proto3" header:"tenantId" json:"tenantId,omitempty"`
}

func (x *GetPrometheusMonitorStatusRequest) Reset() {
	*x = GetPrometheusMonitorStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrometheusMonitorStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrometheusMonitorStatusRequest) ProtoMessage() {}

func (x *GetPrometheusMonitorStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrometheusMonitorStatusRequest.ProtoReflect.Descriptor instead.
func (*GetPrometheusMonitorStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{28}
}

func (x *GetPrometheusMonitorStatusRequest) GetEnvironmentCode() string {
	if x != nil {
		return x.EnvironmentCode
	}
	return ""
}

func (x *GetPrometheusMonitorStatusRequest) GetRegionCode() string {
	if x != nil {
		return x.RegionCode
	}
	return ""
}

func (x *GetPrometheusMonitorStatusRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type GetPrometheusMonitorStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvironmentCode      string `protobuf:"bytes,1,opt,name=environmentCode,proto3" form:"environmentCode" json:"environmentCode,omitempty" query:"environmentCode"`
	EnableAutoDiscover   int64  `protobuf:"varint,2,opt,name=enableAutoDiscover,proto3" form:"enableAutoDiscover" json:"enableAutoDiscover,omitempty" query:"enableAutoDiscover"`
	EnableServiceMonitor int64  `protobuf:"varint,3,opt,name=enableServiceMonitor,proto3" form:"enableServiceMonitor" json:"enableServiceMonitor,omitempty" query:"enableServiceMonitor"`
	EnablePodMonitor     int64  `protobuf:"varint,4,opt,name=enablePodMonitor,proto3" form:"enablePodMonitor" json:"enablePodMonitor,omitempty" query:"enablePodMonitor"`
}

func (x *GetPrometheusMonitorStatusResponse) Reset() {
	*x = GetPrometheusMonitorStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrometheusMonitorStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrometheusMonitorStatusResponse) ProtoMessage() {}

func (x *GetPrometheusMonitorStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrometheusMonitorStatusResponse.ProtoReflect.Descriptor instead.
func (*GetPrometheusMonitorStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{29}
}

func (x *GetPrometheusMonitorStatusResponse) GetEnvironmentCode() string {
	if x != nil {
		return x.EnvironmentCode
	}
	return ""
}

func (x *GetPrometheusMonitorStatusResponse) GetEnableAutoDiscover() int64 {
	if x != nil {
		return x.EnableAutoDiscover
	}
	return 0
}

func (x *GetPrometheusMonitorStatusResponse) GetEnableServiceMonitor() int64 {
	if x != nil {
		return x.EnableServiceMonitor
	}
	return 0
}

func (x *GetPrometheusMonitorStatusResponse) GetEnablePodMonitor() int64 {
	if x != nil {
		return x.EnablePodMonitor
	}
	return 0
}

type InstallPrometheusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId      string `protobuf:"bytes,1,opt,name=resourceId,proto3" form:"resourceId" json:"resourceId,omitempty"`
	ResourceName    string `protobuf:"bytes,2,opt,name=resourceName,proto3" form:"resourceName" json:"resourceName,omitempty"`
	Type            string `protobuf:"bytes,3,opt,name=type,proto3" form:"type" json:"type,omitempty"`
	RegionCode      string `protobuf:"bytes,4,opt,name=regionCode,proto3" form:"regionCode" json:"regionCode,omitempty"`
	ClusterType     *int32 `protobuf:"varint,5,opt,name=clusterType,proto3,oneof" form:"clusterType" json:"clusterType,omitempty"`
	AddonTemplateId int64  `protobuf:"varint,6,opt,name=addonTemplateId,proto3" form:"addonTemplateId" json:"addonTemplateId,omitempty"`
	TenantId        string `protobuf:"bytes,7,opt,name=tenantId,proto3" header:"tenantId" json:"tenantId,omitempty"`
	UserId          string `protobuf:"bytes,8,opt,name=userId,proto3" header:"userId" json:"userId,omitempty"`
}

func (x *InstallPrometheusRequest) Reset() {
	*x = InstallPrometheusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallPrometheusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallPrometheusRequest) ProtoMessage() {}

func (x *InstallPrometheusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallPrometheusRequest.ProtoReflect.Descriptor instead.
func (*InstallPrometheusRequest) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{30}
}

func (x *InstallPrometheusRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *InstallPrometheusRequest) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *InstallPrometheusRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *InstallPrometheusRequest) GetRegionCode() string {
	if x != nil {
		return x.RegionCode
	}
	return ""
}

func (x *InstallPrometheusRequest) GetClusterType() int32 {
	if x != nil && x.ClusterType != nil {
		return *x.ClusterType
	}
	return 0
}

func (x *InstallPrometheusRequest) GetAddonTemplateId() int64 {
	if x != nil {
		return x.AddonTemplateId
	}
	return 0
}

func (x *InstallPrometheusRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *InstallPrometheusRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type InstallPrometheusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" form:"result" json:"result,omitempty" query:"result"`
}

func (x *InstallPrometheusResponse) Reset() {
	*x = InstallPrometheusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallPrometheusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallPrometheusResponse) ProtoMessage() {}

func (x *InstallPrometheusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallPrometheusResponse.ProtoReflect.Descriptor instead.
func (*InstallPrometheusResponse) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{31}
}

func (x *InstallPrometheusResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type CheckInstallPrometheusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId      string `protobuf:"bytes,1,opt,name=resourceId,proto3" form:"resourceId" json:"resourceId,omitempty"`
	ResourceName    string `protobuf:"bytes,2,opt,name=resourceName,proto3" form:"resourceName" json:"resourceName,omitempty"`
	Type            string `protobuf:"bytes,3,opt,name=type,proto3" form:"type" json:"type,omitempty"`
	RegionCode      string `protobuf:"bytes,4,opt,name=regionCode,proto3" form:"regionCode" json:"regionCode,omitempty"`
	ClusterType     *int32 `protobuf:"varint,5,opt,name=clusterType,proto3,oneof" form:"clusterType" json:"clusterType,omitempty"`
	AddonTemplateId int64  `protobuf:"varint,6,opt,name=addonTemplateId,proto3" form:"addonTemplateId" json:"addonTemplateId,omitempty"`
	TenantId        string `protobuf:"bytes,7,opt,name=tenantId,proto3" header:"tenantId" json:"tenantId,omitempty"`
	UserId          string `protobuf:"bytes,8,opt,name=userId,proto3" header:"userId" json:"userId,omitempty"`
}

func (x *CheckInstallPrometheusRequest) Reset() {
	*x = CheckInstallPrometheusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckInstallPrometheusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckInstallPrometheusRequest) ProtoMessage() {}

func (x *CheckInstallPrometheusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckInstallPrometheusRequest.ProtoReflect.Descriptor instead.
func (*CheckInstallPrometheusRequest) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{32}
}

func (x *CheckInstallPrometheusRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *CheckInstallPrometheusRequest) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *CheckInstallPrometheusRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CheckInstallPrometheusRequest) GetRegionCode() string {
	if x != nil {
		return x.RegionCode
	}
	return ""
}

func (x *CheckInstallPrometheusRequest) GetClusterType() int32 {
	if x != nil && x.ClusterType != nil {
		return *x.ClusterType
	}
	return 0
}

func (x *CheckInstallPrometheusRequest) GetAddonTemplateId() int64 {
	if x != nil {
		return x.AddonTemplateId
	}
	return 0
}

func (x *CheckInstallPrometheusRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *CheckInstallPrometheusRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CheckInstallPrometheusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompleteCode string `protobuf:"bytes,1,opt,name=completeCode,proto3" form:"completeCode" json:"completeCode,omitempty" query:"completeCode"`
	Msg          string `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
}

func (x *CheckInstallPrometheusResponse) Reset() {
	*x = CheckInstallPrometheusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_apm_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckInstallPrometheusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckInstallPrometheusResponse) ProtoMessage() {}

func (x *CheckInstallPrometheusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_apm_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckInstallPrometheusResponse.ProtoReflect.Descriptor instead.
func (*CheckInstallPrometheusResponse) Descriptor() ([]byte, []int) {
	return file_api_common_apm_proto_rawDescGZIP(), []int{33}
}

func (x *CheckInstallPrometheusResponse) GetCompleteCode() string {
	if x != nil {
		return x.CompleteCode
	}
	return ""
}

func (x *CheckInstallPrometheusResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_api_common_apm_proto protoreflect.FileDescriptor

var file_api_common_apm_proto_rawDesc = []byte{
	0x0a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9c, 0x02, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x09, 0x61, 0x64, 0x64,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb,
	0x18, 0x09, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x61, 0x64, 0x64,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xbb, 0x18,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xbb, 0x18, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x34, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xca, 0xbb, 0x18, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x21, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xb2, 0xbb, 0x18,
	0x09, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x61, 0x64, 0x64, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x15, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64,
	0x64, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x1d, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0xa7, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0d, 0xb2, 0xbb, 0x18, 0x09, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b,
	0xb2, 0xbb, 0x18, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xb2, 0xbb, 0x18, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x06,
	0xb2, 0xbb, 0x18, 0x02, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x22, 0xee, 0x01, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0xb4, 0x02, 0x0a, 0x1e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0b, 0xca, 0xbb, 0x18, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x61, 0x64,
	0x64, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xca, 0xbb,
	0x18, 0x02, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xbb, 0x18, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f,
	0xca, 0xbb, 0x18, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x0c,
	0x64, 0x61, 0x74, 0x61, 0x54, 0x65, 0x6d, 0x70, 0x61, 0x6c, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x10, 0xca, 0xbb, 0x18, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x54, 0x65, 0x6d, 0x70,
	0x61, 0x6c, 0x74, 0x65, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x54, 0x65, 0x6d, 0x70, 0x61, 0x6c,
	0x74, 0x65, 0x22, 0x21, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xca, 0xbb, 0x18, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x34, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xca, 0xbb, 0x18, 0x0c, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xca, 0xbb, 0x18, 0x04, 0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x7e,
	0x0a, 0x0d, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x45,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x2b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x21, 0x0a, 0x1f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc4, 0x01,
	0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x6d, 0x73, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xb2, 0xbb, 0x18, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x03, 0x65, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xb2, 0xbb, 0x18, 0x03, 0x65, 0x6e, 0x64,
	0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xb2, 0xbb, 0x18, 0x04, 0x73, 0x74, 0x65, 0x70, 0x52, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x12, 0x1f, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xb2, 0xbb, 0x18, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xb2, 0xbb, 0x18, 0x0a, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x75, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x6d,
	0x73, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x39, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72,
	0x6d, 0x73, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd2, 0x01, 0x0a, 0x1a,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x6d, 0x73, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x06, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x6d, 0x73, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x12, 0x32, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xa3, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65,
	0x75, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x6e, 0x76, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x65, 0x6e, 0x76, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x76, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x0a,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0e, 0xb2, 0xbb, 0x18, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c,
	0xba, 0xbb, 0x18, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x90, 0x02, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68,
	0x65, 0x75, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75,
	0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x62,
	0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x22, 0x84, 0x02, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3d, 0x0a, 0x0f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xca, 0xbb, 0x18, 0x0f, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0f,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x2b, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb,
	0x18, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x2e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xca, 0xbb, 0x18, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x28, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb, 0x18, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x19, 0x53, 0x65,
	0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xae, 0x02, 0x0a, 0x21,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x44, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3d, 0x0a, 0x0f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xca, 0xbb, 0x18, 0x0f,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x0f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x7c, 0x0a, 0x24, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x28,
	0xca, 0xbb, 0x18, 0x24, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x52, 0x24, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74,
	0x68, 0x65, 0x75, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x64, 0x64, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0e, 0xca, 0xbb, 0x18, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xbb,
	0x18, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5a, 0x0a, 0x22,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x44, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74,
	0x68, 0x65, 0x75, 0x73, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x8d, 0x02, 0x0a, 0x17, 0x50, 0x72, 0x6f,
	0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67,
	0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xc8, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xca, 0xbb,
	0x18, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xbb, 0x18, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x09, 0xca, 0xbb, 0x18, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x03, 0x65, 0x6e,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x65, 0x6e, 0x64,
	0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x73, 0x74, 0x65, 0x70, 0x52, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x22, 0x51, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74,
	0x68, 0x65, 0x75, 0x73, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65,
	0x74, 0x68, 0x65, 0x75, 0x73, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xc6, 0x01, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x6d, 0x65,
	0x74, 0x68, 0x65, 0x75, 0x73, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x3f, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65,
	0x75, 0x73, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x12, 0x32, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xbc, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75,
	0x73, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13,
	0xb2, 0xbb, 0x18, 0x0f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x0f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xb2, 0xbb, 0x18, 0x0a, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb, 0x18, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xde,
	0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73,
	0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x2e, 0x0a, 0x12, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12,
	0x32, 0x0a, 0x14, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6f, 0x64,
	0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6f, 0x64, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x22,
	0xa3, 0x03, 0x0a, 0x18, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x6d, 0x65,
	0x74, 0x68, 0x65, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0a,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0e, 0xca, 0xbb, 0x18, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0c,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x10, 0xca, 0xbb, 0x18, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x2e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xca, 0xbb, 0x18, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x36, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x6f,
	0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x13, 0xca, 0xbb, 0x18, 0x0f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb, 0x18, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xba, 0xbb, 0x18, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x33, 0x0a, 0x19, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa8, 0x03, 0x0a, 0x1d, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x6d, 0x65,
	0x74, 0x68, 0x65, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0a,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0e, 0xca, 0xbb, 0x18, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0c,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x10, 0xca, 0xbb, 0x18, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x2e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xca, 0xbb, 0x18, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x36, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x6f,
	0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x13, 0xca, 0xbb, 0x18, 0x0f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb, 0x18, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xba, 0xbb, 0x18, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x56, 0x0a, 0x1e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0xfc, 0x12,
	0x0a, 0x0a, 0x41, 0x70, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa7, 0x01, 0x0a,
	0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0xd2, 0xc1, 0x18, 0x39, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x61, 0x73, 0x2f, 0x67,
	0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x2f, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x2f, 0x69,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x44, 0x61, 0x73, 0x68, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0xa2, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0xca, 0xc1, 0x18,
	0x3a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x2f, 0x70, 0x61,
	0x61, 0x73, 0x2f, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x2f, 0x67, 0x72, 0x61, 0x66, 0x61,
	0x6e, 0x61, 0x2f, 0x67, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0xa0, 0x01, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0xca,
	0xc1, 0x18, 0x3b, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x2f, 0x70,
	0x61, 0x61, 0x73, 0x2f, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x2f, 0x67, 0x72, 0x61, 0x66,
	0x61, 0x6e, 0x61, 0x2f, 0x67, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0xa7,
	0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0xd2, 0xc1, 0x18, 0x39, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x61, 0x73,
	0x2f, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x2f, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61,
	0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x73, 0x68, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x7c, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x1d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0xd2, 0xc1, 0x18, 0x26,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x61,
	0x73, 0x2f, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x2f, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e,
	0x61, 0x2f, 0x69, 0x6e, 0x69, 0x74, 0x12, 0xa7, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x3d, 0xd2, 0xc1, 0x18, 0x39, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x70, 0x65, 0x6e,
	0x41, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x61, 0x73, 0x2f, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61,
	0x2f, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44,
	0x61, 0x73, 0x68, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0xa0, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x6d, 0x73, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x41, 0x72, 0x6d, 0x73, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x41, 0x72, 0x6d, 0x73, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0xca, 0xc1, 0x18, 0x49, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f,
	0x70, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x61, 0x73, 0x2f, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x72, 0x6d, 0x73, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x63, 0x6d, 0x70, 0x61,
	0x72, 0x6d, 0x73, 0x2f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x65,
	0x74, 0x68, 0x65, 0x75, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0xc3, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x65,
	0x74, 0x68, 0x65, 0x75, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0xd2, 0xc1, 0x18, 0x4f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f,
	0x70, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6d,
	0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x76, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0xaa, 0x01, 0x0a, 0x11, 0x53, 0x65,
	0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x52, 0xd2, 0xc1, 0x18, 0x4e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x70, 0x65,
	0x6e, 0x41, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74,
	0x68, 0x65, 0x75, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x6d,
	0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2f, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x2f, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0xbc, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x44, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x65,
	0x74, 0x68, 0x65, 0x75, 0x73, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0xd2, 0xc1, 0x18, 0x45,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x61,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2d, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x6d,
	0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0xad, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x22,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74,
	0x68, 0x65, 0x75, 0x73, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4c, 0xd2, 0xc1, 0x18, 0x48, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x61, 0x73, 0x2f, 0x70,
	0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2f, 0x63, 0x6d, 0x70, 0x61, 0x72, 0x6d, 0x73, 0x2f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2f,
	0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0xcb, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74,
	0x68, 0x65, 0x75, 0x73, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0xca, 0xc1, 0x18, 0x54, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x61, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2f, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0xa6, 0x01, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50,
	0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68,
	0x65, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74,
	0x68, 0x65, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0xd2, 0xc1,
	0x18, 0x4a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x2f, 0x70,
	0x61, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x45, 0x6e, 0x76, 0x41, 0x6e, 0x64, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0xad, 0x01, 0x0a,
	0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f,
	0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x6d,
	0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0xd2, 0xc1, 0x18, 0x42, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f,
	0x70, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6d,
	0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x6f, 0x70,
	0x65, 0x6e, 0x41, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73,
	0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x41, 0x5a, 0x3f,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x63,
	0x6f, 0x6d, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x69, 0x73, 0x75, 0x69, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x6d, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_common_apm_proto_rawDescOnce sync.Once
	file_api_common_apm_proto_rawDescData = file_api_common_apm_proto_rawDesc
)

func file_api_common_apm_proto_rawDescGZIP() []byte {
	file_api_common_apm_proto_rawDescOnce.Do(func() {
		file_api_common_apm_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_common_apm_proto_rawDescData)
	})
	return file_api_common_apm_proto_rawDescData
}

var file_api_common_apm_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_api_common_apm_proto_goTypes = []interface{}{
	(*CreateDashboardTemplateRequest)(nil),     // 0: proto.CreateDashboardTemplateRequest
	(*CreateDashboardTemplateResponse)(nil),    // 1: proto.CreateDashboardTemplateResponse
	(*ListDashboardTemplateRequest)(nil),       // 2: proto.ListDashboardTemplateRequest
	(*DashboardTemplateItem)(nil),              // 3: proto.DashboardTemplateItem
	(*ListDashboardTemplateResponse)(nil),      // 4: proto.ListDashboardTemplateResponse
	(*GetDashboardTemplateRequest)(nil),        // 5: proto.GetDashboardTemplateRequest
	(*GetDashboardTemplateResponse)(nil),       // 6: proto.GetDashboardTemplateResponse
	(*UpdateDashboardTemplateRequest)(nil),     // 7: proto.UpdateDashboardTemplateRequest
	(*UpdateDashboardTemplateResponse)(nil),    // 8: proto.UpdateDashboardTemplateResponse
	(*CreateDashboardRequest)(nil),             // 9: proto.CreateDashboardRequest
	(*DashboardItem)(nil),                      // 10: proto.DashboardItem
	(*CreateDashboardResponse)(nil),            // 11: proto.CreateDashboardResponse
	(*DeleteDashboardTemplateRequest)(nil),     // 12: proto.DeleteDashboardTemplateRequest
	(*DeleteDashboardTemplateResponse)(nil),    // 13: proto.DeleteDashboardTemplateResponse
	(*QueryArmsMetricsRequest)(nil),            // 14: proto.QueryArmsMetricsRequest
	(*QueryArmsMetricsResponse)(nil),           // 15: proto.QueryArmsMetricsResponse
	(*QueryArmsMetricsDataValues)(nil),         // 16: proto.QueryArmsMetricsDataValues
	(*GetPrometheusInstanceListRequest)(nil),   // 17: proto.GetPrometheusInstanceListRequest
	(*GetPrometheusInstanceListResponse)(nil),  // 18: proto.GetPrometheusInstanceListResponse
	(*PrometheusInstanceItem)(nil),             // 19: proto.PrometheusInstanceItem
	(*SetMetricsCollectRequest)(nil),           // 20: proto.SetMetricsCollectRequest
	(*SetMetricsCollectResponse)(nil),          // 21: proto.SetMetricsCollectResponse
	(*GetPrometheusDashboardListRequest)(nil),  // 22: proto.GetPrometheusDashboardListRequest
	(*GetPrometheusDashboardListResponse)(nil), // 23: proto.GetPrometheusDashboardListResponse
	(*PrometheusDashboardItem)(nil),            // 24: proto.PrometheusDashboardItem
	(*GetPrometheusMetricsRequest)(nil),        // 25: proto.GetPrometheusMetricsRequest
	(*GetPrometheusMetricsResponse)(nil),       // 26: proto.GetPrometheusMetricsResponse
	(*PrometheusMetricItem)(nil),               // 27: proto.PrometheusMetricItem
	(*GetPrometheusMonitorStatusRequest)(nil),  // 28: proto.GetPrometheusMonitorStatusRequest
	(*GetPrometheusMonitorStatusResponse)(nil), // 29: proto.GetPrometheusMonitorStatusResponse
	(*InstallPrometheusRequest)(nil),           // 30: proto.InstallPrometheusRequest
	(*InstallPrometheusResponse)(nil),          // 31: proto.InstallPrometheusResponse
	(*CheckInstallPrometheusRequest)(nil),      // 32: proto.CheckInstallPrometheusRequest
	(*CheckInstallPrometheusResponse)(nil),     // 33: proto.CheckInstallPrometheusResponse
	nil,                                        // 34: proto.QueryArmsMetricsDataValues.MetricEntry
	nil,                                        // 35: proto.PrometheusMetricItem.MetricEntry
	(*structpb.ListValue)(nil),                 // 36: google.protobuf.ListValue
}
var file_api_common_apm_proto_depIdxs = []int32{
	3,  // 0: proto.ListDashboardTemplateResponse.items:type_name -> proto.DashboardTemplateItem
	10, // 1: proto.CreateDashboardResponse.items:type_name -> proto.DashboardItem
	16, // 2: proto.QueryArmsMetricsResponse.result:type_name -> proto.QueryArmsMetricsDataValues
	34, // 3: proto.QueryArmsMetricsDataValues.metric:type_name -> proto.QueryArmsMetricsDataValues.MetricEntry
	36, // 4: proto.QueryArmsMetricsDataValues.values:type_name -> google.protobuf.ListValue
	19, // 5: proto.GetPrometheusInstanceListResponse.items:type_name -> proto.PrometheusInstanceItem
	24, // 6: proto.GetPrometheusDashboardListResponse.items:type_name -> proto.PrometheusDashboardItem
	27, // 7: proto.GetPrometheusMetricsResponse.items:type_name -> proto.PrometheusMetricItem
	35, // 8: proto.PrometheusMetricItem.metric:type_name -> proto.PrometheusMetricItem.MetricEntry
	36, // 9: proto.PrometheusMetricItem.values:type_name -> google.protobuf.ListValue
	0,  // 10: proto.ApmService.CreateDashboardTemplate:input_type -> proto.CreateDashboardTemplateRequest
	2,  // 11: proto.ApmService.ListDashboardTemplate:input_type -> proto.ListDashboardTemplateRequest
	5,  // 12: proto.ApmService.GetDashboardTemplate:input_type -> proto.GetDashboardTemplateRequest
	7,  // 13: proto.ApmService.UpdateDashboardTemplate:input_type -> proto.UpdateDashboardTemplateRequest
	9,  // 14: proto.ApmService.CreateDashboard:input_type -> proto.CreateDashboardRequest
	12, // 15: proto.ApmService.DeleteDashboardTemplate:input_type -> proto.DeleteDashboardTemplateRequest
	14, // 16: proto.ApmService.GetArmsMetrics:input_type -> proto.QueryArmsMetricsRequest
	17, // 17: proto.ApmService.GetPrometheusInstanceList:input_type -> proto.GetPrometheusInstanceListRequest
	20, // 18: proto.ApmService.SetMetricsCollect:input_type -> proto.SetMetricsCollectRequest
	22, // 19: proto.ApmService.GetPrometheusDashboardList:input_type -> proto.GetPrometheusDashboardListRequest
	25, // 20: proto.ApmService.GetPrometheusMetrics:input_type -> proto.GetPrometheusMetricsRequest
	28, // 21: proto.ApmService.GetPrometheusMonitorStatus:input_type -> proto.GetPrometheusMonitorStatusRequest
	30, // 22: proto.ApmService.InstallPrometheus:input_type -> proto.InstallPrometheusRequest
	32, // 23: proto.ApmService.CheckInstallPrometheus:input_type -> proto.CheckInstallPrometheusRequest
	1,  // 24: proto.ApmService.CreateDashboardTemplate:output_type -> proto.CreateDashboardTemplateResponse
	4,  // 25: proto.ApmService.ListDashboardTemplate:output_type -> proto.ListDashboardTemplateResponse
	6,  // 26: proto.ApmService.GetDashboardTemplate:output_type -> proto.GetDashboardTemplateResponse
	8,  // 27: proto.ApmService.UpdateDashboardTemplate:output_type -> proto.UpdateDashboardTemplateResponse
	11, // 28: proto.ApmService.CreateDashboard:output_type -> proto.CreateDashboardResponse
	13, // 29: proto.ApmService.DeleteDashboardTemplate:output_type -> proto.DeleteDashboardTemplateResponse
	15, // 30: proto.ApmService.GetArmsMetrics:output_type -> proto.QueryArmsMetricsResponse
	18, // 31: proto.ApmService.GetPrometheusInstanceList:output_type -> proto.GetPrometheusInstanceListResponse
	21, // 32: proto.ApmService.SetMetricsCollect:output_type -> proto.SetMetricsCollectResponse
	23, // 33: proto.ApmService.GetPrometheusDashboardList:output_type -> proto.GetPrometheusDashboardListResponse
	26, // 34: proto.ApmService.GetPrometheusMetrics:output_type -> proto.GetPrometheusMetricsResponse
	29, // 35: proto.ApmService.GetPrometheusMonitorStatus:output_type -> proto.GetPrometheusMonitorStatusResponse
	31, // 36: proto.ApmService.InstallPrometheus:output_type -> proto.InstallPrometheusResponse
	33, // 37: proto.ApmService.CheckInstallPrometheus:output_type -> proto.CheckInstallPrometheusResponse
	24, // [24:38] is the sub-list for method output_type
	10, // [10:24] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_common_apm_proto_init() }
func file_api_common_apm_proto_init() {
	if File_api_common_apm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_common_apm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDashboardTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDashboardTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDashboardTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashboardTemplateItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDashboardTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDashboardTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDashboardTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDashboardTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDashboardTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDashboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashboardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDashboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDashboardTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDashboardTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryArmsMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryArmsMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryArmsMetricsDataValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrometheusInstanceListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrometheusInstanceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrometheusInstanceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMetricsCollectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMetricsCollectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrometheusDashboardListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrometheusDashboardListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrometheusDashboardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrometheusMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrometheusMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrometheusMetricItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrometheusMonitorStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrometheusMonitorStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallPrometheusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallPrometheusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckInstallPrometheusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_apm_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckInstallPrometheusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_common_apm_proto_msgTypes[30].OneofWrappers = []interface{}{}
	file_api_common_apm_proto_msgTypes[32].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_common_apm_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_common_apm_proto_goTypes,
		DependencyIndexes: file_api_common_apm_proto_depIdxs,
		MessageInfos:      file_api_common_apm_proto_msgTypes,
	}.Build()
	File_api_common_apm_proto = out.File
	file_api_common_apm_proto_rawDesc = nil
	file_api_common_apm_proto_goTypes = nil
	file_api_common_apm_proto_depIdxs = nil
}
