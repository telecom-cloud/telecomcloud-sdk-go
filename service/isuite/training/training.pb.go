// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v4.25.1
// source: training.proto

package training

import (
	_ "github.com/telecom-cloud/client-go/pkg/openapi/api"
	apm "github.com/telecom-cloud/telecomcloud-sdk-go/service/isuite/apm"
	common "github.com/telecom-cloud/telecomcloud-sdk-go/service/isuite/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTrainingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId    string               `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	Name        string               `protobuf:"bytes,2,opt,name=name,proto3" form:"name" json:"name,omitempty"`
	Namespace   string               `protobuf:"bytes,3,opt,name=namespace,proto3" form:"namespace" json:"namespace,omitempty"`
	ClusterId   string               `protobuf:"bytes,4,opt,name=clusterId,proto3" form:"clusterId" json:"clusterId,omitempty"`
	Labels      []*common.Label      `protobuf:"bytes,5,rep,name=labels,proto3" form:"labels" json:"labels,omitempty"`
	Annotations []*common.Annotation `protobuf:"bytes,6,rep,name=annotations,proto3" form:"annotations" json:"annotations,omitempty"`
	Description string               `protobuf:"bytes,7,opt,name=description,proto3" form:"description" json:"description,omitempty"`
	JobSpec     *JobSpec             `protobuf:"bytes,8,opt,name=jobSpec,proto3" form:"jobSpec" json:"jobSpec,omitempty"`
	Settings    *common.JobSettings  `protobuf:"bytes,9,opt,name=settings,proto3" form:"settings" json:"settings,omitempty"`
}

func (x *CreateTrainingRequest) Reset() {
	*x = CreateTrainingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTrainingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTrainingRequest) ProtoMessage() {}

func (x *CreateTrainingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTrainingRequest.ProtoReflect.Descriptor instead.
func (*CreateTrainingRequest) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTrainingRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *CreateTrainingRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTrainingRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateTrainingRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *CreateTrainingRequest) GetLabels() []*common.Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateTrainingRequest) GetAnnotations() []*common.Annotation {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *CreateTrainingRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateTrainingRequest) GetJobSpec() *JobSpec {
	if x != nil {
		return x.JobSpec
	}
	return nil
}

func (x *CreateTrainingRequest) GetSettings() *common.JobSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type JobSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobMode    string               `protobuf:"bytes,1,opt,name=jobMode,proto3" form:"jobMode" json:"jobMode,omitempty"`
	Framework  *common.Framework    `protobuf:"bytes,2,opt,name=framework,proto3" form:"framework" json:"framework,omitempty"`
	Dataset    *common.DatasetInfo  `protobuf:"bytes,3,opt,name=dataset,proto3" form:"dataset" json:"dataset,omitempty"`
	Output     bool                 `protobuf:"varint,4,opt,name=output,proto3" form:"output" json:"output,omitempty"`
	OutputInfo *OutputInfo          `protobuf:"bytes,5,opt,name=outputInfo,proto3" form:"outputInfo" json:"outputInfo,omitempty"`
	Queue      string               `protobuf:"bytes,6,opt,name=queue,proto3" form:"queue" json:"queue,omitempty"`
	Priority   string               `protobuf:"bytes,7,opt,name=priority,proto3" form:"priority" json:"priority,omitempty"`
	Metadata   []*common.Metadata   `protobuf:"bytes,8,rep,name=metadata,proto3" form:"metadata" json:"metadata,omitempty"`
	Tolerances []*common.Toleration `protobuf:"bytes,9,rep,name=tolerances,proto3" form:"tolerances" json:"tolerances,omitempty"`
}

func (x *JobSpec) Reset() {
	*x = JobSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSpec) ProtoMessage() {}

func (x *JobSpec) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSpec.ProtoReflect.Descriptor instead.
func (*JobSpec) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{1}
}

func (x *JobSpec) GetJobMode() string {
	if x != nil {
		return x.JobMode
	}
	return ""
}

func (x *JobSpec) GetFramework() *common.Framework {
	if x != nil {
		return x.Framework
	}
	return nil
}

func (x *JobSpec) GetDataset() *common.DatasetInfo {
	if x != nil {
		return x.Dataset
	}
	return nil
}

func (x *JobSpec) GetOutput() bool {
	if x != nil {
		return x.Output
	}
	return false
}

func (x *JobSpec) GetOutputInfo() *OutputInfo {
	if x != nil {
		return x.OutputInfo
	}
	return nil
}

func (x *JobSpec) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *JobSpec) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

func (x *JobSpec) GetMetadata() []*common.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *JobSpec) GetTolerances() []*common.Toleration {
	if x != nil {
		return x.Tolerances
	}
	return nil
}

type OutputInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      string `protobuf:"bytes,1,opt,name=type,proto3" form:"type" json:"type,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" form:"id" json:"id,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" form:"name" json:"name,omitempty"`
	MountPath string `protobuf:"bytes,4,opt,name=mountPath,proto3" form:"mountPath" json:"mountPath,omitempty"`
}

func (x *OutputInfo) Reset() {
	*x = OutputInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutputInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputInfo) ProtoMessage() {}

func (x *OutputInfo) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputInfo.ProtoReflect.Descriptor instead.
func (*OutputInfo) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{2}
}

func (x *OutputInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OutputInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OutputInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OutputInfo) GetMountPath() string {
	if x != nil {
		return x.MountPath
	}
	return ""
}

type CreateTrainingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId  string `protobuf:"bytes,1,opt,name=requestId,proto3" form:"requestId" json:"requestId,omitempty" query:"requestId"`
	TrainingId string `protobuf:"bytes,2,opt,name=trainingId,proto3" form:"trainingId" json:"trainingId,omitempty" query:"trainingId"`
}

func (x *CreateTrainingResponse) Reset() {
	*x = CreateTrainingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTrainingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTrainingResponse) ProtoMessage() {}

func (x *CreateTrainingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTrainingResponse.ProtoReflect.Descriptor instead.
func (*CreateTrainingResponse) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{3}
}

func (x *CreateTrainingResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *CreateTrainingResponse) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

type DeleteTrainingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId   string `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	TrainingId string `protobuf:"bytes,2,opt,name=trainingId,proto3" json:"trainingId,omitempty" path:"trainingId"`
}

func (x *DeleteTrainingRequest) Reset() {
	*x = DeleteTrainingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTrainingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTrainingRequest) ProtoMessage() {}

func (x *DeleteTrainingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTrainingRequest.ProtoReflect.Descriptor instead.
func (*DeleteTrainingRequest) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteTrainingRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *DeleteTrainingRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

type DeleteTrainingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId  string `protobuf:"bytes,1,opt,name=requestId,proto3" form:"requestId" json:"requestId,omitempty" query:"requestId"`
	TrainingId string `protobuf:"bytes,2,opt,name=trainingId,proto3" form:"trainingId" json:"trainingId,omitempty" query:"trainingId"`
}

func (x *DeleteTrainingResponse) Reset() {
	*x = DeleteTrainingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTrainingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTrainingResponse) ProtoMessage() {}

func (x *DeleteTrainingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTrainingResponse.ProtoReflect.Descriptor instead.
func (*DeleteTrainingResponse) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteTrainingResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *DeleteTrainingResponse) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

type UpdateTrainingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId    string               `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	TrainingId  string               `protobuf:"bytes,2,opt,name=trainingId,proto3" json:"trainingId,omitempty" path:"trainingId"`
	Description string               `protobuf:"bytes,3,opt,name=description,proto3" form:"description" json:"description,omitempty"`
	Labels      []*common.Label      `protobuf:"bytes,4,rep,name=labels,proto3" form:"labels" json:"labels,omitempty"`
	Annotations []*common.Annotation `protobuf:"bytes,5,rep,name=annotations,proto3" form:"annotations" json:"annotations,omitempty"`
}

func (x *UpdateTrainingRequest) Reset() {
	*x = UpdateTrainingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTrainingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTrainingRequest) ProtoMessage() {}

func (x *UpdateTrainingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTrainingRequest.ProtoReflect.Descriptor instead.
func (*UpdateTrainingRequest) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateTrainingRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *UpdateTrainingRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *UpdateTrainingRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateTrainingRequest) GetLabels() []*common.Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UpdateTrainingRequest) GetAnnotations() []*common.Annotation {
	if x != nil {
		return x.Annotations
	}
	return nil
}

type UpdateTrainingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId  string `protobuf:"bytes,1,opt,name=requestId,proto3" form:"requestId" json:"requestId,omitempty" query:"requestId"`
	TrainingId string `protobuf:"bytes,2,opt,name=trainingId,proto3" form:"trainingId" json:"trainingId,omitempty" query:"trainingId"`
}

func (x *UpdateTrainingResponse) Reset() {
	*x = UpdateTrainingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTrainingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTrainingResponse) ProtoMessage() {}

func (x *UpdateTrainingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTrainingResponse.ProtoReflect.Descriptor instead.
func (*UpdateTrainingResponse) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateTrainingResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *UpdateTrainingResponse) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

type UpdateTrainingStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingId string           `protobuf:"bytes,1,opt,name=trainingId,proto3" json:"trainingId,omitempty" path:"trainingId"`
	Status     string           `protobuf:"bytes,2,opt,name=status,proto3" form:"status" json:"status,omitempty"`
	Pods       []*common.JobPod `protobuf:"bytes,3,rep,name=pods,proto3" form:"pods" json:"pods,omitempty"`
	StartTime  string           `protobuf:"bytes,4,opt,name=startTime,proto3" form:"startTime" json:"startTime,omitempty"`
	EndTime    string           `protobuf:"bytes,5,opt,name=endTime,proto3" form:"endTime" json:"endTime,omitempty"`
}

func (x *UpdateTrainingStatusRequest) Reset() {
	*x = UpdateTrainingStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTrainingStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTrainingStatusRequest) ProtoMessage() {}

func (x *UpdateTrainingStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTrainingStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateTrainingStatusRequest) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateTrainingStatusRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *UpdateTrainingStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateTrainingStatusRequest) GetPods() []*common.JobPod {
	if x != nil {
		return x.Pods
	}
	return nil
}

func (x *UpdateTrainingStatusRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *UpdateTrainingStatusRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type UpdateTrainingStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId  string `protobuf:"bytes,1,opt,name=requestId,proto3" form:"requestId" json:"requestId,omitempty" query:"requestId"`
	TrainingId string `protobuf:"bytes,2,opt,name=trainingId,proto3" form:"trainingId" json:"trainingId,omitempty" query:"trainingId"`
}

func (x *UpdateTrainingStatusResponse) Reset() {
	*x = UpdateTrainingStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTrainingStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTrainingStatusResponse) ProtoMessage() {}

func (x *UpdateTrainingStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTrainingStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateTrainingStatusResponse) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateTrainingStatusResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *UpdateTrainingStatusResponse) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

type GetTrainingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId   string `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	TrainingId string `protobuf:"bytes,2,opt,name=trainingId,proto3" json:"trainingId,omitempty" path:"trainingId"`
}

func (x *GetTrainingRequest) Reset() {
	*x = GetTrainingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrainingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainingRequest) ProtoMessage() {}

func (x *GetTrainingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainingRequest.ProtoReflect.Descriptor instead.
func (*GetTrainingRequest) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{10}
}

func (x *GetTrainingRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *GetTrainingRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

type GetTrainingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string        `protobuf:"bytes,1,opt,name=requestId,proto3" form:"requestId" json:"requestId,omitempty" query:"requestId"`
	Record    *TrainingItem `protobuf:"bytes,2,opt,name=record,proto3" form:"record" json:"record,omitempty" query:"record"`
}

func (x *GetTrainingResponse) Reset() {
	*x = GetTrainingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrainingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainingResponse) ProtoMessage() {}

func (x *GetTrainingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainingResponse.ProtoReflect.Descriptor instead.
func (*GetTrainingResponse) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{11}
}

func (x *GetTrainingResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *GetTrainingResponse) GetRecord() *TrainingItem {
	if x != nil {
		return x.Record
	}
	return nil
}

type TrainingItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingId  string               `protobuf:"bytes,1,opt,name=trainingId,proto3" form:"trainingId" json:"trainingId,omitempty" query:"trainingId"`
	Name        string               `protobuf:"bytes,2,opt,name=name,proto3" form:"name" json:"name,omitempty" query:"name"`
	Namespace   string               `protobuf:"bytes,3,opt,name=namespace,proto3" form:"namespace" json:"namespace,omitempty" query:"namespace"`
	ClusterId   string               `protobuf:"bytes,4,opt,name=clusterId,proto3" form:"clusterId" json:"clusterId,omitempty" query:"clusterId"`
	Type        string               `protobuf:"bytes,5,opt,name=type,proto3" form:"type" json:"type,omitempty" query:"type"`
	Status      string               `protobuf:"bytes,6,opt,name=status,proto3" form:"status" json:"status,omitempty" query:"status"`
	Labels      []*common.Label      `protobuf:"bytes,7,rep,name=labels,proto3" form:"labels" json:"labels,omitempty" query:"labels"`
	Annotations []*common.Annotation `protobuf:"bytes,8,rep,name=annotations,proto3" form:"annotations" json:"annotations,omitempty" query:"annotations"`
	Description string               `protobuf:"bytes,9,opt,name=description,proto3" form:"description" json:"description,omitempty" query:"description"`
	JobSpec     *JobSpec             `protobuf:"bytes,10,opt,name=jobSpec,proto3" form:"jobSpec" json:"jobSpec,omitempty" query:"jobSpec"`
	Pods        []*common.JobPod     `protobuf:"bytes,12,rep,name=pods,proto3" form:"pods" json:"pods,omitempty" query:"pods"`
	CreatedAt   string               `protobuf:"bytes,13,opt,name=createdAt,proto3" form:"createdAt" json:"createdAt,omitempty" query:"createdAt"`
	UpdateAt    string               `protobuf:"bytes,14,opt,name=updateAt,proto3" form:"updateAt" json:"updateAt,omitempty" query:"updateAt"`
	StartTime   string               `protobuf:"bytes,15,opt,name=startTime,proto3" form:"startTime" json:"startTime,omitempty" query:"startTime"`
	EndTime     string               `protobuf:"bytes,16,opt,name=endTime,proto3" form:"endTime" json:"endTime,omitempty" query:"endTime"`
}

func (x *TrainingItem) Reset() {
	*x = TrainingItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainingItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainingItem) ProtoMessage() {}

func (x *TrainingItem) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainingItem.ProtoReflect.Descriptor instead.
func (*TrainingItem) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{12}
}

func (x *TrainingItem) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *TrainingItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TrainingItem) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TrainingItem) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *TrainingItem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TrainingItem) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TrainingItem) GetLabels() []*common.Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *TrainingItem) GetAnnotations() []*common.Annotation {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *TrainingItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TrainingItem) GetJobSpec() *JobSpec {
	if x != nil {
		return x.JobSpec
	}
	return nil
}

func (x *TrainingItem) GetPods() []*common.JobPod {
	if x != nil {
		return x.Pods
	}
	return nil
}

func (x *TrainingItem) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *TrainingItem) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *TrainingItem) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *TrainingItem) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type ListTrainingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId  string `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	ClusterId string `protobuf:"bytes,2,opt,name=clusterId,proto3" json:"clusterId,omitempty" query:"clusterId"`
	PageNum   int32  `protobuf:"varint,3,opt,name=pageNum,proto3" json:"pageNum,omitempty" query:"pageNum"`
	PageSize  int32  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty" query:"pageSize"`
	Name      string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty" query:"name"`
	Namespace string `protobuf:"bytes,6,opt,name=namespace,proto3" json:"namespace,omitempty" query:"namespace"`
	JobMode   string `protobuf:"bytes,7,opt,name=jobMode,proto3" json:"jobMode,omitempty" query:"jobMode"`
	Status    string `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty" query:"status"`
	SortBy    string `protobuf:"bytes,9,opt,name=sortBy,proto3" json:"sortBy,omitempty" query:"sortBy"`
	Order     string `protobuf:"bytes,10,opt,name=order,proto3" json:"order,omitempty" query:"order"`
	Queue     string `protobuf:"bytes,11,opt,name=queue,proto3" json:"queue,omitempty" query:"queue"`
	Priority  string `protobuf:"bytes,12,opt,name=priority,proto3" json:"priority,omitempty" query:"priority"`
	Labels    string `protobuf:"bytes,13,opt,name=labels,proto3" json:"labels,omitempty" query:"labels"`
}

func (x *ListTrainingRequest) Reset() {
	*x = ListTrainingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTrainingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTrainingRequest) ProtoMessage() {}

func (x *ListTrainingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTrainingRequest.ProtoReflect.Descriptor instead.
func (*ListTrainingRequest) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{13}
}

func (x *ListTrainingRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *ListTrainingRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListTrainingRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListTrainingRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListTrainingRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListTrainingRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListTrainingRequest) GetJobMode() string {
	if x != nil {
		return x.JobMode
	}
	return ""
}

func (x *ListTrainingRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListTrainingRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListTrainingRequest) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *ListTrainingRequest) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *ListTrainingRequest) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

func (x *ListTrainingRequest) GetLabels() string {
	if x != nil {
		return x.Labels
	}
	return ""
}

type ListTrainingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId  string          `protobuf:"bytes,1,opt,name=requestId,proto3" form:"requestId" json:"requestId,omitempty" query:"requestId"`
	TotalCount int32           `protobuf:"varint,2,opt,name=totalCount,proto3" form:"totalCount" json:"totalCount,omitempty" query:"totalCount"`
	Records    []*TrainingItem `protobuf:"bytes,3,rep,name=records,proto3" form:"records" json:"records,omitempty" query:"records"`
}

func (x *ListTrainingResponse) Reset() {
	*x = ListTrainingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTrainingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTrainingResponse) ProtoMessage() {}

func (x *ListTrainingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTrainingResponse.ProtoReflect.Descriptor instead.
func (*ListTrainingResponse) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{14}
}

func (x *ListTrainingResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ListTrainingResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListTrainingResponse) GetRecords() []*TrainingItem {
	if x != nil {
		return x.Records
	}
	return nil
}

type StartTrainingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId   string `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	TrainingId string `protobuf:"bytes,2,opt,name=trainingId,proto3" json:"trainingId,omitempty" path:"trainingId"`
}

func (x *StartTrainingRequest) Reset() {
	*x = StartTrainingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTrainingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTrainingRequest) ProtoMessage() {}

func (x *StartTrainingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTrainingRequest.ProtoReflect.Descriptor instead.
func (*StartTrainingRequest) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{15}
}

func (x *StartTrainingRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *StartTrainingRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

type StartTrainingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId  string `protobuf:"bytes,1,opt,name=requestId,proto3" form:"requestId" json:"requestId,omitempty" query:"requestId"`
	TrainingId string `protobuf:"bytes,2,opt,name=trainingId,proto3" form:"trainingId" json:"trainingId,omitempty" query:"trainingId"`
}

func (x *StartTrainingResponse) Reset() {
	*x = StartTrainingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTrainingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTrainingResponse) ProtoMessage() {}

func (x *StartTrainingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTrainingResponse.ProtoReflect.Descriptor instead.
func (*StartTrainingResponse) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{16}
}

func (x *StartTrainingResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *StartTrainingResponse) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

type StopTrainingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId   string `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	TrainingId string `protobuf:"bytes,2,opt,name=trainingId,proto3" json:"trainingId,omitempty" path:"trainingId"`
}

func (x *StopTrainingRequest) Reset() {
	*x = StopTrainingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTrainingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTrainingRequest) ProtoMessage() {}

func (x *StopTrainingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTrainingRequest.ProtoReflect.Descriptor instead.
func (*StopTrainingRequest) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{17}
}

func (x *StopTrainingRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *StopTrainingRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

type StopTrainingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId  string `protobuf:"bytes,1,opt,name=requestId,proto3" form:"requestId" json:"requestId,omitempty" query:"requestId"`
	TrainingId string `protobuf:"bytes,2,opt,name=trainingId,proto3" form:"trainingId" json:"trainingId,omitempty" query:"trainingId"`
}

func (x *StopTrainingResponse) Reset() {
	*x = StopTrainingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTrainingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTrainingResponse) ProtoMessage() {}

func (x *StopTrainingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTrainingResponse.ProtoReflect.Descriptor instead.
func (*StopTrainingResponse) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{18}
}

func (x *StopTrainingResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *StopTrainingResponse) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

type GetTrainingEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId   string `protobuf:"bytes,1,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	TrainingId string `protobuf:"bytes,2,opt,name=trainingId,proto3" json:"trainingId,omitempty" path:"trainingId"`
}

func (x *GetTrainingEventRequest) Reset() {
	*x = GetTrainingEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrainingEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainingEventRequest) ProtoMessage() {}

func (x *GetTrainingEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainingEventRequest.ProtoReflect.Descriptor instead.
func (*GetTrainingEventRequest) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{19}
}

func (x *GetTrainingEventRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *GetTrainingEventRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

type GetTrainingEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string          `protobuf:"bytes,1,opt,name=requestId,proto3" form:"requestId" json:"requestId,omitempty" query:"requestId"`
	Events    []*common.Event `protobuf:"bytes,2,rep,name=events,proto3" form:"events" json:"events,omitempty" query:"events"`
}

func (x *GetTrainingEventResponse) Reset() {
	*x = GetTrainingEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrainingEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainingEventResponse) ProtoMessage() {}

func (x *GetTrainingEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainingEventResponse.ProtoReflect.Descriptor instead.
func (*GetTrainingEventResponse) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{20}
}

func (x *GetTrainingEventResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *GetTrainingEventResponse) GetEvents() []*common.Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type GetTrainingLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingId string `protobuf:"bytes,1,opt,name=trainingId,proto3" json:"trainingId,omitempty" path:"trainingId"`
	PodId      string `protobuf:"bytes,2,opt,name=podId,proto3" json:"podId,omitempty" path:"podId"`
	RegionId   string `protobuf:"bytes,3,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	StartTime  int32  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty" query:"startTime"`
	EndTime    int32  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty" query:"endTime"`
	Limit      int32  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty" query:"limit"`
	Reverse    bool   `protobuf:"varint,7,opt,name=reverse,proto3" json:"reverse,omitempty" query:"reverse"`
}

func (x *GetTrainingLogsRequest) Reset() {
	*x = GetTrainingLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrainingLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainingLogsRequest) ProtoMessage() {}

func (x *GetTrainingLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainingLogsRequest.ProtoReflect.Descriptor instead.
func (*GetTrainingLogsRequest) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{21}
}

func (x *GetTrainingLogsRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *GetTrainingLogsRequest) GetPodId() string {
	if x != nil {
		return x.PodId
	}
	return ""
}

func (x *GetTrainingLogsRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *GetTrainingLogsRequest) GetStartTime() int32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetTrainingLogsRequest) GetEndTime() int32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetTrainingLogsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetTrainingLogsRequest) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

type GetTrainingLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId  string   `protobuf:"bytes,1,opt,name=requestId,proto3" form:"requestId" json:"requestId,omitempty" query:"requestId"`
	TrainingId string   `protobuf:"bytes,2,opt,name=trainingId,proto3" form:"trainingId" json:"trainingId,omitempty" query:"trainingId"`
	Pod        string   `protobuf:"bytes,3,opt,name=pod,proto3" form:"pod" json:"pod,omitempty" query:"pod"`
	Logs       []string `protobuf:"bytes,4,rep,name=logs,proto3" form:"logs" json:"logs,omitempty" query:"logs"`
	Count      int32    `protobuf:"varint,5,opt,name=count,proto3" form:"count" json:"count,omitempty" query:"count"`
}

func (x *GetTrainingLogsResponse) Reset() {
	*x = GetTrainingLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrainingLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainingLogsResponse) ProtoMessage() {}

func (x *GetTrainingLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainingLogsResponse.ProtoReflect.Descriptor instead.
func (*GetTrainingLogsResponse) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{22}
}

func (x *GetTrainingLogsResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *GetTrainingLogsResponse) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *GetTrainingLogsResponse) GetPod() string {
	if x != nil {
		return x.Pod
	}
	return ""
}

func (x *GetTrainingLogsResponse) GetLogs() []string {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *GetTrainingLogsResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetTrainingLogCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingId string `protobuf:"bytes,1,opt,name=trainingId,proto3" json:"trainingId,omitempty" path:"trainingId"`
	PodId      string `protobuf:"bytes,2,opt,name=podId,proto3" json:"podId,omitempty" path:"podId"`
	RegionId   string `protobuf:"bytes,3,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
}

func (x *GetTrainingLogCodeRequest) Reset() {
	*x = GetTrainingLogCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrainingLogCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainingLogCodeRequest) ProtoMessage() {}

func (x *GetTrainingLogCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainingLogCodeRequest.ProtoReflect.Descriptor instead.
func (*GetTrainingLogCodeRequest) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{23}
}

func (x *GetTrainingLogCodeRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *GetTrainingLogCodeRequest) GetPodId() string {
	if x != nil {
		return x.PodId
	}
	return ""
}

func (x *GetTrainingLogCodeRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

type GetTrainingLogCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId   string `protobuf:"bytes,1,opt,name=requestId,proto3" form:"requestId" json:"requestId,omitempty" query:"requestId"`
	TrainingId  string `protobuf:"bytes,2,opt,name=trainingId,proto3" form:"trainingId" json:"trainingId,omitempty" query:"trainingId"`
	Pod         string `protobuf:"bytes,3,opt,name=pod,proto3" form:"pod" json:"pod,omitempty" query:"pod"`
	ProjectCode string `protobuf:"bytes,4,opt,name=projectCode,proto3" form:"projectCode" json:"projectCode,omitempty" query:"projectCode"`
	UnitCode    string `protobuf:"bytes,5,opt,name=unitCode,proto3" form:"unitCode" json:"unitCode,omitempty" query:"unitCode"`
}

func (x *GetTrainingLogCodeResponse) Reset() {
	*x = GetTrainingLogCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrainingLogCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainingLogCodeResponse) ProtoMessage() {}

func (x *GetTrainingLogCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainingLogCodeResponse.ProtoReflect.Descriptor instead.
func (*GetTrainingLogCodeResponse) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{24}
}

func (x *GetTrainingLogCodeResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *GetTrainingLogCodeResponse) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *GetTrainingLogCodeResponse) GetPod() string {
	if x != nil {
		return x.Pod
	}
	return ""
}

func (x *GetTrainingLogCodeResponse) GetProjectCode() string {
	if x != nil {
		return x.ProjectCode
	}
	return ""
}

func (x *GetTrainingLogCodeResponse) GetUnitCode() string {
	if x != nil {
		return x.UnitCode
	}
	return ""
}

type GetTrainingMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingId string `protobuf:"bytes,1,opt,name=trainingId,proto3" json:"trainingId,omitempty" path:"trainingId"`
	RegionId   string `protobuf:"bytes,2,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	TimeStep   int32  `protobuf:"varint,3,opt,name=timeStep,proto3" json:"timeStep,omitempty" query:"timeStep"`
	StartTime  int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty" query:"startTime"`
	EndTime    int64  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty" query:"endTime"`
	Type       string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty" query:"type"`
}

func (x *GetTrainingMetricsRequest) Reset() {
	*x = GetTrainingMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrainingMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainingMetricsRequest) ProtoMessage() {}

func (x *GetTrainingMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainingMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetTrainingMetricsRequest) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{25}
}

func (x *GetTrainingMetricsRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *GetTrainingMetricsRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *GetTrainingMetricsRequest) GetTimeStep() int32 {
	if x != nil {
		return x.TimeStep
	}
	return 0
}

func (x *GetTrainingMetricsRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetTrainingMetricsRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetTrainingMetricsRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type GetTrainingMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId  string `protobuf:"bytes,1,opt,name=requestId,proto3" form:"requestId" json:"requestId,omitempty" query:"requestId"`
	TrainingId string `protobuf:"bytes,2,opt,name=trainingId,proto3" form:"trainingId" json:"trainingId,omitempty" query:"trainingId"`
	Type       string `protobuf:"bytes,3,opt,name=type,proto3" form:"type" json:"type,omitempty" query:"type"`
	// repeated PodMetrics podMetrics = 4;
	Metrics []*apm.PrometheusMetricItem `protobuf:"bytes,4,rep,name=metrics,proto3" form:"metrics" json:"metrics,omitempty" query:"metrics"`
}

func (x *GetTrainingMetricsResponse) Reset() {
	*x = GetTrainingMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrainingMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainingMetricsResponse) ProtoMessage() {}

func (x *GetTrainingMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainingMetricsResponse.ProtoReflect.Descriptor instead.
func (*GetTrainingMetricsResponse) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{26}
}

func (x *GetTrainingMetricsResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *GetTrainingMetricsResponse) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *GetTrainingMetricsResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetTrainingMetricsResponse) GetMetrics() []*apm.PrometheusMetricItem {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type PodMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pod     string       `protobuf:"bytes,1,opt,name=pod,proto3" form:"pod" json:"pod,omitempty" query:"pod"`
	Metrics []*DataPoint `protobuf:"bytes,2,rep,name=metrics,proto3" form:"metrics" json:"metrics,omitempty" query:"metrics"`
}

func (x *PodMetrics) Reset() {
	*x = PodMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodMetrics) ProtoMessage() {}

func (x *PodMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodMetrics.ProtoReflect.Descriptor instead.
func (*PodMetrics) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{27}
}

func (x *PodMetrics) GetPod() string {
	if x != nil {
		return x.Pod
	}
	return ""
}

func (x *PodMetrics) GetMetrics() []*DataPoint {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type DataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time  int32 `protobuf:"varint,1,opt,name=time,proto3" form:"time" json:"time,omitempty" query:"time"`
	Value int32 `protobuf:"varint,2,opt,name=value,proto3" form:"value" json:"value,omitempty" query:"value"`
}

func (x *DataPoint) Reset() {
	*x = DataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPoint) ProtoMessage() {}

func (x *DataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPoint.ProtoReflect.Descriptor instead.
func (*DataPoint) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{28}
}

func (x *DataPoint) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *DataPoint) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type GetTrainingDashboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingId   string `protobuf:"bytes,1,opt,name=trainingId,proto3" json:"trainingId,omitempty" path:"trainingId"`
	RegionId     string `protobuf:"bytes,2,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
	InstanceId   string `protobuf:"bytes,3,opt,name=instanceId,proto3" json:"instanceId,omitempty" query:"instanceId"`
	InstanceName string `protobuf:"bytes,4,opt,name=instanceName,proto3" json:"instanceName,omitempty" query:"instanceName"`
	Type         string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty" query:"type"`
	Namespace    string `protobuf:"bytes,6,opt,name=namespace,proto3" json:"namespace,omitempty" query:"namespace"`
	TrainingName string `protobuf:"bytes,7,opt,name=trainingName,proto3" json:"trainingName,omitempty" query:"trainingName"`
}

func (x *GetTrainingDashboardRequest) Reset() {
	*x = GetTrainingDashboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrainingDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainingDashboardRequest) ProtoMessage() {}

func (x *GetTrainingDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainingDashboardRequest.ProtoReflect.Descriptor instead.
func (*GetTrainingDashboardRequest) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{29}
}

func (x *GetTrainingDashboardRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *GetTrainingDashboardRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *GetTrainingDashboardRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *GetTrainingDashboardRequest) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *GetTrainingDashboardRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetTrainingDashboardRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetTrainingDashboardRequest) GetTrainingName() string {
	if x != nil {
		return x.TrainingName
	}
	return ""
}

type GetTrainingDashboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId  string              `protobuf:"bytes,1,opt,name=requestId,proto3" form:"requestId" json:"requestId,omitempty" query:"requestId"`
	TrainingId string              `protobuf:"bytes,2,opt,name=trainingId,proto3" form:"trainingId" json:"trainingId,omitempty" query:"trainingId"`
	Type       string              `protobuf:"bytes,3,opt,name=type,proto3" form:"type" json:"type,omitempty" query:"type"`
	Dashboards []*common.Dashboard `protobuf:"bytes,4,rep,name=dashboards,proto3" form:"dashboards" json:"dashboards,omitempty" query:"dashboards"`
}

func (x *GetTrainingDashboardResponse) Reset() {
	*x = GetTrainingDashboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrainingDashboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainingDashboardResponse) ProtoMessage() {}

func (x *GetTrainingDashboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_training_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainingDashboardResponse.ProtoReflect.Descriptor instead.
func (*GetTrainingDashboardResponse) Descriptor() ([]byte, []int) {
	return file_training_proto_rawDescGZIP(), []int{30}
}

func (x *GetTrainingDashboardResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *GetTrainingDashboardResponse) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *GetTrainingDashboardResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetTrainingDashboardResponse) GetDashboards() []*common.Dashboard {
	if x != nil {
		return x.Dashboards
	}
	return nil
}

var File_training_proto protoreflect.FileDescriptor

var file_training_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69,
	0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x69,
	0x73, 0x75, 0x69, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xd9, 0x03, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba,
	0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x0a, 0xca, 0xbb, 0x18,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
	0x44, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x53,
	0x70, 0x65, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x6a,
	0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x3c, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xda, 0x03,
	0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x12, 0x25, 0x0a, 0x07, 0x6a, 0x6f, 0x62,
	0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07,
	0x6a, 0x6f, 0x62, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x3d, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x77, 0x6f, 0x72, 0x6b, 0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x12,
	0x39, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x41,
	0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0e, 0xca, 0xbb, 0x18, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1f, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xca, 0xbb, 0x18, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42,
	0x0c, 0xca, 0xbb, 0x18, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x0a, 0x74, 0x6f, 0x6c, 0x65, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0e,
	0xca, 0xbb, 0x18, 0x0a, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x0a,
	0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x0a, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x06, 0xca, 0xbb, 0x18, 0x02, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca,
	0xbb, 0x18, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a,
	0x09, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x09, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0x56, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x22, 0x71, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba,
	0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xd2, 0xbb, 0x18, 0x0a, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x9c, 0x02,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb, 0x18, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xd2, 0xbb, 0x18, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x12, 0x31, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x44, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0f,
	0xca, 0xbb, 0x18, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x56, 0x0a, 0x16,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x22, 0xf2, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xd2, 0xbb, 0x18, 0x0a, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x70, 0x6f, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4a,
	0x6f, 0x62, 0x50, 0x6f, 0x64, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x70, 0x6f, 0x64, 0x73, 0x52,
	0x04, 0x70, 0x6f, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x1c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0c, 0xba, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xd2, 0xbb, 0x18,
	0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x0a, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0xe6, 0x03, 0x0a, 0x0c, 0x54, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x33, 0x0a, 0x0b,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4a, 0x6f, 0x62,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x12, 0x21, 0x0a,
	0x04, 0x70, 0x6f, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4a, 0x6f, 0x62, 0x50, 0x6f, 0x64, 0x52, 0x04, 0x70, 0x6f, 0x64, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x87, 0x04, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb,
	0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xb2, 0xbb, 0x18, 0x09, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x0b, 0xb2, 0xbb, 0x18, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x52,
	0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x28, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0c, 0xb2, 0xbb, 0x18, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xb2, 0xbb, 0x18, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2b, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0d, 0xb2, 0xbb, 0x18, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x25, 0x0a,
	0x07, 0x6a, 0x6f, 0x62, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b,
	0xb2, 0xbb, 0x18, 0x07, 0x6a, 0x6f, 0x62, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x6a, 0x6f, 0x62,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xb2, 0xbb, 0x18, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74,
	0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xb2, 0xbb, 0x18, 0x06, 0x73, 0x6f,
	0x72, 0x74, 0x42, 0x79, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xb2, 0xbb, 0x18,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xb2, 0xbb,
	0x18, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12, 0x28,
	0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0c, 0xb2, 0xbb, 0x18, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xb2, 0xbb, 0x18, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0x83, 0x01, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x22, 0x70, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb,
	0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xd2, 0xbb, 0x18, 0x0a, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x13, 0x53,
	0x74, 0x6f, 0x70, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0e, 0xd2, 0xbb, 0x18, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x14,
	0x53, 0x74, 0x6f, 0x70, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x22, 0x73, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0c, 0xba, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xd2, 0xbb, 0x18,
	0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x0a, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xaf, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xd2, 0xbb, 0x18, 0x0a, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x70, 0x6f, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xd2, 0xbb, 0x18, 0x05, 0x70, 0x6f, 0x64, 0x49, 0x64, 0x52, 0x05, 0x70, 0x6f,
	0x64, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2b, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0d, 0xb2, 0xbb, 0x18, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xb2, 0xbb, 0x18,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x09, 0xb2, 0xbb, 0x18, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x25, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x42, 0x0b, 0xb2, 0xbb, 0x18, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x52, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x70, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x96, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4c,
	0x6f, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0e, 0xd2, 0xbb, 0x18, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x05, 0x70, 0x6f, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xd2, 0xbb,
	0x18, 0x05, 0x70, 0x6f, 0x64, 0x49, 0x64, 0x52, 0x05, 0x70, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0c, 0xba, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xaa, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x70, 0x6f, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x91, 0x02, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xd2, 0xbb, 0x18, 0x0a, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x65, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x0c, 0xb2, 0xbb, 0x18, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x65, 0x70, 0x52, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x65, 0x70, 0x12, 0x2b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xb2, 0xbb, 0x18, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0b, 0xb2, 0xbb, 0x18, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xb2, 0xbb, 0x18, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x22, 0x4a, 0x0a, 0x0a, 0x50, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x6f,
	0x64, 0x12, 0x2a, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x35, 0x0a,
	0x09, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xde, 0x02, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xd2, 0xbb, 0x18, 0x0a, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0e, 0xb2, 0xbb, 0x18, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x34,
	0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xb2, 0xbb, 0x18, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xb2, 0xbb, 0x18, 0x04, 0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xb2, 0xbb, 0x18, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x34, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xb2, 0xbb, 0x18, 0x0c, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x0a,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x32, 0xc1, 0x0c, 0x0a, 0x0f, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6b,
	0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0xd2,
	0xc1, 0x18, 0x18, 0x2f, 0x69, 0x73, 0x75, 0x69, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x78, 0x0a, 0x0e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0xe2, 0xc1, 0x18, 0x25,
	0x2f, 0x69, 0x73, 0x75, 0x69, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x7b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x7d, 0x12, 0x78, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0xda, 0xc1, 0x18, 0x25, 0x2f, 0x69, 0x73, 0x75, 0x69, 0x74,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x73, 0x2f, 0x7b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x7d, 0x12,
	0x96, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x35, 0xda, 0xc1, 0x18, 0x31, 0x2f, 0x69, 0x73, 0x75, 0x69, 0x74, 0x65, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x73, 0x2f, 0x7b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x7d, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x6f, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29,
	0xca, 0xc1, 0x18, 0x25, 0x2f, 0x69, 0x73, 0x75, 0x69, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x7b, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x7d, 0x12, 0x65, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1c, 0xca, 0xc1, 0x18, 0x18, 0x2f, 0x69, 0x73, 0x75, 0x69, 0x74, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x7b, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0xca, 0xc1,
	0x18, 0x2b, 0x2f, 0x69, 0x73, 0x75, 0x69, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x7b, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x7d, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x77, 0x0a,
	0x0c, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0xca, 0xc1, 0x18, 0x2a, 0x2f, 0x69, 0x73, 0x75,
	0x69, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x73, 0x2f, 0x7b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x7d, 0x2f, 0x73, 0x74, 0x6f, 0x70, 0x12, 0x85, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0xca, 0xc1,
	0x18, 0x2c, 0x2f, 0x69, 0x73, 0x75, 0x69, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x7b, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x7d, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x8d,
	0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4c, 0x6f,
	0x67, 0x73, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x3b, 0xca, 0xc1, 0x18, 0x37, 0x2f, 0x69, 0x73, 0x75, 0x69, 0x74, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x2f,
	0x7b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x7d, 0x2f, 0x70, 0x6f, 0x64,
	0x73, 0x2f, 0x7b, 0x70, 0x6f, 0x64, 0x49, 0x64, 0x7d, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x8c,
	0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0xca, 0xc1, 0x18, 0x2d,
	0x2f, 0x69, 0x73, 0x75, 0x69, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x7b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x7d, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x94, 0x01,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x33, 0xca, 0xc1, 0x18, 0x2f, 0x2f, 0x69, 0x73, 0x75, 0x69, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x7b, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x7d, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x1a, 0x28, 0x92, 0xce, 0x18, 0x24, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a,
	0x2f, 0x2f, 0x69, 0x73, 0x75, 0x69, 0x74, 0x65, 0x2d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e,
	0x63, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x74, 0x79, 0x75, 0x6e, 0x2e, 0x63, 0x6e, 0x42, 0x46,
	0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6c,
	0x65, 0x63, 0x6f, 0x6d, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x63,
	0x6f, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x69, 0x73, 0x75, 0x69, 0x74, 0x65, 0x2f, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_training_proto_rawDescOnce sync.Once
	file_training_proto_rawDescData = file_training_proto_rawDesc
)

func file_training_proto_rawDescGZIP() []byte {
	file_training_proto_rawDescOnce.Do(func() {
		file_training_proto_rawDescData = protoimpl.X.CompressGZIP(file_training_proto_rawDescData)
	})
	return file_training_proto_rawDescData
}

var file_training_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_training_proto_goTypes = []interface{}{
	(*CreateTrainingRequest)(nil),        // 0: proto.CreateTrainingRequest
	(*JobSpec)(nil),                      // 1: proto.JobSpec
	(*OutputInfo)(nil),                   // 2: proto.OutputInfo
	(*CreateTrainingResponse)(nil),       // 3: proto.CreateTrainingResponse
	(*DeleteTrainingRequest)(nil),        // 4: proto.DeleteTrainingRequest
	(*DeleteTrainingResponse)(nil),       // 5: proto.DeleteTrainingResponse
	(*UpdateTrainingRequest)(nil),        // 6: proto.UpdateTrainingRequest
	(*UpdateTrainingResponse)(nil),       // 7: proto.UpdateTrainingResponse
	(*UpdateTrainingStatusRequest)(nil),  // 8: proto.UpdateTrainingStatusRequest
	(*UpdateTrainingStatusResponse)(nil), // 9: proto.UpdateTrainingStatusResponse
	(*GetTrainingRequest)(nil),           // 10: proto.GetTrainingRequest
	(*GetTrainingResponse)(nil),          // 11: proto.GetTrainingResponse
	(*TrainingItem)(nil),                 // 12: proto.TrainingItem
	(*ListTrainingRequest)(nil),          // 13: proto.ListTrainingRequest
	(*ListTrainingResponse)(nil),         // 14: proto.ListTrainingResponse
	(*StartTrainingRequest)(nil),         // 15: proto.StartTrainingRequest
	(*StartTrainingResponse)(nil),        // 16: proto.StartTrainingResponse
	(*StopTrainingRequest)(nil),          // 17: proto.StopTrainingRequest
	(*StopTrainingResponse)(nil),         // 18: proto.StopTrainingResponse
	(*GetTrainingEventRequest)(nil),      // 19: proto.GetTrainingEventRequest
	(*GetTrainingEventResponse)(nil),     // 20: proto.GetTrainingEventResponse
	(*GetTrainingLogsRequest)(nil),       // 21: proto.GetTrainingLogsRequest
	(*GetTrainingLogsResponse)(nil),      // 22: proto.GetTrainingLogsResponse
	(*GetTrainingLogCodeRequest)(nil),    // 23: proto.GetTrainingLogCodeRequest
	(*GetTrainingLogCodeResponse)(nil),   // 24: proto.GetTrainingLogCodeResponse
	(*GetTrainingMetricsRequest)(nil),    // 25: proto.GetTrainingMetricsRequest
	(*GetTrainingMetricsResponse)(nil),   // 26: proto.GetTrainingMetricsResponse
	(*PodMetrics)(nil),                   // 27: proto.PodMetrics
	(*DataPoint)(nil),                    // 28: proto.DataPoint
	(*GetTrainingDashboardRequest)(nil),  // 29: proto.GetTrainingDashboardRequest
	(*GetTrainingDashboardResponse)(nil), // 30: proto.GetTrainingDashboardResponse
	(*common.Label)(nil),                 // 31: proto.Label
	(*common.Annotation)(nil),            // 32: proto.Annotation
	(*common.JobSettings)(nil),           // 33: proto.JobSettings
	(*common.Framework)(nil),             // 34: proto.Framework
	(*common.DatasetInfo)(nil),           // 35: proto.DatasetInfo
	(*common.Metadata)(nil),              // 36: proto.Metadata
	(*common.Toleration)(nil),            // 37: proto.Toleration
	(*common.JobPod)(nil),                // 38: proto.JobPod
	(*common.Event)(nil),                 // 39: proto.Event
	(*apm.PrometheusMetricItem)(nil),     // 40: proto.PrometheusMetricItem
	(*common.Dashboard)(nil),             // 41: proto.Dashboard
}
var file_training_proto_depIdxs = []int32{
	31, // 0: proto.CreateTrainingRequest.labels:type_name -> proto.Label
	32, // 1: proto.CreateTrainingRequest.annotations:type_name -> proto.Annotation
	1,  // 2: proto.CreateTrainingRequest.jobSpec:type_name -> proto.JobSpec
	33, // 3: proto.CreateTrainingRequest.settings:type_name -> proto.JobSettings
	34, // 4: proto.JobSpec.framework:type_name -> proto.Framework
	35, // 5: proto.JobSpec.dataset:type_name -> proto.DatasetInfo
	2,  // 6: proto.JobSpec.outputInfo:type_name -> proto.OutputInfo
	36, // 7: proto.JobSpec.metadata:type_name -> proto.Metadata
	37, // 8: proto.JobSpec.tolerances:type_name -> proto.Toleration
	31, // 9: proto.UpdateTrainingRequest.labels:type_name -> proto.Label
	32, // 10: proto.UpdateTrainingRequest.annotations:type_name -> proto.Annotation
	38, // 11: proto.UpdateTrainingStatusRequest.pods:type_name -> proto.JobPod
	12, // 12: proto.GetTrainingResponse.record:type_name -> proto.TrainingItem
	31, // 13: proto.TrainingItem.labels:type_name -> proto.Label
	32, // 14: proto.TrainingItem.annotations:type_name -> proto.Annotation
	1,  // 15: proto.TrainingItem.jobSpec:type_name -> proto.JobSpec
	38, // 16: proto.TrainingItem.pods:type_name -> proto.JobPod
	12, // 17: proto.ListTrainingResponse.records:type_name -> proto.TrainingItem
	39, // 18: proto.GetTrainingEventResponse.events:type_name -> proto.Event
	40, // 19: proto.GetTrainingMetricsResponse.metrics:type_name -> proto.PrometheusMetricItem
	28, // 20: proto.PodMetrics.metrics:type_name -> proto.DataPoint
	41, // 21: proto.GetTrainingDashboardResponse.dashboards:type_name -> proto.Dashboard
	0,  // 22: proto.TrainingService.CreateTraining:input_type -> proto.CreateTrainingRequest
	4,  // 23: proto.TrainingService.DeleteTraining:input_type -> proto.DeleteTrainingRequest
	6,  // 24: proto.TrainingService.UpdateTraining:input_type -> proto.UpdateTrainingRequest
	8,  // 25: proto.TrainingService.UpdateTrainingStatus:input_type -> proto.UpdateTrainingStatusRequest
	10, // 26: proto.TrainingService.GetTraining:input_type -> proto.GetTrainingRequest
	13, // 27: proto.TrainingService.ListTraining:input_type -> proto.ListTrainingRequest
	15, // 28: proto.TrainingService.StartTraining:input_type -> proto.StartTrainingRequest
	17, // 29: proto.TrainingService.StopTraining:input_type -> proto.StopTrainingRequest
	19, // 30: proto.TrainingService.GetTrainingEvent:input_type -> proto.GetTrainingEventRequest
	21, // 31: proto.TrainingService.GetTrainingLogs:input_type -> proto.GetTrainingLogsRequest
	25, // 32: proto.TrainingService.GetTrainingMetrics:input_type -> proto.GetTrainingMetricsRequest
	29, // 33: proto.TrainingService.GetTrainingDashboard:input_type -> proto.GetTrainingDashboardRequest
	3,  // 34: proto.TrainingService.CreateTraining:output_type -> proto.CreateTrainingResponse
	5,  // 35: proto.TrainingService.DeleteTraining:output_type -> proto.DeleteTrainingResponse
	7,  // 36: proto.TrainingService.UpdateTraining:output_type -> proto.UpdateTrainingResponse
	9,  // 37: proto.TrainingService.UpdateTrainingStatus:output_type -> proto.UpdateTrainingStatusResponse
	11, // 38: proto.TrainingService.GetTraining:output_type -> proto.GetTrainingResponse
	14, // 39: proto.TrainingService.ListTraining:output_type -> proto.ListTrainingResponse
	16, // 40: proto.TrainingService.StartTraining:output_type -> proto.StartTrainingResponse
	18, // 41: proto.TrainingService.StopTraining:output_type -> proto.StopTrainingResponse
	20, // 42: proto.TrainingService.GetTrainingEvent:output_type -> proto.GetTrainingEventResponse
	22, // 43: proto.TrainingService.GetTrainingLogs:output_type -> proto.GetTrainingLogsResponse
	26, // 44: proto.TrainingService.GetTrainingMetrics:output_type -> proto.GetTrainingMetricsResponse
	30, // 45: proto.TrainingService.GetTrainingDashboard:output_type -> proto.GetTrainingDashboardResponse
	34, // [34:46] is the sub-list for method output_type
	22, // [22:34] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_training_proto_init() }
func file_training_proto_init() {
	if File_training_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_training_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTrainingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutputInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTrainingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTrainingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTrainingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTrainingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTrainingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTrainingStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTrainingStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrainingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrainingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainingItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTrainingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTrainingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTrainingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTrainingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTrainingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTrainingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrainingEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrainingEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrainingLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrainingLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrainingLogCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrainingLogCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrainingMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrainingMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrainingDashboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrainingDashboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_training_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_training_proto_goTypes,
		DependencyIndexes: file_training_proto_depIdxs,
		MessageInfos:      file_training_proto_msgTypes,
	}.Build()
	File_training_proto = out.File
	file_training_proto_rawDesc = nil
	file_training_proto_goTypes = nil
	file_training_proto_depIdxs = nil
}
