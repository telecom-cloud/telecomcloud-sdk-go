// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v4.25.1
// source: virtualnode.proto

package virtualnode

import (
	_ "github.com/telecom-cloud/client-go/pkg/openapi/api"
	containergroup "github.com/telecom-cloud/telecomcloud-sdk-go/service/eci/types/containergroup"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateVirtualNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityGroupId string                   `protobuf:"bytes,1,opt,name=securityGroupId,proto3" form:"securityGroupId" json:"securityGroupId,omitempty" query:"securityGroupId" validate:"required"`
	VSwitchId       string                   `protobuf:"bytes,2,opt,name=vSwitchId,proto3" form:"vSwitchId" json:"vSwitchId,omitempty" query:"vSwitchId" validate:"required"`
	VpcId           string                   `protobuf:"bytes,3,opt,name=vpcId,proto3" form:"vpcId" json:"vpcId,omitempty" query:"vpcId" validate:"required"`
	VirtualNodeName string                   `protobuf:"bytes,4,opt,name=virtualNodeName,proto3" form:"virtualNodeName" json:"virtualNodeName,omitempty" query:"virtualNodeName"`
	KubeConfig      string                   `protobuf:"bytes,5,opt,name=kubeConfig,proto3" form:"kubeConfig" json:"kubeConfig,omitempty" query:"kubeConfig" validate:"required"`
	Tags            []*containergroup.Tag    `protobuf:"bytes,6,rep,name=tags,proto3" form:"tags" json:"tags,omitempty" query:"tags"`
	Taints          []*Taint                 `protobuf:"bytes,7,rep,name=taints,proto3" form:"taints" json:"taints,omitempty" query:"taints"`
	AzInfo          []*containergroup.AzInfo `protobuf:"bytes,8,rep,name=azInfo,proto3" form:"azInfo" json:"azInfo,omitempty" query:"azInfo" validate:"required"`
	// 该参数仅ToB接口支持
	MasterOrderId string `protobuf:"bytes,9,opt,name=masterOrderId,proto3" form:"masterOrderId" json:"masterOrderId,omitempty" query:"masterOrderId"`
	// 该参数仅ToB接口支持
	MasterResourceId string `protobuf:"bytes,10,opt,name=masterResourceId,proto3" form:"masterResourceId" json:"masterResourceId,omitempty" query:"masterResourceId"`
	// 该参数仅ToB接口支持
	Cpu float64 `protobuf:"fixed64,11,opt,name=cpu,proto3" form:"cpu" json:"cpu,omitempty" query:"cpu"`
	// 该参数仅ToB接口支持
	Memory float64 `protobuf:"fixed64,12,opt,name=memory,proto3" form:"memory" json:"memory,omitempty" query:"memory"`
	// 该参数仅ToB接口支持
	Environment []*Environment `protobuf:"bytes,13,rep,name=environment,proto3" form:"environment" json:"environment,omitempty" query:"environment"`
	// 该参数仅ToB接口支持
	Image    string `protobuf:"bytes,14,opt,name=image,proto3" form:"image" json:"image,omitempty" query:"image"`
	RegionId string `protobuf:"bytes,15,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
}

func (x *CreateVirtualNodeRequest) Reset() {
	*x = CreateVirtualNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualnode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVirtualNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtualNodeRequest) ProtoMessage() {}

func (x *CreateVirtualNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualnode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVirtualNodeRequest.ProtoReflect.Descriptor instead.
func (*CreateVirtualNodeRequest) Descriptor() ([]byte, []int) {
	return file_virtualnode_proto_rawDescGZIP(), []int{0}
}

func (x *CreateVirtualNodeRequest) GetSecurityGroupId() string {
	if x != nil {
		return x.SecurityGroupId
	}
	return ""
}

func (x *CreateVirtualNodeRequest) GetVSwitchId() string {
	if x != nil {
		return x.VSwitchId
	}
	return ""
}

func (x *CreateVirtualNodeRequest) GetVpcId() string {
	if x != nil {
		return x.VpcId
	}
	return ""
}

func (x *CreateVirtualNodeRequest) GetVirtualNodeName() string {
	if x != nil {
		return x.VirtualNodeName
	}
	return ""
}

func (x *CreateVirtualNodeRequest) GetKubeConfig() string {
	if x != nil {
		return x.KubeConfig
	}
	return ""
}

func (x *CreateVirtualNodeRequest) GetTags() []*containergroup.Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateVirtualNodeRequest) GetTaints() []*Taint {
	if x != nil {
		return x.Taints
	}
	return nil
}

func (x *CreateVirtualNodeRequest) GetAzInfo() []*containergroup.AzInfo {
	if x != nil {
		return x.AzInfo
	}
	return nil
}

func (x *CreateVirtualNodeRequest) GetMasterOrderId() string {
	if x != nil {
		return x.MasterOrderId
	}
	return ""
}

func (x *CreateVirtualNodeRequest) GetMasterResourceId() string {
	if x != nil {
		return x.MasterResourceId
	}
	return ""
}

func (x *CreateVirtualNodeRequest) GetCpu() float64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *CreateVirtualNodeRequest) GetMemory() float64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *CreateVirtualNodeRequest) GetEnvironment() []*Environment {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *CreateVirtualNodeRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CreateVirtualNodeRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

type Environment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" form:"key" json:"key,omitempty" query:"key"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" form:"value" json:"value,omitempty" query:"value"`
}

func (x *Environment) Reset() {
	*x = Environment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualnode_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Environment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Environment) ProtoMessage() {}

func (x *Environment) ProtoReflect() protoreflect.Message {
	mi := &file_virtualnode_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Environment.ProtoReflect.Descriptor instead.
func (*Environment) Descriptor() ([]byte, []int) {
	return file_virtualnode_proto_rawDescGZIP(), []int{1}
}

func (x *Environment) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Environment) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Taint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" form:"key" json:"key,omitempty" query:"key"`
	Value  string `protobuf:"bytes,2,opt,name=value,proto3" form:"value" json:"value,omitempty" query:"value"`
	Effect string `protobuf:"bytes,3,opt,name=effect,proto3" form:"effect" json:"effect,omitempty" query:"effect"`
}

func (x *Taint) Reset() {
	*x = Taint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualnode_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Taint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Taint) ProtoMessage() {}

func (x *Taint) ProtoReflect() protoreflect.Message {
	mi := &file_virtualnode_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Taint.ProtoReflect.Descriptor instead.
func (*Taint) Descriptor() ([]byte, []int) {
	return file_virtualnode_proto_rawDescGZIP(), []int{2}
}

func (x *Taint) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Taint) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Taint) GetEffect() string {
	if x != nil {
		return x.Effect
	}
	return ""
}

type CreateVirtualNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId     string `protobuf:"bytes,1,opt,name=requestId,proto3" form:"requestId" json:"requestId,omitempty" query:"requestId"`
	VirtualNodeId string `protobuf:"bytes,2,opt,name=virtualNodeId,proto3" form:"virtualNodeId" json:"virtualNodeId,omitempty" query:"virtualNodeId"`
}

func (x *CreateVirtualNodeResponse) Reset() {
	*x = CreateVirtualNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualnode_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVirtualNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtualNodeResponse) ProtoMessage() {}

func (x *CreateVirtualNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualnode_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVirtualNodeResponse.ProtoReflect.Descriptor instead.
func (*CreateVirtualNodeResponse) Descriptor() ([]byte, []int) {
	return file_virtualnode_proto_rawDescGZIP(), []int{3}
}

func (x *CreateVirtualNodeResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *CreateVirtualNodeResponse) GetVirtualNodeId() string {
	if x != nil {
		return x.VirtualNodeId
	}
	return ""
}

type DeleteVirtualNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtualNodeId string `protobuf:"bytes,1,opt,name=virtualNodeId,proto3" json:"virtualNodeId,omitempty" path:"virtualNodeId"`
	RegionId      string `protobuf:"bytes,2,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
}

func (x *DeleteVirtualNodeRequest) Reset() {
	*x = DeleteVirtualNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualnode_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVirtualNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVirtualNodeRequest) ProtoMessage() {}

func (x *DeleteVirtualNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualnode_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVirtualNodeRequest.ProtoReflect.Descriptor instead.
func (*DeleteVirtualNodeRequest) Descriptor() ([]byte, []int) {
	return file_virtualnode_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteVirtualNodeRequest) GetVirtualNodeId() string {
	if x != nil {
		return x.VirtualNodeId
	}
	return ""
}

func (x *DeleteVirtualNodeRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

type DeleteVirtualNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId     string `protobuf:"bytes,1,opt,name=requestId,proto3" form:"requestId" json:"requestId,omitempty" query:"requestId"`
	VirtualNodeId string `protobuf:"bytes,2,opt,name=virtualNodeId,proto3" form:"virtualNodeId" json:"virtualNodeId,omitempty" query:"virtualNodeId"`
}

func (x *DeleteVirtualNodeResponse) Reset() {
	*x = DeleteVirtualNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualnode_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVirtualNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVirtualNodeResponse) ProtoMessage() {}

func (x *DeleteVirtualNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualnode_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVirtualNodeResponse.ProtoReflect.Descriptor instead.
func (*DeleteVirtualNodeResponse) Descriptor() ([]byte, []int) {
	return file_virtualnode_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteVirtualNodeResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *DeleteVirtualNodeResponse) GetVirtualNodeId() string {
	if x != nil {
		return x.VirtualNodeId
	}
	return ""
}

type UpdateVirtualNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtualNodeId string                `protobuf:"bytes,1,opt,name=virtualNodeId,proto3" form:"virtualNodeId" json:"virtualNodeId,omitempty" query:"virtualNodeId" validate:"required"`
	Tags          []*containergroup.Tag `protobuf:"bytes,2,rep,name=tags,proto3" form:"tags" json:"tags,omitempty" query:"tags"`
	RegionId      string                `protobuf:"bytes,3,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
}

func (x *UpdateVirtualNodeRequest) Reset() {
	*x = UpdateVirtualNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualnode_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVirtualNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVirtualNodeRequest) ProtoMessage() {}

func (x *UpdateVirtualNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualnode_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVirtualNodeRequest.ProtoReflect.Descriptor instead.
func (*UpdateVirtualNodeRequest) Descriptor() ([]byte, []int) {
	return file_virtualnode_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateVirtualNodeRequest) GetVirtualNodeId() string {
	if x != nil {
		return x.VirtualNodeId
	}
	return ""
}

func (x *UpdateVirtualNodeRequest) GetTags() []*containergroup.Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UpdateVirtualNodeRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

type UpdateVirtualNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId     string `protobuf:"bytes,1,opt,name=requestId,proto3" form:"requestId" json:"requestId,omitempty" query:"requestId"`
	VirtualNodeId string `protobuf:"bytes,2,opt,name=virtualNodeId,proto3" form:"virtualNodeId" json:"virtualNodeId,omitempty" query:"virtualNodeId"`
}

func (x *UpdateVirtualNodeResponse) Reset() {
	*x = UpdateVirtualNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualnode_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVirtualNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVirtualNodeResponse) ProtoMessage() {}

func (x *UpdateVirtualNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualnode_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVirtualNodeResponse.ProtoReflect.Descriptor instead.
func (*UpdateVirtualNodeResponse) Descriptor() ([]byte, []int) {
	return file_virtualnode_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateVirtualNodeResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *UpdateVirtualNodeResponse) GetVirtualNodeId() string {
	if x != nil {
		return x.VirtualNodeId
	}
	return ""
}

type DescribeVirtualNodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtualNodeIds  string                `protobuf:"bytes,1,opt,name=virtualNodeIds,proto3" form:"virtualNodeIds" json:"virtualNodeIds,omitempty" query:"virtualNodeIds"`
	VirtualNodeName string                `protobuf:"bytes,2,opt,name=virtualNodeName,proto3" form:"virtualNodeName" json:"virtualNodeName,omitempty" query:"virtualNodeName"`
	Limit           int32                 `protobuf:"varint,3,opt,name=limit,proto3" form:"limit" json:"limit,omitempty" query:"limit"`
	Tags            []*containergroup.Tag `protobuf:"bytes,4,rep,name=tags,proto3" form:"tags" json:"tags,omitempty" query:"tags"`
	NextToken       string                `protobuf:"bytes,5,opt,name=nextToken,proto3" form:"nextToken" json:"nextToken,omitempty" query:"nextToken"`
	RegionId        string                `protobuf:"bytes,6,opt,name=regionId,proto3" header:"regionId" json:"regionId,omitempty"`
}

func (x *DescribeVirtualNodesRequest) Reset() {
	*x = DescribeVirtualNodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualnode_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVirtualNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVirtualNodesRequest) ProtoMessage() {}

func (x *DescribeVirtualNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualnode_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVirtualNodesRequest.ProtoReflect.Descriptor instead.
func (*DescribeVirtualNodesRequest) Descriptor() ([]byte, []int) {
	return file_virtualnode_proto_rawDescGZIP(), []int{8}
}

func (x *DescribeVirtualNodesRequest) GetVirtualNodeIds() string {
	if x != nil {
		return x.VirtualNodeIds
	}
	return ""
}

func (x *DescribeVirtualNodesRequest) GetVirtualNodeName() string {
	if x != nil {
		return x.VirtualNodeName
	}
	return ""
}

func (x *DescribeVirtualNodesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *DescribeVirtualNodesRequest) GetTags() []*containergroup.Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *DescribeVirtualNodesRequest) GetNextToken() string {
	if x != nil {
		return x.NextToken
	}
	return ""
}

func (x *DescribeVirtualNodesRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

type DescribeVirtualNodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId    string          `protobuf:"bytes,1,opt,name=requestId,proto3" form:"requestId" json:"requestId,omitempty" query:"requestId"`
	TotalCount   int32           `protobuf:"varint,2,opt,name=totalCount,proto3" form:"totalCount" json:"totalCount,omitempty" query:"totalCount"`
	VirtualNodes []*VirtualNodes `protobuf:"bytes,3,rep,name=virtualNodes,proto3" form:"virtualNodes" json:"virtualNodes,omitempty" query:"virtualNodes"`
	NextToken    string          `protobuf:"bytes,4,opt,name=nextToken,proto3" form:"nextToken" json:"nextToken,omitempty" query:"nextToken"`
}

func (x *DescribeVirtualNodesResponse) Reset() {
	*x = DescribeVirtualNodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualnode_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVirtualNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVirtualNodesResponse) ProtoMessage() {}

func (x *DescribeVirtualNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualnode_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVirtualNodesResponse.ProtoReflect.Descriptor instead.
func (*DescribeVirtualNodesResponse) Descriptor() ([]byte, []int) {
	return file_virtualnode_proto_rawDescGZIP(), []int{9}
}

func (x *DescribeVirtualNodesResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *DescribeVirtualNodesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *DescribeVirtualNodesResponse) GetVirtualNodes() []*VirtualNodes {
	if x != nil {
		return x.VirtualNodes
	}
	return nil
}

func (x *DescribeVirtualNodesResponse) GetNextToken() string {
	if x != nil {
		return x.NextToken
	}
	return ""
}

type VirtualNodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtualNodeId   string                          `protobuf:"bytes,1,opt,name=virtualNodeId,proto3" form:"virtualNodeId" json:"virtualNodeId,omitempty" query:"virtualNodeId"`
	VirtualNodeName string                          `protobuf:"bytes,2,opt,name=virtualNodeName,proto3" form:"virtualNodeName" json:"virtualNodeName,omitempty" query:"virtualNodeName"`
	Status          string                          `protobuf:"bytes,3,opt,name=status,proto3" form:"status" json:"status,omitempty" query:"status"`
	VpcId           string                          `protobuf:"bytes,4,opt,name=vpcId,proto3" form:"vpcId" json:"vpcId,omitempty" query:"vpcId"`
	CreatedTime     string                          `protobuf:"bytes,5,opt,name=createdTime,proto3" form:"createdTime" json:"createdTime,omitempty" query:"createdTime"`
	SecurityGroupId string                          `protobuf:"bytes,6,opt,name=securityGroupId,proto3" form:"securityGroupId" json:"securityGroupId,omitempty" query:"securityGroupId"`
	VSwitchId       string                          `protobuf:"bytes,7,opt,name=vSwitchId,proto3" form:"vSwitchId" json:"vSwitchId,omitempty" query:"vSwitchId"`
	Tags            []*containergroup.Tag           `protobuf:"bytes,8,rep,name=tags,proto3" form:"tags" json:"tags,omitempty" query:"tags"`
	IntranetIp      string                          `protobuf:"bytes,9,opt,name=intranetIp,proto3" form:"intranetIp" json:"intranetIp,omitempty" query:"intranetIp"`
	Events          []*containergroup.DescribeEvent `protobuf:"bytes,10,rep,name=events,proto3" form:"events" json:"events,omitempty" query:"events"`
	// 该参数仅ToB接口支持
	EciId  string  `protobuf:"bytes,11,opt,name=eciId,proto3" form:"eciId" json:"eciId,omitempty" query:"eciId"`
	Cpu    float64 `protobuf:"fixed64,12,opt,name=cpu,proto3" form:"cpu" json:"cpu,omitempty" query:"cpu"`
	Memory float64 `protobuf:"fixed64,13,opt,name=memory,proto3" form:"memory" json:"memory,omitempty" query:"memory"`
}

func (x *VirtualNodes) Reset() {
	*x = VirtualNodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualnode_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualNodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualNodes) ProtoMessage() {}

func (x *VirtualNodes) ProtoReflect() protoreflect.Message {
	mi := &file_virtualnode_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualNodes.ProtoReflect.Descriptor instead.
func (*VirtualNodes) Descriptor() ([]byte, []int) {
	return file_virtualnode_proto_rawDescGZIP(), []int{10}
}

func (x *VirtualNodes) GetVirtualNodeId() string {
	if x != nil {
		return x.VirtualNodeId
	}
	return ""
}

func (x *VirtualNodes) GetVirtualNodeName() string {
	if x != nil {
		return x.VirtualNodeName
	}
	return ""
}

func (x *VirtualNodes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *VirtualNodes) GetVpcId() string {
	if x != nil {
		return x.VpcId
	}
	return ""
}

func (x *VirtualNodes) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

func (x *VirtualNodes) GetSecurityGroupId() string {
	if x != nil {
		return x.SecurityGroupId
	}
	return ""
}

func (x *VirtualNodes) GetVSwitchId() string {
	if x != nil {
		return x.VSwitchId
	}
	return ""
}

func (x *VirtualNodes) GetTags() []*containergroup.Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *VirtualNodes) GetIntranetIp() string {
	if x != nil {
		return x.IntranetIp
	}
	return ""
}

func (x *VirtualNodes) GetEvents() []*containergroup.DescribeEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *VirtualNodes) GetEciId() string {
	if x != nil {
		return x.EciId
	}
	return ""
}

func (x *VirtualNodes) GetCpu() float64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *VirtualNodes) GetMemory() float64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

var File_virtualnode_proto protoreflect.FileDescriptor

var file_virtualnode_proto_rawDesc = []byte{
	0x0a, 0x11, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x70, 0x69, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x63, 0x69, 0x2f, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x9e, 0x05, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x41, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xca, 0xf3, 0x18, 0x13, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x22, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x09, 0x76, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xca, 0xf3, 0x18, 0x13, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52,
	0x09, 0x76, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x70,
	0x63, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xca, 0xf3, 0x18, 0x13, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x22, 0x52, 0x05, 0x76, 0x70, 0x63, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xca, 0xf3, 0x18, 0x13, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22,
	0x52, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x24, 0x0a, 0x06,
	0x74, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x74, 0x61, 0x69, 0x6e,
	0x74, 0x73, 0x12, 0x3e, 0x0a, 0x06, 0x61, 0x7a, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x7a, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x17, 0xca, 0xf3, 0x18, 0x13, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a,
	0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x06, 0x61, 0x7a, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x34,
	0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb,
	0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x47, 0x0a, 0x05, 0x54,
	0x61, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x22, 0x5f, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x0d, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x7d, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x37, 0x0a, 0x0d, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xd2, 0xbb, 0x18, 0x0d, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x52, 0x0d, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb,
	0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x0d, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0xa3, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0d, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xca, 0xf3, 0x18, 0x13, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x22, 0x52, 0x0d, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x19, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0xed, 0x01, 0x0a,
	0x1b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e,
	0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xb3, 0x01, 0x0a,
	0x1c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x0c, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0xa4, 0x03, 0x0a, 0x0c, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x70, 0x63, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x70, 0x63, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x76, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x76, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x49, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x49, 0x70, 0x12, 0x2c, 0x0a, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x63, 0x69,
	0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x63, 0x69, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x63, 0x70,
	0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x32, 0xcf, 0x04, 0x0a, 0x12, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x85, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0xd2, 0xc1, 0x18, 0x29, 0x2f,
	0x65, 0x63, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x94, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x3c, 0xe2, 0xc1, 0x18, 0x38, 0x2f, 0x65, 0x63, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x2f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65,
	0x2f, 0x3a, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x85, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0xd2, 0xc1, 0x18, 0x29, 0x2f, 0x65,
	0x63, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x91, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0xd2, 0xc1, 0x18, 0x2c, 0x2f,
	0x65, 0x63, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x4c, 0x5a, 0x4a, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x63, 0x6f,
	0x6d, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x65, 0x63, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x6e, 0x6f, 0x64, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_virtualnode_proto_rawDescOnce sync.Once
	file_virtualnode_proto_rawDescData = file_virtualnode_proto_rawDesc
)

func file_virtualnode_proto_rawDescGZIP() []byte {
	file_virtualnode_proto_rawDescOnce.Do(func() {
		file_virtualnode_proto_rawDescData = protoimpl.X.CompressGZIP(file_virtualnode_proto_rawDescData)
	})
	return file_virtualnode_proto_rawDescData
}

var file_virtualnode_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_virtualnode_proto_goTypes = []interface{}{
	(*CreateVirtualNodeRequest)(nil),     // 0: proto.CreateVirtualNodeRequest
	(*Environment)(nil),                  // 1: proto.Environment
	(*Taint)(nil),                        // 2: proto.Taint
	(*CreateVirtualNodeResponse)(nil),    // 3: proto.CreateVirtualNodeResponse
	(*DeleteVirtualNodeRequest)(nil),     // 4: proto.DeleteVirtualNodeRequest
	(*DeleteVirtualNodeResponse)(nil),    // 5: proto.DeleteVirtualNodeResponse
	(*UpdateVirtualNodeRequest)(nil),     // 6: proto.UpdateVirtualNodeRequest
	(*UpdateVirtualNodeResponse)(nil),    // 7: proto.UpdateVirtualNodeResponse
	(*DescribeVirtualNodesRequest)(nil),  // 8: proto.DescribeVirtualNodesRequest
	(*DescribeVirtualNodesResponse)(nil), // 9: proto.DescribeVirtualNodesResponse
	(*VirtualNodes)(nil),                 // 10: proto.VirtualNodes
	(*containergroup.Tag)(nil),           // 11: proto.Tag
	(*containergroup.AzInfo)(nil),        // 12: proto.AzInfo
	(*containergroup.DescribeEvent)(nil), // 13: proto.DescribeEvent
}
var file_virtualnode_proto_depIdxs = []int32{
	11, // 0: proto.CreateVirtualNodeRequest.tags:type_name -> proto.Tag
	2,  // 1: proto.CreateVirtualNodeRequest.taints:type_name -> proto.Taint
	12, // 2: proto.CreateVirtualNodeRequest.azInfo:type_name -> proto.AzInfo
	1,  // 3: proto.CreateVirtualNodeRequest.environment:type_name -> proto.Environment
	11, // 4: proto.UpdateVirtualNodeRequest.tags:type_name -> proto.Tag
	11, // 5: proto.DescribeVirtualNodesRequest.tags:type_name -> proto.Tag
	10, // 6: proto.DescribeVirtualNodesResponse.virtualNodes:type_name -> proto.VirtualNodes
	11, // 7: proto.VirtualNodes.tags:type_name -> proto.Tag
	13, // 8: proto.VirtualNodes.events:type_name -> proto.DescribeEvent
	0,  // 9: proto.VirtualNodeService.CreateVirtualNode:input_type -> proto.CreateVirtualNodeRequest
	4,  // 10: proto.VirtualNodeService.DeleteVirtualNode:input_type -> proto.DeleteVirtualNodeRequest
	6,  // 11: proto.VirtualNodeService.UpdateVirtualNode:input_type -> proto.UpdateVirtualNodeRequest
	8,  // 12: proto.VirtualNodeService.DescribeVirtualNodes:input_type -> proto.DescribeVirtualNodesRequest
	3,  // 13: proto.VirtualNodeService.CreateVirtualNode:output_type -> proto.CreateVirtualNodeResponse
	5,  // 14: proto.VirtualNodeService.DeleteVirtualNode:output_type -> proto.DeleteVirtualNodeResponse
	7,  // 15: proto.VirtualNodeService.UpdateVirtualNode:output_type -> proto.UpdateVirtualNodeResponse
	9,  // 16: proto.VirtualNodeService.DescribeVirtualNodes:output_type -> proto.DescribeVirtualNodesResponse
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_virtualnode_proto_init() }
func file_virtualnode_proto_init() {
	if File_virtualnode_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_virtualnode_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVirtualNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualnode_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Environment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualnode_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Taint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualnode_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVirtualNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualnode_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVirtualNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualnode_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVirtualNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualnode_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVirtualNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualnode_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVirtualNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualnode_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVirtualNodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualnode_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVirtualNodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualnode_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualNodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_virtualnode_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_virtualnode_proto_goTypes,
		DependencyIndexes: file_virtualnode_proto_depIdxs,
		MessageInfos:      file_virtualnode_proto_msgTypes,
	}.Build()
	File_virtualnode_proto = out.File
	file_virtualnode_proto_rawDesc = nil
	file_virtualnode_proto_goTypes = nil
	file_virtualnode_proto_depIdxs = nil
}
